// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: render_server.proto

#include "render_server.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_render_5fserver_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Pose_render_5fserver_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_render_5fserver_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Quat_render_5fserver_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_render_5fserver_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vec3_render_5fserver_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_render_5fserver_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vec4_render_5fserver_2eproto;
namespace sapien {
namespace Renderer {
namespace server {
namespace proto {
class EmptyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Empty> _instance;
} _Empty_default_instance_;
class IndexDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Index> _instance;
} _Index_default_instance_;
class IdDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Id> _instance;
} _Id_default_instance_;
class Vec3DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Vec3> _instance;
} _Vec3_default_instance_;
class Vec4DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Vec4> _instance;
} _Vec4_default_instance_;
class QuatDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Quat> _instance;
} _Quat_default_instance_;
class PoseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pose> _instance;
} _Pose_default_instance_;
class IdVec3DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IdVec3> _instance;
} _IdVec3_default_instance_;
class IdVec4DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IdVec4> _instance;
} _IdVec4_default_instance_;
class IdFloatDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IdFloat> _instance;
} _IdFloat_default_instance_;
class AddBodyMeshReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddBodyMeshReq> _instance;
} _AddBodyMeshReq_default_instance_;
class AddBodyPrimitiveReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddBodyPrimitiveReq> _instance;
} _AddBodyPrimitiveReq_default_instance_;
class RemoveBodyReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveBodyReq> _instance;
} _RemoveBodyReq_default_instance_;
class AddCameraReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddCameraReq> _instance;
} _AddCameraReq_default_instance_;
class RemoveCameraReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveCameraReq> _instance;
} _RemoveCameraReq_default_instance_;
class AddPointLightReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddPointLightReq> _instance;
} _AddPointLightReq_default_instance_;
class AddDirectionalLightReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddDirectionalLightReq> _instance;
} _AddDirectionalLightReq_default_instance_;
class RemoveLightReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveLightReq> _instance;
} _RemoveLightReq_default_instance_;
class EntityOrderReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EntityOrderReq> _instance;
} _EntityOrderReq_default_instance_;
class UpdateRenderReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateRenderReq> _instance;
} _UpdateRenderReq_default_instance_;
class BodyIdReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BodyIdReq> _instance;
} _BodyIdReq_default_instance_;
class TakePictureReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TakePictureReq> _instance;
} _TakePictureReq_default_instance_;
class CameraParamsReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CameraParamsReq> _instance;
} _CameraParamsReq_default_instance_;
}  // namespace proto
}  // namespace server
}  // namespace Renderer
}  // namespace sapien
static void InitDefaultsscc_info_AddBodyMeshReq_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_AddBodyMeshReq_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::AddBodyMeshReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::AddBodyMeshReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddBodyMeshReq_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AddBodyMeshReq_render_5fserver_2eproto}, {
      &scc_info_Vec3_render_5fserver_2eproto.base,}};

static void InitDefaultsscc_info_AddBodyPrimitiveReq_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_AddBodyPrimitiveReq_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::AddBodyPrimitiveReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::AddBodyPrimitiveReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddBodyPrimitiveReq_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AddBodyPrimitiveReq_render_5fserver_2eproto}, {
      &scc_info_Vec3_render_5fserver_2eproto.base,}};

static void InitDefaultsscc_info_AddCameraReq_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_AddCameraReq_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::AddCameraReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::AddCameraReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddCameraReq_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddCameraReq_render_5fserver_2eproto}, {}};

static void InitDefaultsscc_info_AddDirectionalLightReq_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_AddDirectionalLightReq_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::AddDirectionalLightReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::AddDirectionalLightReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddDirectionalLightReq_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AddDirectionalLightReq_render_5fserver_2eproto}, {
      &scc_info_Vec3_render_5fserver_2eproto.base,}};

static void InitDefaultsscc_info_AddPointLightReq_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_AddPointLightReq_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::AddPointLightReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::AddPointLightReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddPointLightReq_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AddPointLightReq_render_5fserver_2eproto}, {
      &scc_info_Vec3_render_5fserver_2eproto.base,}};

static void InitDefaultsscc_info_BodyIdReq_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_BodyIdReq_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::BodyIdReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::BodyIdReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BodyIdReq_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BodyIdReq_render_5fserver_2eproto}, {}};

static void InitDefaultsscc_info_CameraParamsReq_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_CameraParamsReq_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::CameraParamsReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::CameraParamsReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CameraParamsReq_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CameraParamsReq_render_5fserver_2eproto}, {}};

static void InitDefaultsscc_info_Empty_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_Empty_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::Empty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::Empty::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Empty_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Empty_render_5fserver_2eproto}, {}};

static void InitDefaultsscc_info_EntityOrderReq_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_EntityOrderReq_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::EntityOrderReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::EntityOrderReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EntityOrderReq_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EntityOrderReq_render_5fserver_2eproto}, {}};

static void InitDefaultsscc_info_Id_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_Id_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::Id();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::Id::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Id_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Id_render_5fserver_2eproto}, {}};

static void InitDefaultsscc_info_IdFloat_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_IdFloat_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::IdFloat();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::IdFloat::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IdFloat_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IdFloat_render_5fserver_2eproto}, {}};

static void InitDefaultsscc_info_IdVec3_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_IdVec3_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::IdVec3();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::IdVec3::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IdVec3_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_IdVec3_render_5fserver_2eproto}, {
      &scc_info_Vec3_render_5fserver_2eproto.base,}};

static void InitDefaultsscc_info_IdVec4_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_IdVec4_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::IdVec4();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::IdVec4::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IdVec4_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_IdVec4_render_5fserver_2eproto}, {
      &scc_info_Vec4_render_5fserver_2eproto.base,}};

static void InitDefaultsscc_info_Index_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_Index_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::Index();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::Index::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Index_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Index_render_5fserver_2eproto}, {}};

static void InitDefaultsscc_info_Pose_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_Pose_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::Pose();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::Pose::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Pose_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Pose_render_5fserver_2eproto}, {
      &scc_info_Vec3_render_5fserver_2eproto.base,
      &scc_info_Quat_render_5fserver_2eproto.base,}};

static void InitDefaultsscc_info_Quat_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_Quat_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::Quat();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::Quat::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Quat_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Quat_render_5fserver_2eproto}, {}};

static void InitDefaultsscc_info_RemoveBodyReq_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_RemoveBodyReq_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::RemoveBodyReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::RemoveBodyReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveBodyReq_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveBodyReq_render_5fserver_2eproto}, {}};

static void InitDefaultsscc_info_RemoveCameraReq_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_RemoveCameraReq_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::RemoveCameraReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::RemoveCameraReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveCameraReq_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveCameraReq_render_5fserver_2eproto}, {}};

static void InitDefaultsscc_info_RemoveLightReq_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_RemoveLightReq_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::RemoveLightReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::RemoveLightReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveLightReq_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveLightReq_render_5fserver_2eproto}, {}};

static void InitDefaultsscc_info_TakePictureReq_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_TakePictureReq_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::TakePictureReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::TakePictureReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TakePictureReq_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TakePictureReq_render_5fserver_2eproto}, {}};

static void InitDefaultsscc_info_UpdateRenderReq_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_UpdateRenderReq_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::UpdateRenderReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::UpdateRenderReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateRenderReq_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateRenderReq_render_5fserver_2eproto}, {
      &scc_info_Pose_render_5fserver_2eproto.base,}};

static void InitDefaultsscc_info_Vec3_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_Vec3_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::Vec3();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::Vec3::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vec3_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Vec3_render_5fserver_2eproto}, {}};

static void InitDefaultsscc_info_Vec4_render_5fserver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sapien::Renderer::server::proto::_Vec4_default_instance_;
    new (ptr) ::sapien::Renderer::server::proto::Vec4();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sapien::Renderer::server::proto::Vec4::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vec4_render_5fserver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Vec4_render_5fserver_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_render_5fserver_2eproto[23];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_render_5fserver_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_render_5fserver_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_render_5fserver_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Index, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Index, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Id, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Id, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Vec3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Vec3, x_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Vec3, y_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Vec3, z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Vec4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Vec4, x_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Vec4, y_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Vec4, z_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Vec4, w_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Quat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Quat, w_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Quat, x_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Quat, y_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Quat, z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Pose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Pose, p_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::Pose, q_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::IdVec3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::IdVec3, id_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::IdVec3, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::IdVec4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::IdVec4, id_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::IdVec4, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::IdFloat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::IdFloat, id_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::IdFloat, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddBodyMeshReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddBodyMeshReq, scene_id_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddBodyMeshReq, filename_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddBodyMeshReq, scale_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddBodyPrimitiveReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddBodyPrimitiveReq, scene_id_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddBodyPrimitiveReq, type_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddBodyPrimitiveReq, scale_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddBodyPrimitiveReq, material_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::RemoveBodyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::RemoveBodyReq, scene_id_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::RemoveBodyReq, body_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddCameraReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddCameraReq, scene_id_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddCameraReq, width_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddCameraReq, height_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddCameraReq, fovy_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddCameraReq, near_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddCameraReq, far_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddCameraReq, shader_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::RemoveCameraReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::RemoveCameraReq, scene_id_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::RemoveCameraReq, camera_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddPointLightReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddPointLightReq, scene_id_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddPointLightReq, position_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddPointLightReq, color_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddPointLightReq, shadow_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddPointLightReq, shadow_near_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddPointLightReq, shadow_far_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddPointLightReq, shadow_map_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddDirectionalLightReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddDirectionalLightReq, scene_id_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddDirectionalLightReq, direction_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddDirectionalLightReq, color_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddDirectionalLightReq, shadow_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddDirectionalLightReq, position_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddDirectionalLightReq, shadow_scale_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddDirectionalLightReq, shadow_near_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddDirectionalLightReq, shadow_far_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::AddDirectionalLightReq, shadow_map_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::RemoveLightReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::RemoveLightReq, scene_id_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::RemoveLightReq, light_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::EntityOrderReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::EntityOrderReq, scene_id_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::EntityOrderReq, body_ids_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::EntityOrderReq, camera_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::UpdateRenderReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::UpdateRenderReq, scene_id_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::UpdateRenderReq, body_poses_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::UpdateRenderReq, camera_poses_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::BodyIdReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::BodyIdReq, scene_id_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::BodyIdReq, body_id_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::BodyIdReq, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::TakePictureReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::TakePictureReq, scene_id_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::TakePictureReq, camera_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::CameraParamsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::CameraParamsReq, scene_id_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::CameraParamsReq, camera_id_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::CameraParamsReq, near_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::CameraParamsReq, far_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::CameraParamsReq, fx_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::CameraParamsReq, fy_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::CameraParamsReq, cx_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::CameraParamsReq, cy_),
  PROTOBUF_FIELD_OFFSET(::sapien::Renderer::server::proto::CameraParamsReq, skew_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::sapien::Renderer::server::proto::Empty)},
  { 5, -1, sizeof(::sapien::Renderer::server::proto::Index)},
  { 11, -1, sizeof(::sapien::Renderer::server::proto::Id)},
  { 17, -1, sizeof(::sapien::Renderer::server::proto::Vec3)},
  { 25, -1, sizeof(::sapien::Renderer::server::proto::Vec4)},
  { 34, -1, sizeof(::sapien::Renderer::server::proto::Quat)},
  { 43, -1, sizeof(::sapien::Renderer::server::proto::Pose)},
  { 50, -1, sizeof(::sapien::Renderer::server::proto::IdVec3)},
  { 57, -1, sizeof(::sapien::Renderer::server::proto::IdVec4)},
  { 64, -1, sizeof(::sapien::Renderer::server::proto::IdFloat)},
  { 71, -1, sizeof(::sapien::Renderer::server::proto::AddBodyMeshReq)},
  { 79, -1, sizeof(::sapien::Renderer::server::proto::AddBodyPrimitiveReq)},
  { 88, -1, sizeof(::sapien::Renderer::server::proto::RemoveBodyReq)},
  { 95, -1, sizeof(::sapien::Renderer::server::proto::AddCameraReq)},
  { 107, -1, sizeof(::sapien::Renderer::server::proto::RemoveCameraReq)},
  { 114, -1, sizeof(::sapien::Renderer::server::proto::AddPointLightReq)},
  { 126, -1, sizeof(::sapien::Renderer::server::proto::AddDirectionalLightReq)},
  { 140, -1, sizeof(::sapien::Renderer::server::proto::RemoveLightReq)},
  { 147, -1, sizeof(::sapien::Renderer::server::proto::EntityOrderReq)},
  { 155, -1, sizeof(::sapien::Renderer::server::proto::UpdateRenderReq)},
  { 163, -1, sizeof(::sapien::Renderer::server::proto::BodyIdReq)},
  { 171, -1, sizeof(::sapien::Renderer::server::proto::TakePictureReq)},
  { 178, -1, sizeof(::sapien::Renderer::server::proto::CameraParamsReq)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_Empty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_Index_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_Id_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_Vec3_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_Vec4_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_Quat_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_Pose_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_IdVec3_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_IdVec4_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_IdFloat_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_AddBodyMeshReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_AddBodyPrimitiveReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_RemoveBodyReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_AddCameraReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_RemoveCameraReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_AddPointLightReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_AddDirectionalLightReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_RemoveLightReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_EntityOrderReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_UpdateRenderReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_BodyIdReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_TakePictureReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sapien::Renderer::server::proto::_CameraParamsReq_default_instance_),
};

const char descriptor_table_protodef_render_5fserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023render_server.proto\022\034sapien.Renderer.s"
  "erver.proto\"\007\n\005Empty\"\026\n\005Index\022\r\n\005index\030\001"
  " \001(\004\"\020\n\002Id\022\n\n\002id\030\001 \001(\004\"\'\n\004Vec3\022\t\n\001x\030\001 \001("
  "\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"2\n\004Vec4\022\t\n\001x\030\001 \001"
  "(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\022\t\n\001w\030\004 \001(\002\"2\n\004Q"
  "uat\022\t\n\001w\030\001 \001(\002\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002\022\t\n\001"
  "z\030\004 \001(\002\"d\n\004Pose\022-\n\001p\030\001 \001(\0132\".sapien.Rend"
  "erer.server.proto.Vec3\022-\n\001q\030\002 \001(\0132\".sapi"
  "en.Renderer.server.proto.Quat\"F\n\006IdVec3\022"
  "\n\n\002id\030\001 \001(\004\0220\n\004data\030\002 \001(\0132\".sapien.Rende"
  "rer.server.proto.Vec3\"F\n\006IdVec4\022\n\n\002id\030\001 "
  "\001(\004\0220\n\004data\030\002 \001(\0132\".sapien.Renderer.serv"
  "er.proto.Vec4\"#\n\007IdFloat\022\n\n\002id\030\001 \001(\004\022\014\n\004"
  "data\030\002 \001(\002\"g\n\016AddBodyMeshReq\022\020\n\010scene_id"
  "\030\001 \001(\004\022\020\n\010filename\030\002 \001(\t\0221\n\005scale\030\003 \001(\0132"
  "\".sapien.Renderer.server.proto.Vec3\"\247\001\n\023"
  "AddBodyPrimitiveReq\022\020\n\010scene_id\030\001 \001(\004\0229\n"
  "\004type\030\002 \001(\0162+.sapien.Renderer.server.pro"
  "to.PrimitiveType\0221\n\005scale\030\003 \001(\0132\".sapien"
  ".Renderer.server.proto.Vec3\022\020\n\010material\030"
  "\004 \001(\004\"2\n\rRemoveBodyReq\022\020\n\010scene_id\030\001 \001(\004"
  "\022\017\n\007body_id\030\002 \001(\004\"x\n\014AddCameraReq\022\020\n\010sce"
  "ne_id\030\001 \001(\004\022\r\n\005width\030\002 \001(\r\022\016\n\006height\030\003 \001"
  "(\r\022\014\n\004fovy\030\004 \001(\002\022\014\n\004near\030\005 \001(\002\022\013\n\003far\030\006 "
  "\001(\002\022\016\n\006shader\030\007 \001(\t\"6\n\017RemoveCameraReq\022\020"
  "\n\010scene_id\030\001 \001(\004\022\021\n\tcamera_id\030\002 \001(\004\"\337\001\n\020"
  "AddPointLightReq\022\020\n\010scene_id\030\001 \001(\004\0224\n\010po"
  "sition\030\002 \001(\0132\".sapien.Renderer.server.pr"
  "oto.Vec3\0221\n\005color\030\003 \001(\0132\".sapien.Rendere"
  "r.server.proto.Vec3\022\016\n\006shadow\030\004 \001(\010\022\023\n\013s"
  "hadow_near\030\005 \001(\002\022\022\n\nshadow_far\030\006 \001(\002\022\027\n\017"
  "shadow_map_size\030\007 \001(\005\"\262\002\n\026AddDirectional"
  "LightReq\022\020\n\010scene_id\030\001 \001(\004\0225\n\tdirection\030"
  "\002 \001(\0132\".sapien.Renderer.server.proto.Vec"
  "3\0221\n\005color\030\003 \001(\0132\".sapien.Renderer.serve"
  "r.proto.Vec3\022\016\n\006shadow\030\004 \001(\010\0224\n\010position"
  "\030\005 \001(\0132\".sapien.Renderer.server.proto.Ve"
  "c3\022\024\n\014shadow_scale\030\006 \001(\002\022\023\n\013shadow_near\030"
  "\007 \001(\002\022\022\n\nshadow_far\030\010 \001(\002\022\027\n\017shadow_map_"
  "size\030\t \001(\005\"4\n\016RemoveLightReq\022\020\n\010scene_id"
  "\030\001 \001(\004\022\020\n\010light_id\030\002 \001(\004\"P\n\016EntityOrderR"
  "eq\022\020\n\010scene_id\030\001 \001(\004\022\024\n\010body_ids\030\002 \003(\004B\002"
  "\020\001\022\026\n\ncamera_ids\030\003 \003(\004B\002\020\001\"\225\001\n\017UpdateRen"
  "derReq\022\020\n\010scene_id\030\001 \001(\004\0226\n\nbody_poses\030\002"
  " \003(\0132\".sapien.Renderer.server.proto.Pose"
  "\0228\n\014camera_poses\030\003 \003(\0132\".sapien.Renderer"
  ".server.proto.Pose\":\n\tBodyIdReq\022\020\n\010scene"
  "_id\030\001 \001(\004\022\017\n\007body_id\030\002 \001(\004\022\n\n\002id\030\003 \001(\r\"5"
  "\n\016TakePictureReq\022\020\n\010scene_id\030\001 \001(\004\022\021\n\tca"
  "mera_id\030\002 \001(\004\"\217\001\n\017CameraParamsReq\022\020\n\010sce"
  "ne_id\030\001 \001(\004\022\021\n\tcamera_id\030\002 \001(\004\022\014\n\004near\030\003"
  " \001(\002\022\013\n\003far\030\004 \001(\002\022\n\n\002fx\030\005 \001(\002\022\n\n\002fy\030\006 \001("
  "\002\022\n\n\002cx\030\007 \001(\002\022\n\n\002cy\030\010 \001(\002\022\014\n\004skew\030\t \001(\002*"
  "<\n\rPrimitiveType\022\n\n\006SPHERE\020\000\022\007\n\003BOX\020\001\022\013\n"
  "\007CAPSULE\020\002\022\t\n\005PLANE\020\0032\343\017\n\rRenderService\022"
  "T\n\013CreateScene\022#.sapien.Renderer.server."
  "proto.Index\032 .sapien.Renderer.server.pro"
  "to.Id\022T\n\013RemoveScene\022 .sapien.Renderer.s"
  "erver.proto.Id\032#.sapien.Renderer.server."
  "proto.Empty\022W\n\016CreateMaterial\022#.sapien.R"
  "enderer.server.proto.Empty\032 .sapien.Rend"
  "erer.server.proto.Id\022W\n\016RemoveMaterial\022 "
  ".sapien.Renderer.server.proto.Id\032#.sapie"
  "n.Renderer.server.proto.Empty\022]\n\013AddBody"
  "Mesh\022,.sapien.Renderer.server.proto.AddB"
  "odyMeshReq\032 .sapien.Renderer.server.prot"
  "o.Id\022g\n\020AddBodyPrimitive\0221.sapien.Render"
  "er.server.proto.AddBodyPrimitiveReq\032 .sa"
  "pien.Renderer.server.proto.Id\022^\n\nRemoveB"
  "ody\022+.sapien.Renderer.server.proto.Remov"
  "eBodyReq\032#.sapien.Renderer.server.proto."
  "Empty\022Y\n\tAddCamera\022*.sapien.Renderer.ser"
  "ver.proto.AddCameraReq\032 .sapien.Renderer"
  ".server.proto.Id\022\\\n\017SetAmbientLight\022$.sa"
  "pien.Renderer.server.proto.IdVec3\032#.sapi"
  "en.Renderer.server.proto.Empty\022a\n\rAddPoi"
  "ntLight\022..sapien.Renderer.server.proto.A"
  "ddPointLightReq\032 .sapien.Renderer.server"
  ".proto.Id\022m\n\023AddDirectionalLight\0224.sapie"
  "n.Renderer.server.proto.AddDirectionalLi"
  "ghtReq\032 .sapien.Renderer.server.proto.Id"
  "\022c\n\016SetEntityOrder\022,.sapien.Renderer.ser"
  "ver.proto.EntityOrderReq\032#.sapien.Render"
  "er.server.proto.Empty\022b\n\014UpdateRender\022-."
  "sapien.Renderer.server.proto.UpdateRende"
  "rReq\032#.sapien.Renderer.server.proto.Empt"
  "y\022Y\n\014SetBaseColor\022$.sapien.Renderer.serv"
  "er.proto.IdVec4\032#.sapien.Renderer.server"
  ".proto.Empty\022Z\n\014SetRoughness\022%.sapien.Re"
  "nderer.server.proto.IdFloat\032#.sapien.Ren"
  "derer.server.proto.Empty\022Y\n\013SetSpecular\022"
  "%.sapien.Renderer.server.proto.IdFloat\032#"
  ".sapien.Renderer.server.proto.Empty\022Y\n\013S"
  "etMetallic\022%.sapien.Renderer.server.prot"
  "o.IdFloat\032#.sapien.Renderer.server.proto"
  ".Empty\022[\n\013SetUniqueId\022\'.sapien.Renderer."
  "server.proto.BodyIdReq\032#.sapien.Renderer"
  ".server.proto.Empty\022a\n\021SetSegmentationId"
  "\022\'.sapien.Renderer.server.proto.BodyIdRe"
  "q\032#.sapien.Renderer.server.proto.Empty\022`"
  "\n\013TakePicture\022,.sapien.Renderer.server.p"
  "roto.TakePictureReq\032#.sapien.Renderer.se"
  "rver.proto.Empty\022i\n\023SetCameraParameters\022"
  "-.sapien.Renderer.server.proto.CameraPar"
  "amsReq\032#.sapien.Renderer.server.proto.Em"
  "ptyb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_render_5fserver_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_render_5fserver_2eproto_sccs[23] = {
  &scc_info_AddBodyMeshReq_render_5fserver_2eproto.base,
  &scc_info_AddBodyPrimitiveReq_render_5fserver_2eproto.base,
  &scc_info_AddCameraReq_render_5fserver_2eproto.base,
  &scc_info_AddDirectionalLightReq_render_5fserver_2eproto.base,
  &scc_info_AddPointLightReq_render_5fserver_2eproto.base,
  &scc_info_BodyIdReq_render_5fserver_2eproto.base,
  &scc_info_CameraParamsReq_render_5fserver_2eproto.base,
  &scc_info_Empty_render_5fserver_2eproto.base,
  &scc_info_EntityOrderReq_render_5fserver_2eproto.base,
  &scc_info_Id_render_5fserver_2eproto.base,
  &scc_info_IdFloat_render_5fserver_2eproto.base,
  &scc_info_IdVec3_render_5fserver_2eproto.base,
  &scc_info_IdVec4_render_5fserver_2eproto.base,
  &scc_info_Index_render_5fserver_2eproto.base,
  &scc_info_Pose_render_5fserver_2eproto.base,
  &scc_info_Quat_render_5fserver_2eproto.base,
  &scc_info_RemoveBodyReq_render_5fserver_2eproto.base,
  &scc_info_RemoveCameraReq_render_5fserver_2eproto.base,
  &scc_info_RemoveLightReq_render_5fserver_2eproto.base,
  &scc_info_TakePictureReq_render_5fserver_2eproto.base,
  &scc_info_UpdateRenderReq_render_5fserver_2eproto.base,
  &scc_info_Vec3_render_5fserver_2eproto.base,
  &scc_info_Vec4_render_5fserver_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_render_5fserver_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_render_5fserver_2eproto = {
  false, false, descriptor_table_protodef_render_5fserver_2eproto, "render_server.proto", 4211,
  &descriptor_table_render_5fserver_2eproto_once, descriptor_table_render_5fserver_2eproto_sccs, descriptor_table_render_5fserver_2eproto_deps, 23, 0,
  schemas, file_default_instances, TableStruct_render_5fserver_2eproto::offsets,
  file_level_metadata_render_5fserver_2eproto, 23, file_level_enum_descriptors_render_5fserver_2eproto, file_level_service_descriptors_render_5fserver_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_render_5fserver_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_render_5fserver_2eproto)), true);
namespace sapien {
namespace Renderer {
namespace server {
namespace proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PrimitiveType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_render_5fserver_2eproto);
  return file_level_enum_descriptors_render_5fserver_2eproto[0];
}
bool PrimitiveType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
class Empty::_Internal {
 public:
};

Empty::Empty(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.Empty)
}
Empty::Empty(const Empty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.Empty)
}

void Empty::SharedCtor() {
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.Empty)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Empty::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Empty::ArenaDtor(void* object) {
  Empty* _this = reinterpret_cast< Empty* >(object);
  (void)_this;
}
void Empty::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Empty& Empty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Empty_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Empty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Empty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.Empty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Empty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Empty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.Empty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Empty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Index::InitAsDefaultInstance() {
}
class Index::_Internal {
 public:
};

Index::Index(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.Index)
}
Index::Index(const Index& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.Index)
}

void Index::SharedCtor() {
  index_ = PROTOBUF_ULONGLONG(0);
}

Index::~Index() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.Index)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Index::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Index::ArenaDtor(void* object) {
  Index* _this = reinterpret_cast< Index* >(object);
  (void)_this;
}
void Index::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Index::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Index& Index::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Index_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void Index::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.Index)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Index::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Index::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.Index)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 index = 1;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.Index)
  return target;
}

size_t Index::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.Index)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Index::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.Index)
  GOOGLE_DCHECK_NE(&from, this);
  const Index* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Index>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.Index)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.Index)
    MergeFrom(*source);
  }
}

void Index::MergeFrom(const Index& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.Index)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void Index::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.Index)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Index::CopyFrom(const Index& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.Index)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Index::IsInitialized() const {
  return true;
}

void Index::InternalSwap(Index* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(index_, other->index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Index::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Id::InitAsDefaultInstance() {
}
class Id::_Internal {
 public:
};

Id::Id(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.Id)
}
Id::Id(const Id& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.Id)
}

void Id::SharedCtor() {
  id_ = PROTOBUF_ULONGLONG(0);
}

Id::~Id() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.Id)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Id::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Id::ArenaDtor(void* object) {
  Id* _this = reinterpret_cast< Id* >(object);
  (void)_this;
}
void Id::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Id::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Id& Id::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Id_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void Id::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.Id)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Id::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Id::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.Id)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.Id)
  return target;
}

size_t Id::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.Id)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Id::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.Id)
  GOOGLE_DCHECK_NE(&from, this);
  const Id* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Id>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.Id)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.Id)
    MergeFrom(*source);
  }
}

void Id::MergeFrom(const Id& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.Id)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void Id::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.Id)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Id::CopyFrom(const Id& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.Id)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Id::IsInitialized() const {
  return true;
}

void Id::InternalSwap(Id* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Id::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Vec3::InitAsDefaultInstance() {
}
class Vec3::_Internal {
 public:
};

Vec3::Vec3(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.Vec3)
}
Vec3::Vec3(const Vec3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.Vec3)
}

void Vec3::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

Vec3::~Vec3() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.Vec3)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Vec3::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Vec3::ArenaDtor(void* object) {
  Vec3* _this = reinterpret_cast< Vec3* >(object);
  (void)_this;
}
void Vec3::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Vec3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Vec3& Vec3::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Vec3_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void Vec3::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.Vec3)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Vec3::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Vec3::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.Vec3)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_x(), target);
  }

  // float y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_y(), target);
  }

  // float z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.Vec3)
  return target;
}

size_t Vec3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.Vec3)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vec3::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.Vec3)
  GOOGLE_DCHECK_NE(&from, this);
  const Vec3* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Vec3>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.Vec3)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.Vec3)
    MergeFrom(*source);
  }
}

void Vec3::MergeFrom(const Vec3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.Vec3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
  if (!(from.z() <= 0 && from.z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
}

void Vec3::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.Vec3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vec3::CopyFrom(const Vec3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.Vec3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vec3::IsInitialized() const {
  return true;
}

void Vec3::InternalSwap(Vec3* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vec3, z_)
      + sizeof(Vec3::z_)
      - PROTOBUF_FIELD_OFFSET(Vec3, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Vec3::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Vec4::InitAsDefaultInstance() {
}
class Vec4::_Internal {
 public:
};

Vec4::Vec4(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.Vec4)
}
Vec4::Vec4(const Vec4& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&w_) -
    reinterpret_cast<char*>(&x_)) + sizeof(w_));
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.Vec4)
}

void Vec4::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&w_) -
      reinterpret_cast<char*>(&x_)) + sizeof(w_));
}

Vec4::~Vec4() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.Vec4)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Vec4::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Vec4::ArenaDtor(void* object) {
  Vec4* _this = reinterpret_cast< Vec4* >(object);
  (void)_this;
}
void Vec4::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Vec4::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Vec4& Vec4::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Vec4_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void Vec4::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.Vec4)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&w_) -
      reinterpret_cast<char*>(&x_)) + sizeof(w_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Vec4::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float w = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          w_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Vec4::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.Vec4)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_x(), target);
  }

  // float y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_y(), target);
  }

  // float z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_z(), target);
  }

  // float w = 4;
  if (!(this->w() <= 0 && this->w() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_w(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.Vec4)
  return target;
}

size_t Vec4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.Vec4)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    total_size += 1 + 4;
  }

  // float w = 4;
  if (!(this->w() <= 0 && this->w() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vec4::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.Vec4)
  GOOGLE_DCHECK_NE(&from, this);
  const Vec4* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Vec4>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.Vec4)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.Vec4)
    MergeFrom(*source);
  }
}

void Vec4::MergeFrom(const Vec4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.Vec4)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
  if (!(from.z() <= 0 && from.z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
  if (!(from.w() <= 0 && from.w() >= 0)) {
    _internal_set_w(from._internal_w());
  }
}

void Vec4::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.Vec4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vec4::CopyFrom(const Vec4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.Vec4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vec4::IsInitialized() const {
  return true;
}

void Vec4::InternalSwap(Vec4* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vec4, w_)
      + sizeof(Vec4::w_)
      - PROTOBUF_FIELD_OFFSET(Vec4, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Vec4::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Quat::InitAsDefaultInstance() {
}
class Quat::_Internal {
 public:
};

Quat::Quat(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.Quat)
}
Quat::Quat(const Quat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&w_, &from.w_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&w_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.Quat)
}

void Quat::SharedCtor() {
  ::memset(&w_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&w_)) + sizeof(z_));
}

Quat::~Quat() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.Quat)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Quat::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Quat::ArenaDtor(void* object) {
  Quat* _this = reinterpret_cast< Quat* >(object);
  (void)_this;
}
void Quat::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Quat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Quat& Quat::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Quat_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void Quat::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.Quat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&w_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&w_)) + sizeof(z_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Quat::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float w = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          w_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float x = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float y = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float z = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Quat::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.Quat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float w = 1;
  if (!(this->w() <= 0 && this->w() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_w(), target);
  }

  // float x = 2;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_x(), target);
  }

  // float y = 3;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_y(), target);
  }

  // float z = 4;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.Quat)
  return target;
}

size_t Quat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.Quat)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float w = 1;
  if (!(this->w() <= 0 && this->w() >= 0)) {
    total_size += 1 + 4;
  }

  // float x = 2;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 4;
  }

  // float y = 3;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 4;
  }

  // float z = 4;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Quat::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.Quat)
  GOOGLE_DCHECK_NE(&from, this);
  const Quat* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Quat>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.Quat)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.Quat)
    MergeFrom(*source);
  }
}

void Quat::MergeFrom(const Quat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.Quat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.w() <= 0 && from.w() >= 0)) {
    _internal_set_w(from._internal_w());
  }
  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
  if (!(from.z() <= 0 && from.z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
}

void Quat::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.Quat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Quat::CopyFrom(const Quat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.Quat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Quat::IsInitialized() const {
  return true;
}

void Quat::InternalSwap(Quat* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Quat, z_)
      + sizeof(Quat::z_)
      - PROTOBUF_FIELD_OFFSET(Quat, w_)>(
          reinterpret_cast<char*>(&w_),
          reinterpret_cast<char*>(&other->w_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Quat::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Pose::InitAsDefaultInstance() {
  ::sapien::Renderer::server::proto::_Pose_default_instance_._instance.get_mutable()->p_ = const_cast< ::sapien::Renderer::server::proto::Vec3*>(
      ::sapien::Renderer::server::proto::Vec3::internal_default_instance());
  ::sapien::Renderer::server::proto::_Pose_default_instance_._instance.get_mutable()->q_ = const_cast< ::sapien::Renderer::server::proto::Quat*>(
      ::sapien::Renderer::server::proto::Quat::internal_default_instance());
}
class Pose::_Internal {
 public:
  static const ::sapien::Renderer::server::proto::Vec3& p(const Pose* msg);
  static const ::sapien::Renderer::server::proto::Quat& q(const Pose* msg);
};

const ::sapien::Renderer::server::proto::Vec3&
Pose::_Internal::p(const Pose* msg) {
  return *msg->p_;
}
const ::sapien::Renderer::server::proto::Quat&
Pose::_Internal::q(const Pose* msg) {
  return *msg->q_;
}
Pose::Pose(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.Pose)
}
Pose::Pose(const Pose& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_p()) {
    p_ = new ::sapien::Renderer::server::proto::Vec3(*from.p_);
  } else {
    p_ = nullptr;
  }
  if (from._internal_has_q()) {
    q_ = new ::sapien::Renderer::server::proto::Quat(*from.q_);
  } else {
    q_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.Pose)
}

void Pose::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Pose_render_5fserver_2eproto.base);
  ::memset(&p_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&q_) -
      reinterpret_cast<char*>(&p_)) + sizeof(q_));
}

Pose::~Pose() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.Pose)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pose::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete p_;
  if (this != internal_default_instance()) delete q_;
}

void Pose::ArenaDtor(void* object) {
  Pose* _this = reinterpret_cast< Pose* >(object);
  (void)_this;
}
void Pose::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pose::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pose& Pose::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pose_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void Pose::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.Pose)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && p_ != nullptr) {
    delete p_;
  }
  p_ = nullptr;
  if (GetArena() == nullptr && q_ != nullptr) {
    delete q_;
  }
  q_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pose::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .sapien.Renderer.server.proto.Vec3 p = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_p(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .sapien.Renderer.server.proto.Quat q = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_q(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pose::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.Pose)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sapien.Renderer.server.proto.Vec3 p = 1;
  if (this->has_p()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::p(this), target, stream);
  }

  // .sapien.Renderer.server.proto.Quat q = 2;
  if (this->has_q()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::q(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.Pose)
  return target;
}

size_t Pose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.Pose)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sapien.Renderer.server.proto.Vec3 p = 1;
  if (this->has_p()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *p_);
  }

  // .sapien.Renderer.server.proto.Quat q = 2;
  if (this->has_q()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *q_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pose::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.Pose)
  GOOGLE_DCHECK_NE(&from, this);
  const Pose* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pose>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.Pose)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.Pose)
    MergeFrom(*source);
  }
}

void Pose::MergeFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.Pose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_p()) {
    _internal_mutable_p()->::sapien::Renderer::server::proto::Vec3::MergeFrom(from._internal_p());
  }
  if (from.has_q()) {
    _internal_mutable_q()->::sapien::Renderer::server::proto::Quat::MergeFrom(from._internal_q());
  }
}

void Pose::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pose::CopyFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pose::IsInitialized() const {
  return true;
}

void Pose::InternalSwap(Pose* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Pose, q_)
      + sizeof(Pose::q_)
      - PROTOBUF_FIELD_OFFSET(Pose, p_)>(
          reinterpret_cast<char*>(&p_),
          reinterpret_cast<char*>(&other->p_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Pose::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IdVec3::InitAsDefaultInstance() {
  ::sapien::Renderer::server::proto::_IdVec3_default_instance_._instance.get_mutable()->data_ = const_cast< ::sapien::Renderer::server::proto::Vec3*>(
      ::sapien::Renderer::server::proto::Vec3::internal_default_instance());
}
class IdVec3::_Internal {
 public:
  static const ::sapien::Renderer::server::proto::Vec3& data(const IdVec3* msg);
};

const ::sapien::Renderer::server::proto::Vec3&
IdVec3::_Internal::data(const IdVec3* msg) {
  return *msg->data_;
}
IdVec3::IdVec3(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.IdVec3)
}
IdVec3::IdVec3(const IdVec3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    data_ = new ::sapien::Renderer::server::proto::Vec3(*from.data_);
  } else {
    data_ = nullptr;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.IdVec3)
}

void IdVec3::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IdVec3_render_5fserver_2eproto.base);
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&data_)) + sizeof(id_));
}

IdVec3::~IdVec3() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.IdVec3)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IdVec3::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete data_;
}

void IdVec3::ArenaDtor(void* object) {
  IdVec3* _this = reinterpret_cast< IdVec3* >(object);
  (void)_this;
}
void IdVec3::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IdVec3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IdVec3& IdVec3::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IdVec3_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void IdVec3::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.IdVec3)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IdVec3::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .sapien.Renderer.server.proto.Vec3 data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IdVec3::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.IdVec3)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  // .sapien.Renderer.server.proto.Vec3 data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.IdVec3)
  return target;
}

size_t IdVec3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.IdVec3)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sapien.Renderer.server.proto.Vec3 data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IdVec3::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.IdVec3)
  GOOGLE_DCHECK_NE(&from, this);
  const IdVec3* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IdVec3>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.IdVec3)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.IdVec3)
    MergeFrom(*source);
  }
}

void IdVec3::MergeFrom(const IdVec3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.IdVec3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    _internal_mutable_data()->::sapien::Renderer::server::proto::Vec3::MergeFrom(from._internal_data());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void IdVec3::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.IdVec3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdVec3::CopyFrom(const IdVec3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.IdVec3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdVec3::IsInitialized() const {
  return true;
}

void IdVec3::InternalSwap(IdVec3* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IdVec3, id_)
      + sizeof(IdVec3::id_)
      - PROTOBUF_FIELD_OFFSET(IdVec3, data_)>(
          reinterpret_cast<char*>(&data_),
          reinterpret_cast<char*>(&other->data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IdVec3::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IdVec4::InitAsDefaultInstance() {
  ::sapien::Renderer::server::proto::_IdVec4_default_instance_._instance.get_mutable()->data_ = const_cast< ::sapien::Renderer::server::proto::Vec4*>(
      ::sapien::Renderer::server::proto::Vec4::internal_default_instance());
}
class IdVec4::_Internal {
 public:
  static const ::sapien::Renderer::server::proto::Vec4& data(const IdVec4* msg);
};

const ::sapien::Renderer::server::proto::Vec4&
IdVec4::_Internal::data(const IdVec4* msg) {
  return *msg->data_;
}
IdVec4::IdVec4(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.IdVec4)
}
IdVec4::IdVec4(const IdVec4& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    data_ = new ::sapien::Renderer::server::proto::Vec4(*from.data_);
  } else {
    data_ = nullptr;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.IdVec4)
}

void IdVec4::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IdVec4_render_5fserver_2eproto.base);
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&data_)) + sizeof(id_));
}

IdVec4::~IdVec4() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.IdVec4)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IdVec4::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete data_;
}

void IdVec4::ArenaDtor(void* object) {
  IdVec4* _this = reinterpret_cast< IdVec4* >(object);
  (void)_this;
}
void IdVec4::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IdVec4::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IdVec4& IdVec4::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IdVec4_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void IdVec4::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.IdVec4)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IdVec4::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .sapien.Renderer.server.proto.Vec4 data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IdVec4::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.IdVec4)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  // .sapien.Renderer.server.proto.Vec4 data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.IdVec4)
  return target;
}

size_t IdVec4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.IdVec4)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sapien.Renderer.server.proto.Vec4 data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IdVec4::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.IdVec4)
  GOOGLE_DCHECK_NE(&from, this);
  const IdVec4* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IdVec4>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.IdVec4)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.IdVec4)
    MergeFrom(*source);
  }
}

void IdVec4::MergeFrom(const IdVec4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.IdVec4)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    _internal_mutable_data()->::sapien::Renderer::server::proto::Vec4::MergeFrom(from._internal_data());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void IdVec4::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.IdVec4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdVec4::CopyFrom(const IdVec4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.IdVec4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdVec4::IsInitialized() const {
  return true;
}

void IdVec4::InternalSwap(IdVec4* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IdVec4, id_)
      + sizeof(IdVec4::id_)
      - PROTOBUF_FIELD_OFFSET(IdVec4, data_)>(
          reinterpret_cast<char*>(&data_),
          reinterpret_cast<char*>(&other->data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IdVec4::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IdFloat::InitAsDefaultInstance() {
}
class IdFloat::_Internal {
 public:
};

IdFloat::IdFloat(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.IdFloat)
}
IdFloat::IdFloat(const IdFloat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&id_)) + sizeof(data_));
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.IdFloat)
}

void IdFloat::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&id_)) + sizeof(data_));
}

IdFloat::~IdFloat() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.IdFloat)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IdFloat::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IdFloat::ArenaDtor(void* object) {
  IdFloat* _this = reinterpret_cast< IdFloat* >(object);
  (void)_this;
}
void IdFloat::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IdFloat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IdFloat& IdFloat::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IdFloat_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void IdFloat::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.IdFloat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&id_)) + sizeof(data_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IdFloat::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          data_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IdFloat::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.IdFloat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  // float data = 2;
  if (!(this->data() <= 0 && this->data() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.IdFloat)
  return target;
}

size_t IdFloat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.IdFloat)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  // float data = 2;
  if (!(this->data() <= 0 && this->data() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IdFloat::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.IdFloat)
  GOOGLE_DCHECK_NE(&from, this);
  const IdFloat* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IdFloat>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.IdFloat)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.IdFloat)
    MergeFrom(*source);
  }
}

void IdFloat::MergeFrom(const IdFloat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.IdFloat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (!(from.data() <= 0 && from.data() >= 0)) {
    _internal_set_data(from._internal_data());
  }
}

void IdFloat::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.IdFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdFloat::CopyFrom(const IdFloat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.IdFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdFloat::IsInitialized() const {
  return true;
}

void IdFloat::InternalSwap(IdFloat* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IdFloat, data_)
      + sizeof(IdFloat::data_)
      - PROTOBUF_FIELD_OFFSET(IdFloat, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IdFloat::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddBodyMeshReq::InitAsDefaultInstance() {
  ::sapien::Renderer::server::proto::_AddBodyMeshReq_default_instance_._instance.get_mutable()->scale_ = const_cast< ::sapien::Renderer::server::proto::Vec3*>(
      ::sapien::Renderer::server::proto::Vec3::internal_default_instance());
}
class AddBodyMeshReq::_Internal {
 public:
  static const ::sapien::Renderer::server::proto::Vec3& scale(const AddBodyMeshReq* msg);
};

const ::sapien::Renderer::server::proto::Vec3&
AddBodyMeshReq::_Internal::scale(const AddBodyMeshReq* msg) {
  return *msg->scale_;
}
AddBodyMeshReq::AddBodyMeshReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.AddBodyMeshReq)
}
AddBodyMeshReq::AddBodyMeshReq(const AddBodyMeshReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_filename().empty()) {
    filename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_filename(),
      GetArena());
  }
  if (from._internal_has_scale()) {
    scale_ = new ::sapien::Renderer::server::proto::Vec3(*from.scale_);
  } else {
    scale_ = nullptr;
  }
  scene_id_ = from.scene_id_;
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.AddBodyMeshReq)
}

void AddBodyMeshReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddBodyMeshReq_render_5fserver_2eproto.base);
  filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&scale_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&scale_)) + sizeof(scene_id_));
}

AddBodyMeshReq::~AddBodyMeshReq() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.AddBodyMeshReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddBodyMeshReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  filename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete scale_;
}

void AddBodyMeshReq::ArenaDtor(void* object) {
  AddBodyMeshReq* _this = reinterpret_cast< AddBodyMeshReq* >(object);
  (void)_this;
}
void AddBodyMeshReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddBodyMeshReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddBodyMeshReq& AddBodyMeshReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddBodyMeshReq_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void AddBodyMeshReq::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.AddBodyMeshReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filename_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && scale_ != nullptr) {
    delete scale_;
  }
  scale_ = nullptr;
  scene_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddBodyMeshReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 scene_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          scene_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string filename = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_filename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "sapien.Renderer.server.proto.AddBodyMeshReq.filename"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .sapien.Renderer.server.proto.Vec3 scale = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_scale(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddBodyMeshReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.AddBodyMeshReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_scene_id(), target);
  }

  // string filename = 2;
  if (this->filename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filename().data(), static_cast<int>(this->_internal_filename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sapien.Renderer.server.proto.AddBodyMeshReq.filename");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_filename(), target);
  }

  // .sapien.Renderer.server.proto.Vec3 scale = 3;
  if (this->has_scale()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::scale(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.AddBodyMeshReq)
  return target;
}

size_t AddBodyMeshReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.AddBodyMeshReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string filename = 2;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filename());
  }

  // .sapien.Renderer.server.proto.Vec3 scale = 3;
  if (this->has_scale()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *scale_);
  }

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_scene_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddBodyMeshReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.AddBodyMeshReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AddBodyMeshReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddBodyMeshReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.AddBodyMeshReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.AddBodyMeshReq)
    MergeFrom(*source);
  }
}

void AddBodyMeshReq::MergeFrom(const AddBodyMeshReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.AddBodyMeshReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filename().size() > 0) {
    _internal_set_filename(from._internal_filename());
  }
  if (from.has_scale()) {
    _internal_mutable_scale()->::sapien::Renderer::server::proto::Vec3::MergeFrom(from._internal_scale());
  }
  if (from.scene_id() != 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
}

void AddBodyMeshReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.AddBodyMeshReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddBodyMeshReq::CopyFrom(const AddBodyMeshReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.AddBodyMeshReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddBodyMeshReq::IsInitialized() const {
  return true;
}

void AddBodyMeshReq::InternalSwap(AddBodyMeshReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  filename_.Swap(&other->filename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddBodyMeshReq, scene_id_)
      + sizeof(AddBodyMeshReq::scene_id_)
      - PROTOBUF_FIELD_OFFSET(AddBodyMeshReq, scale_)>(
          reinterpret_cast<char*>(&scale_),
          reinterpret_cast<char*>(&other->scale_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AddBodyMeshReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddBodyPrimitiveReq::InitAsDefaultInstance() {
  ::sapien::Renderer::server::proto::_AddBodyPrimitiveReq_default_instance_._instance.get_mutable()->scale_ = const_cast< ::sapien::Renderer::server::proto::Vec3*>(
      ::sapien::Renderer::server::proto::Vec3::internal_default_instance());
}
class AddBodyPrimitiveReq::_Internal {
 public:
  static const ::sapien::Renderer::server::proto::Vec3& scale(const AddBodyPrimitiveReq* msg);
};

const ::sapien::Renderer::server::proto::Vec3&
AddBodyPrimitiveReq::_Internal::scale(const AddBodyPrimitiveReq* msg) {
  return *msg->scale_;
}
AddBodyPrimitiveReq::AddBodyPrimitiveReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.AddBodyPrimitiveReq)
}
AddBodyPrimitiveReq::AddBodyPrimitiveReq(const AddBodyPrimitiveReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_scale()) {
    scale_ = new ::sapien::Renderer::server::proto::Vec3(*from.scale_);
  } else {
    scale_ = nullptr;
  }
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.AddBodyPrimitiveReq)
}

void AddBodyPrimitiveReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddBodyPrimitiveReq_render_5fserver_2eproto.base);
  ::memset(&scale_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&scale_)) + sizeof(type_));
}

AddBodyPrimitiveReq::~AddBodyPrimitiveReq() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.AddBodyPrimitiveReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddBodyPrimitiveReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete scale_;
}

void AddBodyPrimitiveReq::ArenaDtor(void* object) {
  AddBodyPrimitiveReq* _this = reinterpret_cast< AddBodyPrimitiveReq* >(object);
  (void)_this;
}
void AddBodyPrimitiveReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddBodyPrimitiveReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddBodyPrimitiveReq& AddBodyPrimitiveReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddBodyPrimitiveReq_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void AddBodyPrimitiveReq::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.AddBodyPrimitiveReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && scale_ != nullptr) {
    delete scale_;
  }
  scale_ = nullptr;
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddBodyPrimitiveReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 scene_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          scene_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .sapien.Renderer.server.proto.PrimitiveType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::sapien::Renderer::server::proto::PrimitiveType>(val));
        } else goto handle_unusual;
        continue;
      // .sapien.Renderer.server.proto.Vec3 scale = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_scale(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 material = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          material_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddBodyPrimitiveReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.AddBodyPrimitiveReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_scene_id(), target);
  }

  // .sapien.Renderer.server.proto.PrimitiveType type = 2;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // .sapien.Renderer.server.proto.Vec3 scale = 3;
  if (this->has_scale()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::scale(this), target, stream);
  }

  // uint64 material = 4;
  if (this->material() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_material(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.AddBodyPrimitiveReq)
  return target;
}

size_t AddBodyPrimitiveReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.AddBodyPrimitiveReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sapien.Renderer.server.proto.Vec3 scale = 3;
  if (this->has_scale()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *scale_);
  }

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_scene_id());
  }

  // uint64 material = 4;
  if (this->material() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_material());
  }

  // .sapien.Renderer.server.proto.PrimitiveType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddBodyPrimitiveReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.AddBodyPrimitiveReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AddBodyPrimitiveReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddBodyPrimitiveReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.AddBodyPrimitiveReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.AddBodyPrimitiveReq)
    MergeFrom(*source);
  }
}

void AddBodyPrimitiveReq::MergeFrom(const AddBodyPrimitiveReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.AddBodyPrimitiveReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_scale()) {
    _internal_mutable_scale()->::sapien::Renderer::server::proto::Vec3::MergeFrom(from._internal_scale());
  }
  if (from.scene_id() != 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
  if (from.material() != 0) {
    _internal_set_material(from._internal_material());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void AddBodyPrimitiveReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.AddBodyPrimitiveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddBodyPrimitiveReq::CopyFrom(const AddBodyPrimitiveReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.AddBodyPrimitiveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddBodyPrimitiveReq::IsInitialized() const {
  return true;
}

void AddBodyPrimitiveReq::InternalSwap(AddBodyPrimitiveReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddBodyPrimitiveReq, type_)
      + sizeof(AddBodyPrimitiveReq::type_)
      - PROTOBUF_FIELD_OFFSET(AddBodyPrimitiveReq, scale_)>(
          reinterpret_cast<char*>(&scale_),
          reinterpret_cast<char*>(&other->scale_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AddBodyPrimitiveReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveBodyReq::InitAsDefaultInstance() {
}
class RemoveBodyReq::_Internal {
 public:
};

RemoveBodyReq::RemoveBodyReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.RemoveBodyReq)
}
RemoveBodyReq::RemoveBodyReq(const RemoveBodyReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&body_id_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(body_id_));
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.RemoveBodyReq)
}

void RemoveBodyReq::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&body_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(body_id_));
}

RemoveBodyReq::~RemoveBodyReq() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.RemoveBodyReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveBodyReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveBodyReq::ArenaDtor(void* object) {
  RemoveBodyReq* _this = reinterpret_cast< RemoveBodyReq* >(object);
  (void)_this;
}
void RemoveBodyReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveBodyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveBodyReq& RemoveBodyReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveBodyReq_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void RemoveBodyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.RemoveBodyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&body_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(body_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveBodyReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 scene_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          scene_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 body_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          body_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveBodyReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.RemoveBodyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_scene_id(), target);
  }

  // uint64 body_id = 2;
  if (this->body_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_body_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.RemoveBodyReq)
  return target;
}

size_t RemoveBodyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.RemoveBodyReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_scene_id());
  }

  // uint64 body_id = 2;
  if (this->body_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_body_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveBodyReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.RemoveBodyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveBodyReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveBodyReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.RemoveBodyReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.RemoveBodyReq)
    MergeFrom(*source);
  }
}

void RemoveBodyReq::MergeFrom(const RemoveBodyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.RemoveBodyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
  if (from.body_id() != 0) {
    _internal_set_body_id(from._internal_body_id());
  }
}

void RemoveBodyReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.RemoveBodyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveBodyReq::CopyFrom(const RemoveBodyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.RemoveBodyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveBodyReq::IsInitialized() const {
  return true;
}

void RemoveBodyReq::InternalSwap(RemoveBodyReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RemoveBodyReq, body_id_)
      + sizeof(RemoveBodyReq::body_id_)
      - PROTOBUF_FIELD_OFFSET(RemoveBodyReq, scene_id_)>(
          reinterpret_cast<char*>(&scene_id_),
          reinterpret_cast<char*>(&other->scene_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveBodyReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddCameraReq::InitAsDefaultInstance() {
}
class AddCameraReq::_Internal {
 public:
};

AddCameraReq::AddCameraReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.AddCameraReq)
}
AddCameraReq::AddCameraReq(const AddCameraReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  shader_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_shader().empty()) {
    shader_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_shader(),
      GetArena());
  }
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&far_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(far_));
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.AddCameraReq)
}

void AddCameraReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddCameraReq_render_5fserver_2eproto.base);
  shader_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&far_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(far_));
}

AddCameraReq::~AddCameraReq() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.AddCameraReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddCameraReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  shader_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddCameraReq::ArenaDtor(void* object) {
  AddCameraReq* _this = reinterpret_cast< AddCameraReq* >(object);
  (void)_this;
}
void AddCameraReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddCameraReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddCameraReq& AddCameraReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddCameraReq_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void AddCameraReq::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.AddCameraReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shader_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&far_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(far_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddCameraReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 scene_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          scene_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 width = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float fovy = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          fovy_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float near = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          near_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float far = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          far_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // string shader = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_shader();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "sapien.Renderer.server.proto.AddCameraReq.shader"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddCameraReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.AddCameraReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_scene_id(), target);
  }

  // uint32 width = 2;
  if (this->width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_width(), target);
  }

  // uint32 height = 3;
  if (this->height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_height(), target);
  }

  // float fovy = 4;
  if (!(this->fovy() <= 0 && this->fovy() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_fovy(), target);
  }

  // float near = 5;
  if (!(this->near() <= 0 && this->near() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_near(), target);
  }

  // float far = 6;
  if (!(this->far() <= 0 && this->far() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_far(), target);
  }

  // string shader = 7;
  if (this->shader().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_shader().data(), static_cast<int>(this->_internal_shader().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sapien.Renderer.server.proto.AddCameraReq.shader");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_shader(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.AddCameraReq)
  return target;
}

size_t AddCameraReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.AddCameraReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string shader = 7;
  if (this->shader().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_shader());
  }

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_scene_id());
  }

  // uint32 width = 2;
  if (this->width() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_width());
  }

  // uint32 height = 3;
  if (this->height() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_height());
  }

  // float fovy = 4;
  if (!(this->fovy() <= 0 && this->fovy() >= 0)) {
    total_size += 1 + 4;
  }

  // float near = 5;
  if (!(this->near() <= 0 && this->near() >= 0)) {
    total_size += 1 + 4;
  }

  // float far = 6;
  if (!(this->far() <= 0 && this->far() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddCameraReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.AddCameraReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AddCameraReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddCameraReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.AddCameraReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.AddCameraReq)
    MergeFrom(*source);
  }
}

void AddCameraReq::MergeFrom(const AddCameraReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.AddCameraReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.shader().size() > 0) {
    _internal_set_shader(from._internal_shader());
  }
  if (from.scene_id() != 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
  if (from.width() != 0) {
    _internal_set_width(from._internal_width());
  }
  if (from.height() != 0) {
    _internal_set_height(from._internal_height());
  }
  if (!(from.fovy() <= 0 && from.fovy() >= 0)) {
    _internal_set_fovy(from._internal_fovy());
  }
  if (!(from.near() <= 0 && from.near() >= 0)) {
    _internal_set_near(from._internal_near());
  }
  if (!(from.far() <= 0 && from.far() >= 0)) {
    _internal_set_far(from._internal_far());
  }
}

void AddCameraReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.AddCameraReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddCameraReq::CopyFrom(const AddCameraReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.AddCameraReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddCameraReq::IsInitialized() const {
  return true;
}

void AddCameraReq::InternalSwap(AddCameraReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  shader_.Swap(&other->shader_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddCameraReq, far_)
      + sizeof(AddCameraReq::far_)
      - PROTOBUF_FIELD_OFFSET(AddCameraReq, scene_id_)>(
          reinterpret_cast<char*>(&scene_id_),
          reinterpret_cast<char*>(&other->scene_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AddCameraReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveCameraReq::InitAsDefaultInstance() {
}
class RemoveCameraReq::_Internal {
 public:
};

RemoveCameraReq::RemoveCameraReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.RemoveCameraReq)
}
RemoveCameraReq::RemoveCameraReq(const RemoveCameraReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&camera_id_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(camera_id_));
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.RemoveCameraReq)
}

void RemoveCameraReq::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&camera_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(camera_id_));
}

RemoveCameraReq::~RemoveCameraReq() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.RemoveCameraReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveCameraReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveCameraReq::ArenaDtor(void* object) {
  RemoveCameraReq* _this = reinterpret_cast< RemoveCameraReq* >(object);
  (void)_this;
}
void RemoveCameraReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveCameraReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveCameraReq& RemoveCameraReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveCameraReq_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void RemoveCameraReq::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.RemoveCameraReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&camera_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(camera_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveCameraReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 scene_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          scene_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 camera_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          camera_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveCameraReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.RemoveCameraReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_scene_id(), target);
  }

  // uint64 camera_id = 2;
  if (this->camera_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_camera_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.RemoveCameraReq)
  return target;
}

size_t RemoveCameraReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.RemoveCameraReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_scene_id());
  }

  // uint64 camera_id = 2;
  if (this->camera_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_camera_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveCameraReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.RemoveCameraReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveCameraReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveCameraReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.RemoveCameraReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.RemoveCameraReq)
    MergeFrom(*source);
  }
}

void RemoveCameraReq::MergeFrom(const RemoveCameraReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.RemoveCameraReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
  if (from.camera_id() != 0) {
    _internal_set_camera_id(from._internal_camera_id());
  }
}

void RemoveCameraReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.RemoveCameraReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveCameraReq::CopyFrom(const RemoveCameraReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.RemoveCameraReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveCameraReq::IsInitialized() const {
  return true;
}

void RemoveCameraReq::InternalSwap(RemoveCameraReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RemoveCameraReq, camera_id_)
      + sizeof(RemoveCameraReq::camera_id_)
      - PROTOBUF_FIELD_OFFSET(RemoveCameraReq, scene_id_)>(
          reinterpret_cast<char*>(&scene_id_),
          reinterpret_cast<char*>(&other->scene_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveCameraReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddPointLightReq::InitAsDefaultInstance() {
  ::sapien::Renderer::server::proto::_AddPointLightReq_default_instance_._instance.get_mutable()->position_ = const_cast< ::sapien::Renderer::server::proto::Vec3*>(
      ::sapien::Renderer::server::proto::Vec3::internal_default_instance());
  ::sapien::Renderer::server::proto::_AddPointLightReq_default_instance_._instance.get_mutable()->color_ = const_cast< ::sapien::Renderer::server::proto::Vec3*>(
      ::sapien::Renderer::server::proto::Vec3::internal_default_instance());
}
class AddPointLightReq::_Internal {
 public:
  static const ::sapien::Renderer::server::proto::Vec3& position(const AddPointLightReq* msg);
  static const ::sapien::Renderer::server::proto::Vec3& color(const AddPointLightReq* msg);
};

const ::sapien::Renderer::server::proto::Vec3&
AddPointLightReq::_Internal::position(const AddPointLightReq* msg) {
  return *msg->position_;
}
const ::sapien::Renderer::server::proto::Vec3&
AddPointLightReq::_Internal::color(const AddPointLightReq* msg) {
  return *msg->color_;
}
AddPointLightReq::AddPointLightReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.AddPointLightReq)
}
AddPointLightReq::AddPointLightReq(const AddPointLightReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_position()) {
    position_ = new ::sapien::Renderer::server::proto::Vec3(*from.position_);
  } else {
    position_ = nullptr;
  }
  if (from._internal_has_color()) {
    color_ = new ::sapien::Renderer::server::proto::Vec3(*from.color_);
  } else {
    color_ = nullptr;
  }
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&shadow_map_size_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(shadow_map_size_));
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.AddPointLightReq)
}

void AddPointLightReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddPointLightReq_render_5fserver_2eproto.base);
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shadow_map_size_) -
      reinterpret_cast<char*>(&position_)) + sizeof(shadow_map_size_));
}

AddPointLightReq::~AddPointLightReq() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.AddPointLightReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddPointLightReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete color_;
}

void AddPointLightReq::ArenaDtor(void* object) {
  AddPointLightReq* _this = reinterpret_cast< AddPointLightReq* >(object);
  (void)_this;
}
void AddPointLightReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddPointLightReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddPointLightReq& AddPointLightReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddPointLightReq_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void AddPointLightReq::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.AddPointLightReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  if (GetArena() == nullptr && color_ != nullptr) {
    delete color_;
  }
  color_ = nullptr;
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shadow_map_size_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(shadow_map_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddPointLightReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 scene_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          scene_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .sapien.Renderer.server.proto.Vec3 position = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .sapien.Renderer.server.proto.Vec3 color = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_color(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool shadow = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          shadow_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float shadow_near = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          shadow_near_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float shadow_far = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          shadow_far_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 shadow_map_size = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          shadow_map_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddPointLightReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.AddPointLightReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_scene_id(), target);
  }

  // .sapien.Renderer.server.proto.Vec3 position = 2;
  if (this->has_position()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::position(this), target, stream);
  }

  // .sapien.Renderer.server.proto.Vec3 color = 3;
  if (this->has_color()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::color(this), target, stream);
  }

  // bool shadow = 4;
  if (this->shadow() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_shadow(), target);
  }

  // float shadow_near = 5;
  if (!(this->shadow_near() <= 0 && this->shadow_near() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_shadow_near(), target);
  }

  // float shadow_far = 6;
  if (!(this->shadow_far() <= 0 && this->shadow_far() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_shadow_far(), target);
  }

  // int32 shadow_map_size = 7;
  if (this->shadow_map_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_shadow_map_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.AddPointLightReq)
  return target;
}

size_t AddPointLightReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.AddPointLightReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sapien.Renderer.server.proto.Vec3 position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .sapien.Renderer.server.proto.Vec3 color = 3;
  if (this->has_color()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *color_);
  }

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_scene_id());
  }

  // bool shadow = 4;
  if (this->shadow() != 0) {
    total_size += 1 + 1;
  }

  // float shadow_near = 5;
  if (!(this->shadow_near() <= 0 && this->shadow_near() >= 0)) {
    total_size += 1 + 4;
  }

  // float shadow_far = 6;
  if (!(this->shadow_far() <= 0 && this->shadow_far() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 shadow_map_size = 7;
  if (this->shadow_map_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_shadow_map_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddPointLightReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.AddPointLightReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AddPointLightReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddPointLightReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.AddPointLightReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.AddPointLightReq)
    MergeFrom(*source);
  }
}

void AddPointLightReq::MergeFrom(const AddPointLightReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.AddPointLightReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    _internal_mutable_position()->::sapien::Renderer::server::proto::Vec3::MergeFrom(from._internal_position());
  }
  if (from.has_color()) {
    _internal_mutable_color()->::sapien::Renderer::server::proto::Vec3::MergeFrom(from._internal_color());
  }
  if (from.scene_id() != 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
  if (from.shadow() != 0) {
    _internal_set_shadow(from._internal_shadow());
  }
  if (!(from.shadow_near() <= 0 && from.shadow_near() >= 0)) {
    _internal_set_shadow_near(from._internal_shadow_near());
  }
  if (!(from.shadow_far() <= 0 && from.shadow_far() >= 0)) {
    _internal_set_shadow_far(from._internal_shadow_far());
  }
  if (from.shadow_map_size() != 0) {
    _internal_set_shadow_map_size(from._internal_shadow_map_size());
  }
}

void AddPointLightReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.AddPointLightReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddPointLightReq::CopyFrom(const AddPointLightReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.AddPointLightReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPointLightReq::IsInitialized() const {
  return true;
}

void AddPointLightReq::InternalSwap(AddPointLightReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddPointLightReq, shadow_map_size_)
      + sizeof(AddPointLightReq::shadow_map_size_)
      - PROTOBUF_FIELD_OFFSET(AddPointLightReq, position_)>(
          reinterpret_cast<char*>(&position_),
          reinterpret_cast<char*>(&other->position_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AddPointLightReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddDirectionalLightReq::InitAsDefaultInstance() {
  ::sapien::Renderer::server::proto::_AddDirectionalLightReq_default_instance_._instance.get_mutable()->direction_ = const_cast< ::sapien::Renderer::server::proto::Vec3*>(
      ::sapien::Renderer::server::proto::Vec3::internal_default_instance());
  ::sapien::Renderer::server::proto::_AddDirectionalLightReq_default_instance_._instance.get_mutable()->color_ = const_cast< ::sapien::Renderer::server::proto::Vec3*>(
      ::sapien::Renderer::server::proto::Vec3::internal_default_instance());
  ::sapien::Renderer::server::proto::_AddDirectionalLightReq_default_instance_._instance.get_mutable()->position_ = const_cast< ::sapien::Renderer::server::proto::Vec3*>(
      ::sapien::Renderer::server::proto::Vec3::internal_default_instance());
}
class AddDirectionalLightReq::_Internal {
 public:
  static const ::sapien::Renderer::server::proto::Vec3& direction(const AddDirectionalLightReq* msg);
  static const ::sapien::Renderer::server::proto::Vec3& color(const AddDirectionalLightReq* msg);
  static const ::sapien::Renderer::server::proto::Vec3& position(const AddDirectionalLightReq* msg);
};

const ::sapien::Renderer::server::proto::Vec3&
AddDirectionalLightReq::_Internal::direction(const AddDirectionalLightReq* msg) {
  return *msg->direction_;
}
const ::sapien::Renderer::server::proto::Vec3&
AddDirectionalLightReq::_Internal::color(const AddDirectionalLightReq* msg) {
  return *msg->color_;
}
const ::sapien::Renderer::server::proto::Vec3&
AddDirectionalLightReq::_Internal::position(const AddDirectionalLightReq* msg) {
  return *msg->position_;
}
AddDirectionalLightReq::AddDirectionalLightReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.AddDirectionalLightReq)
}
AddDirectionalLightReq::AddDirectionalLightReq(const AddDirectionalLightReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_direction()) {
    direction_ = new ::sapien::Renderer::server::proto::Vec3(*from.direction_);
  } else {
    direction_ = nullptr;
  }
  if (from._internal_has_color()) {
    color_ = new ::sapien::Renderer::server::proto::Vec3(*from.color_);
  } else {
    color_ = nullptr;
  }
  if (from._internal_has_position()) {
    position_ = new ::sapien::Renderer::server::proto::Vec3(*from.position_);
  } else {
    position_ = nullptr;
  }
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&shadow_map_size_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(shadow_map_size_));
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.AddDirectionalLightReq)
}

void AddDirectionalLightReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddDirectionalLightReq_render_5fserver_2eproto.base);
  ::memset(&direction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shadow_map_size_) -
      reinterpret_cast<char*>(&direction_)) + sizeof(shadow_map_size_));
}

AddDirectionalLightReq::~AddDirectionalLightReq() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.AddDirectionalLightReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddDirectionalLightReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete direction_;
  if (this != internal_default_instance()) delete color_;
  if (this != internal_default_instance()) delete position_;
}

void AddDirectionalLightReq::ArenaDtor(void* object) {
  AddDirectionalLightReq* _this = reinterpret_cast< AddDirectionalLightReq* >(object);
  (void)_this;
}
void AddDirectionalLightReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddDirectionalLightReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddDirectionalLightReq& AddDirectionalLightReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddDirectionalLightReq_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void AddDirectionalLightReq::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.AddDirectionalLightReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && direction_ != nullptr) {
    delete direction_;
  }
  direction_ = nullptr;
  if (GetArena() == nullptr && color_ != nullptr) {
    delete color_;
  }
  color_ = nullptr;
  if (GetArena() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shadow_map_size_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(shadow_map_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddDirectionalLightReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 scene_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          scene_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .sapien.Renderer.server.proto.Vec3 direction = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_direction(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .sapien.Renderer.server.proto.Vec3 color = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_color(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool shadow = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          shadow_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .sapien.Renderer.server.proto.Vec3 position = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float shadow_scale = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          shadow_scale_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float shadow_near = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          shadow_near_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float shadow_far = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          shadow_far_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 shadow_map_size = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          shadow_map_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddDirectionalLightReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.AddDirectionalLightReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_scene_id(), target);
  }

  // .sapien.Renderer.server.proto.Vec3 direction = 2;
  if (this->has_direction()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::direction(this), target, stream);
  }

  // .sapien.Renderer.server.proto.Vec3 color = 3;
  if (this->has_color()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::color(this), target, stream);
  }

  // bool shadow = 4;
  if (this->shadow() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_shadow(), target);
  }

  // .sapien.Renderer.server.proto.Vec3 position = 5;
  if (this->has_position()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::position(this), target, stream);
  }

  // float shadow_scale = 6;
  if (!(this->shadow_scale() <= 0 && this->shadow_scale() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_shadow_scale(), target);
  }

  // float shadow_near = 7;
  if (!(this->shadow_near() <= 0 && this->shadow_near() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_shadow_near(), target);
  }

  // float shadow_far = 8;
  if (!(this->shadow_far() <= 0 && this->shadow_far() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(8, this->_internal_shadow_far(), target);
  }

  // int32 shadow_map_size = 9;
  if (this->shadow_map_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_shadow_map_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.AddDirectionalLightReq)
  return target;
}

size_t AddDirectionalLightReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.AddDirectionalLightReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sapien.Renderer.server.proto.Vec3 direction = 2;
  if (this->has_direction()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *direction_);
  }

  // .sapien.Renderer.server.proto.Vec3 color = 3;
  if (this->has_color()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *color_);
  }

  // .sapien.Renderer.server.proto.Vec3 position = 5;
  if (this->has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_scene_id());
  }

  // bool shadow = 4;
  if (this->shadow() != 0) {
    total_size += 1 + 1;
  }

  // float shadow_scale = 6;
  if (!(this->shadow_scale() <= 0 && this->shadow_scale() >= 0)) {
    total_size += 1 + 4;
  }

  // float shadow_near = 7;
  if (!(this->shadow_near() <= 0 && this->shadow_near() >= 0)) {
    total_size += 1 + 4;
  }

  // float shadow_far = 8;
  if (!(this->shadow_far() <= 0 && this->shadow_far() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 shadow_map_size = 9;
  if (this->shadow_map_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_shadow_map_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddDirectionalLightReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.AddDirectionalLightReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AddDirectionalLightReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddDirectionalLightReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.AddDirectionalLightReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.AddDirectionalLightReq)
    MergeFrom(*source);
  }
}

void AddDirectionalLightReq::MergeFrom(const AddDirectionalLightReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.AddDirectionalLightReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_direction()) {
    _internal_mutable_direction()->::sapien::Renderer::server::proto::Vec3::MergeFrom(from._internal_direction());
  }
  if (from.has_color()) {
    _internal_mutable_color()->::sapien::Renderer::server::proto::Vec3::MergeFrom(from._internal_color());
  }
  if (from.has_position()) {
    _internal_mutable_position()->::sapien::Renderer::server::proto::Vec3::MergeFrom(from._internal_position());
  }
  if (from.scene_id() != 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
  if (from.shadow() != 0) {
    _internal_set_shadow(from._internal_shadow());
  }
  if (!(from.shadow_scale() <= 0 && from.shadow_scale() >= 0)) {
    _internal_set_shadow_scale(from._internal_shadow_scale());
  }
  if (!(from.shadow_near() <= 0 && from.shadow_near() >= 0)) {
    _internal_set_shadow_near(from._internal_shadow_near());
  }
  if (!(from.shadow_far() <= 0 && from.shadow_far() >= 0)) {
    _internal_set_shadow_far(from._internal_shadow_far());
  }
  if (from.shadow_map_size() != 0) {
    _internal_set_shadow_map_size(from._internal_shadow_map_size());
  }
}

void AddDirectionalLightReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.AddDirectionalLightReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddDirectionalLightReq::CopyFrom(const AddDirectionalLightReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.AddDirectionalLightReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddDirectionalLightReq::IsInitialized() const {
  return true;
}

void AddDirectionalLightReq::InternalSwap(AddDirectionalLightReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddDirectionalLightReq, shadow_map_size_)
      + sizeof(AddDirectionalLightReq::shadow_map_size_)
      - PROTOBUF_FIELD_OFFSET(AddDirectionalLightReq, direction_)>(
          reinterpret_cast<char*>(&direction_),
          reinterpret_cast<char*>(&other->direction_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AddDirectionalLightReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveLightReq::InitAsDefaultInstance() {
}
class RemoveLightReq::_Internal {
 public:
};

RemoveLightReq::RemoveLightReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.RemoveLightReq)
}
RemoveLightReq::RemoveLightReq(const RemoveLightReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&light_id_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(light_id_));
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.RemoveLightReq)
}

void RemoveLightReq::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&light_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(light_id_));
}

RemoveLightReq::~RemoveLightReq() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.RemoveLightReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveLightReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveLightReq::ArenaDtor(void* object) {
  RemoveLightReq* _this = reinterpret_cast< RemoveLightReq* >(object);
  (void)_this;
}
void RemoveLightReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveLightReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveLightReq& RemoveLightReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveLightReq_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void RemoveLightReq::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.RemoveLightReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&light_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(light_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveLightReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 scene_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          scene_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 light_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          light_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveLightReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.RemoveLightReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_scene_id(), target);
  }

  // uint64 light_id = 2;
  if (this->light_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_light_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.RemoveLightReq)
  return target;
}

size_t RemoveLightReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.RemoveLightReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_scene_id());
  }

  // uint64 light_id = 2;
  if (this->light_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_light_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveLightReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.RemoveLightReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveLightReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveLightReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.RemoveLightReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.RemoveLightReq)
    MergeFrom(*source);
  }
}

void RemoveLightReq::MergeFrom(const RemoveLightReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.RemoveLightReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
  if (from.light_id() != 0) {
    _internal_set_light_id(from._internal_light_id());
  }
}

void RemoveLightReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.RemoveLightReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveLightReq::CopyFrom(const RemoveLightReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.RemoveLightReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveLightReq::IsInitialized() const {
  return true;
}

void RemoveLightReq::InternalSwap(RemoveLightReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RemoveLightReq, light_id_)
      + sizeof(RemoveLightReq::light_id_)
      - PROTOBUF_FIELD_OFFSET(RemoveLightReq, scene_id_)>(
          reinterpret_cast<char*>(&scene_id_),
          reinterpret_cast<char*>(&other->scene_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveLightReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EntityOrderReq::InitAsDefaultInstance() {
}
class EntityOrderReq::_Internal {
 public:
};

EntityOrderReq::EntityOrderReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  body_ids_(arena),
  camera_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.EntityOrderReq)
}
EntityOrderReq::EntityOrderReq(const EntityOrderReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      body_ids_(from.body_ids_),
      camera_ids_(from.camera_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  scene_id_ = from.scene_id_;
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.EntityOrderReq)
}

void EntityOrderReq::SharedCtor() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}

EntityOrderReq::~EntityOrderReq() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.EntityOrderReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EntityOrderReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void EntityOrderReq::ArenaDtor(void* object) {
  EntityOrderReq* _this = reinterpret_cast< EntityOrderReq* >(object);
  (void)_this;
}
void EntityOrderReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EntityOrderReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EntityOrderReq& EntityOrderReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EntityOrderReq_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void EntityOrderReq::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.EntityOrderReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  body_ids_.Clear();
  camera_ids_.Clear();
  scene_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EntityOrderReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 scene_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          scene_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint64 body_ids = 2 [packed = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_body_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_body_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint64 camera_ids = 3 [packed = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_camera_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          _internal_add_camera_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EntityOrderReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.EntityOrderReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_scene_id(), target);
  }

  // repeated uint64 body_ids = 2 [packed = true];
  {
    int byte_size = _body_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          2, _internal_body_ids(), byte_size, target);
    }
  }

  // repeated uint64 camera_ids = 3 [packed = true];
  {
    int byte_size = _camera_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          3, _internal_camera_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.EntityOrderReq)
  return target;
}

size_t EntityOrderReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.EntityOrderReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 body_ids = 2 [packed = true];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->body_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _body_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint64 camera_ids = 3 [packed = true];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->camera_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _camera_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_scene_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityOrderReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.EntityOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityOrderReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EntityOrderReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.EntityOrderReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.EntityOrderReq)
    MergeFrom(*source);
  }
}

void EntityOrderReq::MergeFrom(const EntityOrderReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.EntityOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  body_ids_.MergeFrom(from.body_ids_);
  camera_ids_.MergeFrom(from.camera_ids_);
  if (from.scene_id() != 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
}

void EntityOrderReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.EntityOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityOrderReq::CopyFrom(const EntityOrderReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.EntityOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityOrderReq::IsInitialized() const {
  return true;
}

void EntityOrderReq::InternalSwap(EntityOrderReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  body_ids_.InternalSwap(&other->body_ids_);
  camera_ids_.InternalSwap(&other->camera_ids_);
  swap(scene_id_, other->scene_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EntityOrderReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateRenderReq::InitAsDefaultInstance() {
}
class UpdateRenderReq::_Internal {
 public:
};

UpdateRenderReq::UpdateRenderReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  body_poses_(arena),
  camera_poses_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.UpdateRenderReq)
}
UpdateRenderReq::UpdateRenderReq(const UpdateRenderReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      body_poses_(from.body_poses_),
      camera_poses_(from.camera_poses_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  scene_id_ = from.scene_id_;
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.UpdateRenderReq)
}

void UpdateRenderReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateRenderReq_render_5fserver_2eproto.base);
  scene_id_ = PROTOBUF_ULONGLONG(0);
}

UpdateRenderReq::~UpdateRenderReq() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.UpdateRenderReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateRenderReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateRenderReq::ArenaDtor(void* object) {
  UpdateRenderReq* _this = reinterpret_cast< UpdateRenderReq* >(object);
  (void)_this;
}
void UpdateRenderReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateRenderReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateRenderReq& UpdateRenderReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateRenderReq_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void UpdateRenderReq::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.UpdateRenderReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  body_poses_.Clear();
  camera_poses_.Clear();
  scene_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRenderReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 scene_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          scene_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .sapien.Renderer.server.proto.Pose body_poses = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_body_poses(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .sapien.Renderer.server.proto.Pose camera_poses = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_camera_poses(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateRenderReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.UpdateRenderReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_scene_id(), target);
  }

  // repeated .sapien.Renderer.server.proto.Pose body_poses = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_body_poses_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_body_poses(i), target, stream);
  }

  // repeated .sapien.Renderer.server.proto.Pose camera_poses = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_camera_poses_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_camera_poses(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.UpdateRenderReq)
  return target;
}

size_t UpdateRenderReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.UpdateRenderReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sapien.Renderer.server.proto.Pose body_poses = 2;
  total_size += 1UL * this->_internal_body_poses_size();
  for (const auto& msg : this->body_poses_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .sapien.Renderer.server.proto.Pose camera_poses = 3;
  total_size += 1UL * this->_internal_camera_poses_size();
  for (const auto& msg : this->camera_poses_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_scene_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateRenderReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.UpdateRenderReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateRenderReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateRenderReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.UpdateRenderReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.UpdateRenderReq)
    MergeFrom(*source);
  }
}

void UpdateRenderReq::MergeFrom(const UpdateRenderReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.UpdateRenderReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  body_poses_.MergeFrom(from.body_poses_);
  camera_poses_.MergeFrom(from.camera_poses_);
  if (from.scene_id() != 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
}

void UpdateRenderReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.UpdateRenderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRenderReq::CopyFrom(const UpdateRenderReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.UpdateRenderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRenderReq::IsInitialized() const {
  return true;
}

void UpdateRenderReq::InternalSwap(UpdateRenderReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  body_poses_.InternalSwap(&other->body_poses_);
  camera_poses_.InternalSwap(&other->camera_poses_);
  swap(scene_id_, other->scene_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRenderReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BodyIdReq::InitAsDefaultInstance() {
}
class BodyIdReq::_Internal {
 public:
};

BodyIdReq::BodyIdReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.BodyIdReq)
}
BodyIdReq::BodyIdReq(const BodyIdReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.BodyIdReq)
}

void BodyIdReq::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(id_));
}

BodyIdReq::~BodyIdReq() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.BodyIdReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BodyIdReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BodyIdReq::ArenaDtor(void* object) {
  BodyIdReq* _this = reinterpret_cast< BodyIdReq* >(object);
  (void)_this;
}
void BodyIdReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BodyIdReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BodyIdReq& BodyIdReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BodyIdReq_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void BodyIdReq::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.BodyIdReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BodyIdReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 scene_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          scene_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 body_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          body_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BodyIdReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.BodyIdReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_scene_id(), target);
  }

  // uint64 body_id = 2;
  if (this->body_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_body_id(), target);
  }

  // uint32 id = 3;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.BodyIdReq)
  return target;
}

size_t BodyIdReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.BodyIdReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_scene_id());
  }

  // uint64 body_id = 2;
  if (this->body_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_body_id());
  }

  // uint32 id = 3;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BodyIdReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.BodyIdReq)
  GOOGLE_DCHECK_NE(&from, this);
  const BodyIdReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BodyIdReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.BodyIdReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.BodyIdReq)
    MergeFrom(*source);
  }
}

void BodyIdReq::MergeFrom(const BodyIdReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.BodyIdReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
  if (from.body_id() != 0) {
    _internal_set_body_id(from._internal_body_id());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void BodyIdReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.BodyIdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BodyIdReq::CopyFrom(const BodyIdReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.BodyIdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BodyIdReq::IsInitialized() const {
  return true;
}

void BodyIdReq::InternalSwap(BodyIdReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BodyIdReq, id_)
      + sizeof(BodyIdReq::id_)
      - PROTOBUF_FIELD_OFFSET(BodyIdReq, scene_id_)>(
          reinterpret_cast<char*>(&scene_id_),
          reinterpret_cast<char*>(&other->scene_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BodyIdReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TakePictureReq::InitAsDefaultInstance() {
}
class TakePictureReq::_Internal {
 public:
};

TakePictureReq::TakePictureReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.TakePictureReq)
}
TakePictureReq::TakePictureReq(const TakePictureReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&camera_id_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(camera_id_));
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.TakePictureReq)
}

void TakePictureReq::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&camera_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(camera_id_));
}

TakePictureReq::~TakePictureReq() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.TakePictureReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TakePictureReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TakePictureReq::ArenaDtor(void* object) {
  TakePictureReq* _this = reinterpret_cast< TakePictureReq* >(object);
  (void)_this;
}
void TakePictureReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TakePictureReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TakePictureReq& TakePictureReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TakePictureReq_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void TakePictureReq::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.TakePictureReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&camera_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(camera_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TakePictureReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 scene_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          scene_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 camera_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          camera_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TakePictureReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.TakePictureReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_scene_id(), target);
  }

  // uint64 camera_id = 2;
  if (this->camera_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_camera_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.TakePictureReq)
  return target;
}

size_t TakePictureReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.TakePictureReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_scene_id());
  }

  // uint64 camera_id = 2;
  if (this->camera_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_camera_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TakePictureReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.TakePictureReq)
  GOOGLE_DCHECK_NE(&from, this);
  const TakePictureReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TakePictureReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.TakePictureReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.TakePictureReq)
    MergeFrom(*source);
  }
}

void TakePictureReq::MergeFrom(const TakePictureReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.TakePictureReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
  if (from.camera_id() != 0) {
    _internal_set_camera_id(from._internal_camera_id());
  }
}

void TakePictureReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.TakePictureReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakePictureReq::CopyFrom(const TakePictureReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.TakePictureReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakePictureReq::IsInitialized() const {
  return true;
}

void TakePictureReq::InternalSwap(TakePictureReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TakePictureReq, camera_id_)
      + sizeof(TakePictureReq::camera_id_)
      - PROTOBUF_FIELD_OFFSET(TakePictureReq, scene_id_)>(
          reinterpret_cast<char*>(&scene_id_),
          reinterpret_cast<char*>(&other->scene_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TakePictureReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CameraParamsReq::InitAsDefaultInstance() {
}
class CameraParamsReq::_Internal {
 public:
};

CameraParamsReq::CameraParamsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sapien.Renderer.server.proto.CameraParamsReq)
}
CameraParamsReq::CameraParamsReq(const CameraParamsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&skew_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(skew_));
  // @@protoc_insertion_point(copy_constructor:sapien.Renderer.server.proto.CameraParamsReq)
}

void CameraParamsReq::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skew_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(skew_));
}

CameraParamsReq::~CameraParamsReq() {
  // @@protoc_insertion_point(destructor:sapien.Renderer.server.proto.CameraParamsReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CameraParamsReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CameraParamsReq::ArenaDtor(void* object) {
  CameraParamsReq* _this = reinterpret_cast< CameraParamsReq* >(object);
  (void)_this;
}
void CameraParamsReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CameraParamsReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CameraParamsReq& CameraParamsReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CameraParamsReq_render_5fserver_2eproto.base);
  return *internal_default_instance();
}


void CameraParamsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:sapien.Renderer.server.proto.CameraParamsReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skew_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(skew_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CameraParamsReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 scene_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          scene_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 camera_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          camera_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float near = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          near_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float far = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          far_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float fx = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          fx_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float fy = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          fy_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float cx = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          cx_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float cy = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          cy_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float skew = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 77)) {
          skew_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CameraParamsReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sapien.Renderer.server.proto.CameraParamsReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_scene_id(), target);
  }

  // uint64 camera_id = 2;
  if (this->camera_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_camera_id(), target);
  }

  // float near = 3;
  if (!(this->near() <= 0 && this->near() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_near(), target);
  }

  // float far = 4;
  if (!(this->far() <= 0 && this->far() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_far(), target);
  }

  // float fx = 5;
  if (!(this->fx() <= 0 && this->fx() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_fx(), target);
  }

  // float fy = 6;
  if (!(this->fy() <= 0 && this->fy() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_fy(), target);
  }

  // float cx = 7;
  if (!(this->cx() <= 0 && this->cx() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_cx(), target);
  }

  // float cy = 8;
  if (!(this->cy() <= 0 && this->cy() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(8, this->_internal_cy(), target);
  }

  // float skew = 9;
  if (!(this->skew() <= 0 && this->skew() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(9, this->_internal_skew(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sapien.Renderer.server.proto.CameraParamsReq)
  return target;
}

size_t CameraParamsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sapien.Renderer.server.proto.CameraParamsReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_scene_id());
  }

  // uint64 camera_id = 2;
  if (this->camera_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_camera_id());
  }

  // float near = 3;
  if (!(this->near() <= 0 && this->near() >= 0)) {
    total_size += 1 + 4;
  }

  // float far = 4;
  if (!(this->far() <= 0 && this->far() >= 0)) {
    total_size += 1 + 4;
  }

  // float fx = 5;
  if (!(this->fx() <= 0 && this->fx() >= 0)) {
    total_size += 1 + 4;
  }

  // float fy = 6;
  if (!(this->fy() <= 0 && this->fy() >= 0)) {
    total_size += 1 + 4;
  }

  // float cx = 7;
  if (!(this->cx() <= 0 && this->cx() >= 0)) {
    total_size += 1 + 4;
  }

  // float cy = 8;
  if (!(this->cy() <= 0 && this->cy() >= 0)) {
    total_size += 1 + 4;
  }

  // float skew = 9;
  if (!(this->skew() <= 0 && this->skew() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CameraParamsReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sapien.Renderer.server.proto.CameraParamsReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CameraParamsReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CameraParamsReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sapien.Renderer.server.proto.CameraParamsReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sapien.Renderer.server.proto.CameraParamsReq)
    MergeFrom(*source);
  }
}

void CameraParamsReq::MergeFrom(const CameraParamsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sapien.Renderer.server.proto.CameraParamsReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    _internal_set_scene_id(from._internal_scene_id());
  }
  if (from.camera_id() != 0) {
    _internal_set_camera_id(from._internal_camera_id());
  }
  if (!(from.near() <= 0 && from.near() >= 0)) {
    _internal_set_near(from._internal_near());
  }
  if (!(from.far() <= 0 && from.far() >= 0)) {
    _internal_set_far(from._internal_far());
  }
  if (!(from.fx() <= 0 && from.fx() >= 0)) {
    _internal_set_fx(from._internal_fx());
  }
  if (!(from.fy() <= 0 && from.fy() >= 0)) {
    _internal_set_fy(from._internal_fy());
  }
  if (!(from.cx() <= 0 && from.cx() >= 0)) {
    _internal_set_cx(from._internal_cx());
  }
  if (!(from.cy() <= 0 && from.cy() >= 0)) {
    _internal_set_cy(from._internal_cy());
  }
  if (!(from.skew() <= 0 && from.skew() >= 0)) {
    _internal_set_skew(from._internal_skew());
  }
}

void CameraParamsReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sapien.Renderer.server.proto.CameraParamsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CameraParamsReq::CopyFrom(const CameraParamsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sapien.Renderer.server.proto.CameraParamsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CameraParamsReq::IsInitialized() const {
  return true;
}

void CameraParamsReq::InternalSwap(CameraParamsReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CameraParamsReq, skew_)
      + sizeof(CameraParamsReq::skew_)
      - PROTOBUF_FIELD_OFFSET(CameraParamsReq, scene_id_)>(
          reinterpret_cast<char*>(&scene_id_),
          reinterpret_cast<char*>(&other->scene_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CameraParamsReq::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace server
}  // namespace Renderer
}  // namespace sapien
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::Empty* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::Empty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::Empty >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::Index* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::Index >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::Index >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::Id* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::Id >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::Id >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::Vec3* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::Vec3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::Vec3 >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::Vec4* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::Vec4 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::Vec4 >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::Quat* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::Quat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::Quat >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::Pose* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::Pose >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::Pose >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::IdVec3* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::IdVec3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::IdVec3 >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::IdVec4* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::IdVec4 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::IdVec4 >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::IdFloat* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::IdFloat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::IdFloat >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::AddBodyMeshReq* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::AddBodyMeshReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::AddBodyMeshReq >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::AddBodyPrimitiveReq* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::AddBodyPrimitiveReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::AddBodyPrimitiveReq >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::RemoveBodyReq* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::RemoveBodyReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::RemoveBodyReq >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::AddCameraReq* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::AddCameraReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::AddCameraReq >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::RemoveCameraReq* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::RemoveCameraReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::RemoveCameraReq >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::AddPointLightReq* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::AddPointLightReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::AddPointLightReq >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::AddDirectionalLightReq* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::AddDirectionalLightReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::AddDirectionalLightReq >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::RemoveLightReq* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::RemoveLightReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::RemoveLightReq >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::EntityOrderReq* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::EntityOrderReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::EntityOrderReq >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::UpdateRenderReq* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::UpdateRenderReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::UpdateRenderReq >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::BodyIdReq* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::BodyIdReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::BodyIdReq >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::TakePictureReq* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::TakePictureReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::TakePictureReq >(arena);
}
template<> PROTOBUF_NOINLINE ::sapien::Renderer::server::proto::CameraParamsReq* Arena::CreateMaybeMessage< ::sapien::Renderer::server::proto::CameraParamsReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sapien::Renderer::server::proto::CameraParamsReq >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
