// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: render_server.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_render_5fserver_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_render_5fserver_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_render_5fserver_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_render_5fserver_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[24]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_render_5fserver_2eproto;
namespace sapien {
namespace Renderer {
namespace server {
namespace proto {
class AddBodyMeshReq;
class AddBodyMeshReqDefaultTypeInternal;
extern AddBodyMeshReqDefaultTypeInternal _AddBodyMeshReq_default_instance_;
class AddBodyPrimitiveReq;
class AddBodyPrimitiveReqDefaultTypeInternal;
extern AddBodyPrimitiveReqDefaultTypeInternal _AddBodyPrimitiveReq_default_instance_;
class AddCameraReq;
class AddCameraReqDefaultTypeInternal;
extern AddCameraReqDefaultTypeInternal _AddCameraReq_default_instance_;
class AddDirectionalLightReq;
class AddDirectionalLightReqDefaultTypeInternal;
extern AddDirectionalLightReqDefaultTypeInternal _AddDirectionalLightReq_default_instance_;
class AddPointLightReq;
class AddPointLightReqDefaultTypeInternal;
extern AddPointLightReqDefaultTypeInternal _AddPointLightReq_default_instance_;
class BodyIdReq;
class BodyIdReqDefaultTypeInternal;
extern BodyIdReqDefaultTypeInternal _BodyIdReq_default_instance_;
class CameraParamsReq;
class CameraParamsReqDefaultTypeInternal;
extern CameraParamsReqDefaultTypeInternal _CameraParamsReq_default_instance_;
class Empty;
class EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class EntityOrderReq;
class EntityOrderReqDefaultTypeInternal;
extern EntityOrderReqDefaultTypeInternal _EntityOrderReq_default_instance_;
class Id;
class IdDefaultTypeInternal;
extern IdDefaultTypeInternal _Id_default_instance_;
class IdFloat;
class IdFloatDefaultTypeInternal;
extern IdFloatDefaultTypeInternal _IdFloat_default_instance_;
class IdVec3;
class IdVec3DefaultTypeInternal;
extern IdVec3DefaultTypeInternal _IdVec3_default_instance_;
class IdVec4;
class IdVec4DefaultTypeInternal;
extern IdVec4DefaultTypeInternal _IdVec4_default_instance_;
class Index;
class IndexDefaultTypeInternal;
extern IndexDefaultTypeInternal _Index_default_instance_;
class Pose;
class PoseDefaultTypeInternal;
extern PoseDefaultTypeInternal _Pose_default_instance_;
class Quat;
class QuatDefaultTypeInternal;
extern QuatDefaultTypeInternal _Quat_default_instance_;
class RemoveBodyReq;
class RemoveBodyReqDefaultTypeInternal;
extern RemoveBodyReqDefaultTypeInternal _RemoveBodyReq_default_instance_;
class RemoveCameraReq;
class RemoveCameraReqDefaultTypeInternal;
extern RemoveCameraReqDefaultTypeInternal _RemoveCameraReq_default_instance_;
class RemoveLightReq;
class RemoveLightReqDefaultTypeInternal;
extern RemoveLightReqDefaultTypeInternal _RemoveLightReq_default_instance_;
class TakePictureReq;
class TakePictureReqDefaultTypeInternal;
extern TakePictureReqDefaultTypeInternal _TakePictureReq_default_instance_;
class UpdateRenderAndTakePicturesReq;
class UpdateRenderAndTakePicturesReqDefaultTypeInternal;
extern UpdateRenderAndTakePicturesReqDefaultTypeInternal _UpdateRenderAndTakePicturesReq_default_instance_;
class UpdateRenderReq;
class UpdateRenderReqDefaultTypeInternal;
extern UpdateRenderReqDefaultTypeInternal _UpdateRenderReq_default_instance_;
class Vec3;
class Vec3DefaultTypeInternal;
extern Vec3DefaultTypeInternal _Vec3_default_instance_;
class Vec4;
class Vec4DefaultTypeInternal;
extern Vec4DefaultTypeInternal _Vec4_default_instance_;
}  // namespace proto
}  // namespace server
}  // namespace Renderer
}  // namespace sapien
PROTOBUF_NAMESPACE_OPEN
template<> ::sapien::Renderer::server::proto::AddBodyMeshReq* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::AddBodyMeshReq>(Arena*);
template<> ::sapien::Renderer::server::proto::AddBodyPrimitiveReq* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::AddBodyPrimitiveReq>(Arena*);
template<> ::sapien::Renderer::server::proto::AddCameraReq* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::AddCameraReq>(Arena*);
template<> ::sapien::Renderer::server::proto::AddDirectionalLightReq* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::AddDirectionalLightReq>(Arena*);
template<> ::sapien::Renderer::server::proto::AddPointLightReq* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::AddPointLightReq>(Arena*);
template<> ::sapien::Renderer::server::proto::BodyIdReq* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::BodyIdReq>(Arena*);
template<> ::sapien::Renderer::server::proto::CameraParamsReq* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::CameraParamsReq>(Arena*);
template<> ::sapien::Renderer::server::proto::Empty* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::Empty>(Arena*);
template<> ::sapien::Renderer::server::proto::EntityOrderReq* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::EntityOrderReq>(Arena*);
template<> ::sapien::Renderer::server::proto::Id* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::Id>(Arena*);
template<> ::sapien::Renderer::server::proto::IdFloat* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::IdFloat>(Arena*);
template<> ::sapien::Renderer::server::proto::IdVec3* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::IdVec3>(Arena*);
template<> ::sapien::Renderer::server::proto::IdVec4* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::IdVec4>(Arena*);
template<> ::sapien::Renderer::server::proto::Index* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::Index>(Arena*);
template<> ::sapien::Renderer::server::proto::Pose* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::Pose>(Arena*);
template<> ::sapien::Renderer::server::proto::Quat* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::Quat>(Arena*);
template<> ::sapien::Renderer::server::proto::RemoveBodyReq* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::RemoveBodyReq>(Arena*);
template<> ::sapien::Renderer::server::proto::RemoveCameraReq* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::RemoveCameraReq>(Arena*);
template<> ::sapien::Renderer::server::proto::RemoveLightReq* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::RemoveLightReq>(Arena*);
template<> ::sapien::Renderer::server::proto::TakePictureReq* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::TakePictureReq>(Arena*);
template<> ::sapien::Renderer::server::proto::UpdateRenderAndTakePicturesReq* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::UpdateRenderAndTakePicturesReq>(Arena*);
template<> ::sapien::Renderer::server::proto::UpdateRenderReq* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::UpdateRenderReq>(Arena*);
template<> ::sapien::Renderer::server::proto::Vec3* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::Vec3>(Arena*);
template<> ::sapien::Renderer::server::proto::Vec4* Arena::CreateMaybeMessage<::sapien::Renderer::server::proto::Vec4>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace sapien {
namespace Renderer {
namespace server {
namespace proto {

enum PrimitiveType : int {
  SPHERE = 0,
  BOX = 1,
  CAPSULE = 2,
  PLANE = 3,
  PrimitiveType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  PrimitiveType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool PrimitiveType_IsValid(int value);
constexpr PrimitiveType PrimitiveType_MIN = SPHERE;
constexpr PrimitiveType PrimitiveType_MAX = PLANE;
constexpr int PrimitiveType_ARRAYSIZE = PrimitiveType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PrimitiveType_descriptor();
template<typename T>
inline const std::string& PrimitiveType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PrimitiveType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PrimitiveType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PrimitiveType_descriptor(), enum_t_value);
}
inline bool PrimitiveType_Parse(
    const std::string& name, PrimitiveType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PrimitiveType>(
    PrimitiveType_descriptor(), name, value);
}
// ===================================================================

class Empty PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.Empty) */ {
 public:
  inline Empty() : Empty(nullptr) {};
  virtual ~Empty();

  Empty(const Empty& from);
  Empty(Empty&& from) noexcept
    : Empty() {
    *this = ::std::move(from);
  }

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  inline Empty& operator=(Empty&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Empty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
               &_Empty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Empty& a, Empty& b) {
    a.Swap(&b);
  }
  inline void Swap(Empty* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Empty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Empty* New() const final {
    return CreateMaybeMessage<Empty>(nullptr);
  }

  Empty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Empty>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Empty& from);
  void MergeFrom(const Empty& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Empty* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.Empty";
  }
  protected:
  explicit Empty(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.Empty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class Index PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.Index) */ {
 public:
  inline Index() : Index(nullptr) {};
  virtual ~Index();

  Index(const Index& from);
  Index(Index&& from) noexcept
    : Index() {
    *this = ::std::move(from);
  }

  inline Index& operator=(const Index& from) {
    CopyFrom(from);
    return *this;
  }
  inline Index& operator=(Index&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Index& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Index* internal_default_instance() {
    return reinterpret_cast<const Index*>(
               &_Index_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Index& a, Index& b) {
    a.Swap(&b);
  }
  inline void Swap(Index* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Index* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Index* New() const final {
    return CreateMaybeMessage<Index>(nullptr);
  }

  Index* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Index>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Index& from);
  void MergeFrom(const Index& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Index* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.Index";
  }
  protected:
  explicit Index(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexFieldNumber = 1,
  };
  // uint64 index = 1;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::uint64 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.Index)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class Id PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.Id) */ {
 public:
  inline Id() : Id(nullptr) {};
  virtual ~Id();

  Id(const Id& from);
  Id(Id&& from) noexcept
    : Id() {
    *this = ::std::move(from);
  }

  inline Id& operator=(const Id& from) {
    CopyFrom(from);
    return *this;
  }
  inline Id& operator=(Id&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Id& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Id* internal_default_instance() {
    return reinterpret_cast<const Id*>(
               &_Id_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Id& a, Id& b) {
    a.Swap(&b);
  }
  inline void Swap(Id* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Id* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Id* New() const final {
    return CreateMaybeMessage<Id>(nullptr);
  }

  Id* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Id>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Id& from);
  void MergeFrom(const Id& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Id* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.Id";
  }
  protected:
  explicit Id(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // uint64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.Id)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class Vec3 PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.Vec3) */ {
 public:
  inline Vec3() : Vec3(nullptr) {};
  virtual ~Vec3();

  Vec3(const Vec3& from);
  Vec3(Vec3&& from) noexcept
    : Vec3() {
    *this = ::std::move(from);
  }

  inline Vec3& operator=(const Vec3& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vec3& operator=(Vec3&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Vec3& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Vec3* internal_default_instance() {
    return reinterpret_cast<const Vec3*>(
               &_Vec3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Vec3& a, Vec3& b) {
    a.Swap(&b);
  }
  inline void Swap(Vec3* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vec3* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Vec3* New() const final {
    return CreateMaybeMessage<Vec3>(nullptr);
  }

  Vec3* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Vec3>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Vec3& from);
  void MergeFrom(const Vec3& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vec3* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.Vec3";
  }
  protected:
  explicit Vec3(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // float x = 1;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 2;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // float z = 3;
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.Vec3)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float x_;
  float y_;
  float z_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class Vec4 PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.Vec4) */ {
 public:
  inline Vec4() : Vec4(nullptr) {};
  virtual ~Vec4();

  Vec4(const Vec4& from);
  Vec4(Vec4&& from) noexcept
    : Vec4() {
    *this = ::std::move(from);
  }

  inline Vec4& operator=(const Vec4& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vec4& operator=(Vec4&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Vec4& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Vec4* internal_default_instance() {
    return reinterpret_cast<const Vec4*>(
               &_Vec4_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Vec4& a, Vec4& b) {
    a.Swap(&b);
  }
  inline void Swap(Vec4* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vec4* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Vec4* New() const final {
    return CreateMaybeMessage<Vec4>(nullptr);
  }

  Vec4* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Vec4>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Vec4& from);
  void MergeFrom(const Vec4& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vec4* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.Vec4";
  }
  protected:
  explicit Vec4(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
    kWFieldNumber = 4,
  };
  // float x = 1;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 2;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // float z = 3;
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // float w = 4;
  void clear_w();
  float w() const;
  void set_w(float value);
  private:
  float _internal_w() const;
  void _internal_set_w(float value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.Vec4)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float x_;
  float y_;
  float z_;
  float w_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class Quat PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.Quat) */ {
 public:
  inline Quat() : Quat(nullptr) {};
  virtual ~Quat();

  Quat(const Quat& from);
  Quat(Quat&& from) noexcept
    : Quat() {
    *this = ::std::move(from);
  }

  inline Quat& operator=(const Quat& from) {
    CopyFrom(from);
    return *this;
  }
  inline Quat& operator=(Quat&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Quat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Quat* internal_default_instance() {
    return reinterpret_cast<const Quat*>(
               &_Quat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Quat& a, Quat& b) {
    a.Swap(&b);
  }
  inline void Swap(Quat* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Quat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Quat* New() const final {
    return CreateMaybeMessage<Quat>(nullptr);
  }

  Quat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Quat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Quat& from);
  void MergeFrom(const Quat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Quat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.Quat";
  }
  protected:
  explicit Quat(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWFieldNumber = 1,
    kXFieldNumber = 2,
    kYFieldNumber = 3,
    kZFieldNumber = 4,
  };
  // float w = 1;
  void clear_w();
  float w() const;
  void set_w(float value);
  private:
  float _internal_w() const;
  void _internal_set_w(float value);
  public:

  // float x = 2;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 3;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // float z = 4;
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.Quat)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float w_;
  float x_;
  float y_;
  float z_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class Pose PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.Pose) */ {
 public:
  inline Pose() : Pose(nullptr) {};
  virtual ~Pose();

  Pose(const Pose& from);
  Pose(Pose&& from) noexcept
    : Pose() {
    *this = ::std::move(from);
  }

  inline Pose& operator=(const Pose& from) {
    CopyFrom(from);
    return *this;
  }
  inline Pose& operator=(Pose&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Pose& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pose* internal_default_instance() {
    return reinterpret_cast<const Pose*>(
               &_Pose_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(Pose& a, Pose& b) {
    a.Swap(&b);
  }
  inline void Swap(Pose* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Pose* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Pose* New() const final {
    return CreateMaybeMessage<Pose>(nullptr);
  }

  Pose* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Pose>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Pose& from);
  void MergeFrom(const Pose& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Pose* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.Pose";
  }
  protected:
  explicit Pose(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPFieldNumber = 1,
    kQFieldNumber = 2,
  };
  // .sapien.Renderer.server.proto.Vec3 p = 1;
  bool has_p() const;
  private:
  bool _internal_has_p() const;
  public:
  void clear_p();
  const ::sapien::Renderer::server::proto::Vec3& p() const;
  ::sapien::Renderer::server::proto::Vec3* release_p();
  ::sapien::Renderer::server::proto::Vec3* mutable_p();
  void set_allocated_p(::sapien::Renderer::server::proto::Vec3* p);
  private:
  const ::sapien::Renderer::server::proto::Vec3& _internal_p() const;
  ::sapien::Renderer::server::proto::Vec3* _internal_mutable_p();
  public:
  void unsafe_arena_set_allocated_p(
      ::sapien::Renderer::server::proto::Vec3* p);
  ::sapien::Renderer::server::proto::Vec3* unsafe_arena_release_p();

  // .sapien.Renderer.server.proto.Quat q = 2;
  bool has_q() const;
  private:
  bool _internal_has_q() const;
  public:
  void clear_q();
  const ::sapien::Renderer::server::proto::Quat& q() const;
  ::sapien::Renderer::server::proto::Quat* release_q();
  ::sapien::Renderer::server::proto::Quat* mutable_q();
  void set_allocated_q(::sapien::Renderer::server::proto::Quat* q);
  private:
  const ::sapien::Renderer::server::proto::Quat& _internal_q() const;
  ::sapien::Renderer::server::proto::Quat* _internal_mutable_q();
  public:
  void unsafe_arena_set_allocated_q(
      ::sapien::Renderer::server::proto::Quat* q);
  ::sapien::Renderer::server::proto::Quat* unsafe_arena_release_q();

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.Pose)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::sapien::Renderer::server::proto::Vec3* p_;
  ::sapien::Renderer::server::proto::Quat* q_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class IdVec3 PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.IdVec3) */ {
 public:
  inline IdVec3() : IdVec3(nullptr) {};
  virtual ~IdVec3();

  IdVec3(const IdVec3& from);
  IdVec3(IdVec3&& from) noexcept
    : IdVec3() {
    *this = ::std::move(from);
  }

  inline IdVec3& operator=(const IdVec3& from) {
    CopyFrom(from);
    return *this;
  }
  inline IdVec3& operator=(IdVec3&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IdVec3& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IdVec3* internal_default_instance() {
    return reinterpret_cast<const IdVec3*>(
               &_IdVec3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(IdVec3& a, IdVec3& b) {
    a.Swap(&b);
  }
  inline void Swap(IdVec3* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IdVec3* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IdVec3* New() const final {
    return CreateMaybeMessage<IdVec3>(nullptr);
  }

  IdVec3* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IdVec3>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IdVec3& from);
  void MergeFrom(const IdVec3& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IdVec3* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.IdVec3";
  }
  protected:
  explicit IdVec3(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // .sapien.Renderer.server.proto.Vec3 data = 2;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const ::sapien::Renderer::server::proto::Vec3& data() const;
  ::sapien::Renderer::server::proto::Vec3* release_data();
  ::sapien::Renderer::server::proto::Vec3* mutable_data();
  void set_allocated_data(::sapien::Renderer::server::proto::Vec3* data);
  private:
  const ::sapien::Renderer::server::proto::Vec3& _internal_data() const;
  ::sapien::Renderer::server::proto::Vec3* _internal_mutable_data();
  public:
  void unsafe_arena_set_allocated_data(
      ::sapien::Renderer::server::proto::Vec3* data);
  ::sapien::Renderer::server::proto::Vec3* unsafe_arena_release_data();

  // uint64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.IdVec3)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::sapien::Renderer::server::proto::Vec3* data_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class IdVec4 PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.IdVec4) */ {
 public:
  inline IdVec4() : IdVec4(nullptr) {};
  virtual ~IdVec4();

  IdVec4(const IdVec4& from);
  IdVec4(IdVec4&& from) noexcept
    : IdVec4() {
    *this = ::std::move(from);
  }

  inline IdVec4& operator=(const IdVec4& from) {
    CopyFrom(from);
    return *this;
  }
  inline IdVec4& operator=(IdVec4&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IdVec4& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IdVec4* internal_default_instance() {
    return reinterpret_cast<const IdVec4*>(
               &_IdVec4_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(IdVec4& a, IdVec4& b) {
    a.Swap(&b);
  }
  inline void Swap(IdVec4* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IdVec4* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IdVec4* New() const final {
    return CreateMaybeMessage<IdVec4>(nullptr);
  }

  IdVec4* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IdVec4>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IdVec4& from);
  void MergeFrom(const IdVec4& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IdVec4* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.IdVec4";
  }
  protected:
  explicit IdVec4(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // .sapien.Renderer.server.proto.Vec4 data = 2;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const ::sapien::Renderer::server::proto::Vec4& data() const;
  ::sapien::Renderer::server::proto::Vec4* release_data();
  ::sapien::Renderer::server::proto::Vec4* mutable_data();
  void set_allocated_data(::sapien::Renderer::server::proto::Vec4* data);
  private:
  const ::sapien::Renderer::server::proto::Vec4& _internal_data() const;
  ::sapien::Renderer::server::proto::Vec4* _internal_mutable_data();
  public:
  void unsafe_arena_set_allocated_data(
      ::sapien::Renderer::server::proto::Vec4* data);
  ::sapien::Renderer::server::proto::Vec4* unsafe_arena_release_data();

  // uint64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.IdVec4)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::sapien::Renderer::server::proto::Vec4* data_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class IdFloat PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.IdFloat) */ {
 public:
  inline IdFloat() : IdFloat(nullptr) {};
  virtual ~IdFloat();

  IdFloat(const IdFloat& from);
  IdFloat(IdFloat&& from) noexcept
    : IdFloat() {
    *this = ::std::move(from);
  }

  inline IdFloat& operator=(const IdFloat& from) {
    CopyFrom(from);
    return *this;
  }
  inline IdFloat& operator=(IdFloat&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IdFloat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IdFloat* internal_default_instance() {
    return reinterpret_cast<const IdFloat*>(
               &_IdFloat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(IdFloat& a, IdFloat& b) {
    a.Swap(&b);
  }
  inline void Swap(IdFloat* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IdFloat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IdFloat* New() const final {
    return CreateMaybeMessage<IdFloat>(nullptr);
  }

  IdFloat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IdFloat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IdFloat& from);
  void MergeFrom(const IdFloat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IdFloat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.IdFloat";
  }
  protected:
  explicit IdFloat(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // uint64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // float data = 2;
  void clear_data();
  float data() const;
  void set_data(float value);
  private:
  float _internal_data() const;
  void _internal_set_data(float value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.IdFloat)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  float data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class AddBodyMeshReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.AddBodyMeshReq) */ {
 public:
  inline AddBodyMeshReq() : AddBodyMeshReq(nullptr) {};
  virtual ~AddBodyMeshReq();

  AddBodyMeshReq(const AddBodyMeshReq& from);
  AddBodyMeshReq(AddBodyMeshReq&& from) noexcept
    : AddBodyMeshReq() {
    *this = ::std::move(from);
  }

  inline AddBodyMeshReq& operator=(const AddBodyMeshReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddBodyMeshReq& operator=(AddBodyMeshReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AddBodyMeshReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddBodyMeshReq* internal_default_instance() {
    return reinterpret_cast<const AddBodyMeshReq*>(
               &_AddBodyMeshReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(AddBodyMeshReq& a, AddBodyMeshReq& b) {
    a.Swap(&b);
  }
  inline void Swap(AddBodyMeshReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddBodyMeshReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AddBodyMeshReq* New() const final {
    return CreateMaybeMessage<AddBodyMeshReq>(nullptr);
  }

  AddBodyMeshReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AddBodyMeshReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AddBodyMeshReq& from);
  void MergeFrom(const AddBodyMeshReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddBodyMeshReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.AddBodyMeshReq";
  }
  protected:
  explicit AddBodyMeshReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilenameFieldNumber = 2,
    kScaleFieldNumber = 3,
    kSceneIdFieldNumber = 1,
  };
  // string filename = 2;
  void clear_filename();
  const std::string& filename() const;
  void set_filename(const std::string& value);
  void set_filename(std::string&& value);
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  std::string* mutable_filename();
  std::string* release_filename();
  void set_allocated_filename(std::string* filename);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_filename();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_filename(
      std::string* filename);
  private:
  const std::string& _internal_filename() const;
  void _internal_set_filename(const std::string& value);
  std::string* _internal_mutable_filename();
  public:

  // .sapien.Renderer.server.proto.Vec3 scale = 3;
  bool has_scale() const;
  private:
  bool _internal_has_scale() const;
  public:
  void clear_scale();
  const ::sapien::Renderer::server::proto::Vec3& scale() const;
  ::sapien::Renderer::server::proto::Vec3* release_scale();
  ::sapien::Renderer::server::proto::Vec3* mutable_scale();
  void set_allocated_scale(::sapien::Renderer::server::proto::Vec3* scale);
  private:
  const ::sapien::Renderer::server::proto::Vec3& _internal_scale() const;
  ::sapien::Renderer::server::proto::Vec3* _internal_mutable_scale();
  public:
  void unsafe_arena_set_allocated_scale(
      ::sapien::Renderer::server::proto::Vec3* scale);
  ::sapien::Renderer::server::proto::Vec3* unsafe_arena_release_scale();

  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.AddBodyMeshReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filename_;
  ::sapien::Renderer::server::proto::Vec3* scale_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class AddBodyPrimitiveReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.AddBodyPrimitiveReq) */ {
 public:
  inline AddBodyPrimitiveReq() : AddBodyPrimitiveReq(nullptr) {};
  virtual ~AddBodyPrimitiveReq();

  AddBodyPrimitiveReq(const AddBodyPrimitiveReq& from);
  AddBodyPrimitiveReq(AddBodyPrimitiveReq&& from) noexcept
    : AddBodyPrimitiveReq() {
    *this = ::std::move(from);
  }

  inline AddBodyPrimitiveReq& operator=(const AddBodyPrimitiveReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddBodyPrimitiveReq& operator=(AddBodyPrimitiveReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AddBodyPrimitiveReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddBodyPrimitiveReq* internal_default_instance() {
    return reinterpret_cast<const AddBodyPrimitiveReq*>(
               &_AddBodyPrimitiveReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(AddBodyPrimitiveReq& a, AddBodyPrimitiveReq& b) {
    a.Swap(&b);
  }
  inline void Swap(AddBodyPrimitiveReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddBodyPrimitiveReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AddBodyPrimitiveReq* New() const final {
    return CreateMaybeMessage<AddBodyPrimitiveReq>(nullptr);
  }

  AddBodyPrimitiveReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AddBodyPrimitiveReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AddBodyPrimitiveReq& from);
  void MergeFrom(const AddBodyPrimitiveReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddBodyPrimitiveReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.AddBodyPrimitiveReq";
  }
  protected:
  explicit AddBodyPrimitiveReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kScaleFieldNumber = 3,
    kSceneIdFieldNumber = 1,
    kMaterialFieldNumber = 4,
    kTypeFieldNumber = 2,
  };
  // .sapien.Renderer.server.proto.Vec3 scale = 3;
  bool has_scale() const;
  private:
  bool _internal_has_scale() const;
  public:
  void clear_scale();
  const ::sapien::Renderer::server::proto::Vec3& scale() const;
  ::sapien::Renderer::server::proto::Vec3* release_scale();
  ::sapien::Renderer::server::proto::Vec3* mutable_scale();
  void set_allocated_scale(::sapien::Renderer::server::proto::Vec3* scale);
  private:
  const ::sapien::Renderer::server::proto::Vec3& _internal_scale() const;
  ::sapien::Renderer::server::proto::Vec3* _internal_mutable_scale();
  public:
  void unsafe_arena_set_allocated_scale(
      ::sapien::Renderer::server::proto::Vec3* scale);
  ::sapien::Renderer::server::proto::Vec3* unsafe_arena_release_scale();

  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 material = 4;
  void clear_material();
  ::PROTOBUF_NAMESPACE_ID::uint64 material() const;
  void set_material(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_material() const;
  void _internal_set_material(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .sapien.Renderer.server.proto.PrimitiveType type = 2;
  void clear_type();
  ::sapien::Renderer::server::proto::PrimitiveType type() const;
  void set_type(::sapien::Renderer::server::proto::PrimitiveType value);
  private:
  ::sapien::Renderer::server::proto::PrimitiveType _internal_type() const;
  void _internal_set_type(::sapien::Renderer::server::proto::PrimitiveType value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.AddBodyPrimitiveReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::sapien::Renderer::server::proto::Vec3* scale_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 material_;
  int type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class RemoveBodyReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.RemoveBodyReq) */ {
 public:
  inline RemoveBodyReq() : RemoveBodyReq(nullptr) {};
  virtual ~RemoveBodyReq();

  RemoveBodyReq(const RemoveBodyReq& from);
  RemoveBodyReq(RemoveBodyReq&& from) noexcept
    : RemoveBodyReq() {
    *this = ::std::move(from);
  }

  inline RemoveBodyReq& operator=(const RemoveBodyReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveBodyReq& operator=(RemoveBodyReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RemoveBodyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveBodyReq* internal_default_instance() {
    return reinterpret_cast<const RemoveBodyReq*>(
               &_RemoveBodyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(RemoveBodyReq& a, RemoveBodyReq& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveBodyReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveBodyReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RemoveBodyReq* New() const final {
    return CreateMaybeMessage<RemoveBodyReq>(nullptr);
  }

  RemoveBodyReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RemoveBodyReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RemoveBodyReq& from);
  void MergeFrom(const RemoveBodyReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveBodyReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.RemoveBodyReq";
  }
  protected:
  explicit RemoveBodyReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kBodyIdFieldNumber = 2,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 body_id = 2;
  void clear_body_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 body_id() const;
  void set_body_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_body_id() const;
  void _internal_set_body_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.RemoveBodyReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 body_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class AddCameraReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.AddCameraReq) */ {
 public:
  inline AddCameraReq() : AddCameraReq(nullptr) {};
  virtual ~AddCameraReq();

  AddCameraReq(const AddCameraReq& from);
  AddCameraReq(AddCameraReq&& from) noexcept
    : AddCameraReq() {
    *this = ::std::move(from);
  }

  inline AddCameraReq& operator=(const AddCameraReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddCameraReq& operator=(AddCameraReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AddCameraReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddCameraReq* internal_default_instance() {
    return reinterpret_cast<const AddCameraReq*>(
               &_AddCameraReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(AddCameraReq& a, AddCameraReq& b) {
    a.Swap(&b);
  }
  inline void Swap(AddCameraReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddCameraReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AddCameraReq* New() const final {
    return CreateMaybeMessage<AddCameraReq>(nullptr);
  }

  AddCameraReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AddCameraReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AddCameraReq& from);
  void MergeFrom(const AddCameraReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddCameraReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.AddCameraReq";
  }
  protected:
  explicit AddCameraReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShaderFieldNumber = 7,
    kSceneIdFieldNumber = 1,
    kWidthFieldNumber = 2,
    kHeightFieldNumber = 3,
    kFovyFieldNumber = 4,
    kNearFieldNumber = 5,
    kFarFieldNumber = 6,
  };
  // string shader = 7;
  void clear_shader();
  const std::string& shader() const;
  void set_shader(const std::string& value);
  void set_shader(std::string&& value);
  void set_shader(const char* value);
  void set_shader(const char* value, size_t size);
  std::string* mutable_shader();
  std::string* release_shader();
  void set_allocated_shader(std::string* shader);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_shader();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_shader(
      std::string* shader);
  private:
  const std::string& _internal_shader() const;
  void _internal_set_shader(const std::string& value);
  std::string* _internal_mutable_shader();
  public:

  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 width = 2;
  void clear_width();
  ::PROTOBUF_NAMESPACE_ID::uint32 width() const;
  void set_width(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_width() const;
  void _internal_set_width(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 height = 3;
  void clear_height();
  ::PROTOBUF_NAMESPACE_ID::uint32 height() const;
  void set_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_height() const;
  void _internal_set_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float fovy = 4;
  void clear_fovy();
  float fovy() const;
  void set_fovy(float value);
  private:
  float _internal_fovy() const;
  void _internal_set_fovy(float value);
  public:

  // float near = 5;
  void clear_near();
  float near() const;
  void set_near(float value);
  private:
  float _internal_near() const;
  void _internal_set_near(float value);
  public:

  // float far = 6;
  void clear_far();
  float far() const;
  void set_far(float value);
  private:
  float _internal_far() const;
  void _internal_set_far(float value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.AddCameraReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr shader_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 width_;
  ::PROTOBUF_NAMESPACE_ID::uint32 height_;
  float fovy_;
  float near_;
  float far_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class RemoveCameraReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.RemoveCameraReq) */ {
 public:
  inline RemoveCameraReq() : RemoveCameraReq(nullptr) {};
  virtual ~RemoveCameraReq();

  RemoveCameraReq(const RemoveCameraReq& from);
  RemoveCameraReq(RemoveCameraReq&& from) noexcept
    : RemoveCameraReq() {
    *this = ::std::move(from);
  }

  inline RemoveCameraReq& operator=(const RemoveCameraReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveCameraReq& operator=(RemoveCameraReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RemoveCameraReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveCameraReq* internal_default_instance() {
    return reinterpret_cast<const RemoveCameraReq*>(
               &_RemoveCameraReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(RemoveCameraReq& a, RemoveCameraReq& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveCameraReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveCameraReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RemoveCameraReq* New() const final {
    return CreateMaybeMessage<RemoveCameraReq>(nullptr);
  }

  RemoveCameraReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RemoveCameraReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RemoveCameraReq& from);
  void MergeFrom(const RemoveCameraReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveCameraReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.RemoveCameraReq";
  }
  protected:
  explicit RemoveCameraReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kCameraIdFieldNumber = 2,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 camera_id = 2;
  void clear_camera_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 camera_id() const;
  void set_camera_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_camera_id() const;
  void _internal_set_camera_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.RemoveCameraReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 camera_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class AddPointLightReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.AddPointLightReq) */ {
 public:
  inline AddPointLightReq() : AddPointLightReq(nullptr) {};
  virtual ~AddPointLightReq();

  AddPointLightReq(const AddPointLightReq& from);
  AddPointLightReq(AddPointLightReq&& from) noexcept
    : AddPointLightReq() {
    *this = ::std::move(from);
  }

  inline AddPointLightReq& operator=(const AddPointLightReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddPointLightReq& operator=(AddPointLightReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AddPointLightReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddPointLightReq* internal_default_instance() {
    return reinterpret_cast<const AddPointLightReq*>(
               &_AddPointLightReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(AddPointLightReq& a, AddPointLightReq& b) {
    a.Swap(&b);
  }
  inline void Swap(AddPointLightReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddPointLightReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AddPointLightReq* New() const final {
    return CreateMaybeMessage<AddPointLightReq>(nullptr);
  }

  AddPointLightReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AddPointLightReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AddPointLightReq& from);
  void MergeFrom(const AddPointLightReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddPointLightReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.AddPointLightReq";
  }
  protected:
  explicit AddPointLightReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionFieldNumber = 2,
    kColorFieldNumber = 3,
    kSceneIdFieldNumber = 1,
    kShadowFieldNumber = 4,
    kShadowNearFieldNumber = 5,
    kShadowFarFieldNumber = 6,
    kShadowMapSizeFieldNumber = 7,
  };
  // .sapien.Renderer.server.proto.Vec3 position = 2;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  const ::sapien::Renderer::server::proto::Vec3& position() const;
  ::sapien::Renderer::server::proto::Vec3* release_position();
  ::sapien::Renderer::server::proto::Vec3* mutable_position();
  void set_allocated_position(::sapien::Renderer::server::proto::Vec3* position);
  private:
  const ::sapien::Renderer::server::proto::Vec3& _internal_position() const;
  ::sapien::Renderer::server::proto::Vec3* _internal_mutable_position();
  public:
  void unsafe_arena_set_allocated_position(
      ::sapien::Renderer::server::proto::Vec3* position);
  ::sapien::Renderer::server::proto::Vec3* unsafe_arena_release_position();

  // .sapien.Renderer.server.proto.Vec3 color = 3;
  bool has_color() const;
  private:
  bool _internal_has_color() const;
  public:
  void clear_color();
  const ::sapien::Renderer::server::proto::Vec3& color() const;
  ::sapien::Renderer::server::proto::Vec3* release_color();
  ::sapien::Renderer::server::proto::Vec3* mutable_color();
  void set_allocated_color(::sapien::Renderer::server::proto::Vec3* color);
  private:
  const ::sapien::Renderer::server::proto::Vec3& _internal_color() const;
  ::sapien::Renderer::server::proto::Vec3* _internal_mutable_color();
  public:
  void unsafe_arena_set_allocated_color(
      ::sapien::Renderer::server::proto::Vec3* color);
  ::sapien::Renderer::server::proto::Vec3* unsafe_arena_release_color();

  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // bool shadow = 4;
  void clear_shadow();
  bool shadow() const;
  void set_shadow(bool value);
  private:
  bool _internal_shadow() const;
  void _internal_set_shadow(bool value);
  public:

  // float shadow_near = 5;
  void clear_shadow_near();
  float shadow_near() const;
  void set_shadow_near(float value);
  private:
  float _internal_shadow_near() const;
  void _internal_set_shadow_near(float value);
  public:

  // float shadow_far = 6;
  void clear_shadow_far();
  float shadow_far() const;
  void set_shadow_far(float value);
  private:
  float _internal_shadow_far() const;
  void _internal_set_shadow_far(float value);
  public:

  // int32 shadow_map_size = 7;
  void clear_shadow_map_size();
  ::PROTOBUF_NAMESPACE_ID::int32 shadow_map_size() const;
  void set_shadow_map_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_shadow_map_size() const;
  void _internal_set_shadow_map_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.AddPointLightReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::sapien::Renderer::server::proto::Vec3* position_;
  ::sapien::Renderer::server::proto::Vec3* color_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  bool shadow_;
  float shadow_near_;
  float shadow_far_;
  ::PROTOBUF_NAMESPACE_ID::int32 shadow_map_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class AddDirectionalLightReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.AddDirectionalLightReq) */ {
 public:
  inline AddDirectionalLightReq() : AddDirectionalLightReq(nullptr) {};
  virtual ~AddDirectionalLightReq();

  AddDirectionalLightReq(const AddDirectionalLightReq& from);
  AddDirectionalLightReq(AddDirectionalLightReq&& from) noexcept
    : AddDirectionalLightReq() {
    *this = ::std::move(from);
  }

  inline AddDirectionalLightReq& operator=(const AddDirectionalLightReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddDirectionalLightReq& operator=(AddDirectionalLightReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AddDirectionalLightReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddDirectionalLightReq* internal_default_instance() {
    return reinterpret_cast<const AddDirectionalLightReq*>(
               &_AddDirectionalLightReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(AddDirectionalLightReq& a, AddDirectionalLightReq& b) {
    a.Swap(&b);
  }
  inline void Swap(AddDirectionalLightReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddDirectionalLightReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AddDirectionalLightReq* New() const final {
    return CreateMaybeMessage<AddDirectionalLightReq>(nullptr);
  }

  AddDirectionalLightReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AddDirectionalLightReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AddDirectionalLightReq& from);
  void MergeFrom(const AddDirectionalLightReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddDirectionalLightReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.AddDirectionalLightReq";
  }
  protected:
  explicit AddDirectionalLightReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDirectionFieldNumber = 2,
    kColorFieldNumber = 3,
    kPositionFieldNumber = 5,
    kSceneIdFieldNumber = 1,
    kShadowFieldNumber = 4,
    kShadowScaleFieldNumber = 6,
    kShadowNearFieldNumber = 7,
    kShadowFarFieldNumber = 8,
    kShadowMapSizeFieldNumber = 9,
  };
  // .sapien.Renderer.server.proto.Vec3 direction = 2;
  bool has_direction() const;
  private:
  bool _internal_has_direction() const;
  public:
  void clear_direction();
  const ::sapien::Renderer::server::proto::Vec3& direction() const;
  ::sapien::Renderer::server::proto::Vec3* release_direction();
  ::sapien::Renderer::server::proto::Vec3* mutable_direction();
  void set_allocated_direction(::sapien::Renderer::server::proto::Vec3* direction);
  private:
  const ::sapien::Renderer::server::proto::Vec3& _internal_direction() const;
  ::sapien::Renderer::server::proto::Vec3* _internal_mutable_direction();
  public:
  void unsafe_arena_set_allocated_direction(
      ::sapien::Renderer::server::proto::Vec3* direction);
  ::sapien::Renderer::server::proto::Vec3* unsafe_arena_release_direction();

  // .sapien.Renderer.server.proto.Vec3 color = 3;
  bool has_color() const;
  private:
  bool _internal_has_color() const;
  public:
  void clear_color();
  const ::sapien::Renderer::server::proto::Vec3& color() const;
  ::sapien::Renderer::server::proto::Vec3* release_color();
  ::sapien::Renderer::server::proto::Vec3* mutable_color();
  void set_allocated_color(::sapien::Renderer::server::proto::Vec3* color);
  private:
  const ::sapien::Renderer::server::proto::Vec3& _internal_color() const;
  ::sapien::Renderer::server::proto::Vec3* _internal_mutable_color();
  public:
  void unsafe_arena_set_allocated_color(
      ::sapien::Renderer::server::proto::Vec3* color);
  ::sapien::Renderer::server::proto::Vec3* unsafe_arena_release_color();

  // .sapien.Renderer.server.proto.Vec3 position = 5;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  const ::sapien::Renderer::server::proto::Vec3& position() const;
  ::sapien::Renderer::server::proto::Vec3* release_position();
  ::sapien::Renderer::server::proto::Vec3* mutable_position();
  void set_allocated_position(::sapien::Renderer::server::proto::Vec3* position);
  private:
  const ::sapien::Renderer::server::proto::Vec3& _internal_position() const;
  ::sapien::Renderer::server::proto::Vec3* _internal_mutable_position();
  public:
  void unsafe_arena_set_allocated_position(
      ::sapien::Renderer::server::proto::Vec3* position);
  ::sapien::Renderer::server::proto::Vec3* unsafe_arena_release_position();

  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // bool shadow = 4;
  void clear_shadow();
  bool shadow() const;
  void set_shadow(bool value);
  private:
  bool _internal_shadow() const;
  void _internal_set_shadow(bool value);
  public:

  // float shadow_scale = 6;
  void clear_shadow_scale();
  float shadow_scale() const;
  void set_shadow_scale(float value);
  private:
  float _internal_shadow_scale() const;
  void _internal_set_shadow_scale(float value);
  public:

  // float shadow_near = 7;
  void clear_shadow_near();
  float shadow_near() const;
  void set_shadow_near(float value);
  private:
  float _internal_shadow_near() const;
  void _internal_set_shadow_near(float value);
  public:

  // float shadow_far = 8;
  void clear_shadow_far();
  float shadow_far() const;
  void set_shadow_far(float value);
  private:
  float _internal_shadow_far() const;
  void _internal_set_shadow_far(float value);
  public:

  // int32 shadow_map_size = 9;
  void clear_shadow_map_size();
  ::PROTOBUF_NAMESPACE_ID::int32 shadow_map_size() const;
  void set_shadow_map_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_shadow_map_size() const;
  void _internal_set_shadow_map_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.AddDirectionalLightReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::sapien::Renderer::server::proto::Vec3* direction_;
  ::sapien::Renderer::server::proto::Vec3* color_;
  ::sapien::Renderer::server::proto::Vec3* position_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  bool shadow_;
  float shadow_scale_;
  float shadow_near_;
  float shadow_far_;
  ::PROTOBUF_NAMESPACE_ID::int32 shadow_map_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class RemoveLightReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.RemoveLightReq) */ {
 public:
  inline RemoveLightReq() : RemoveLightReq(nullptr) {};
  virtual ~RemoveLightReq();

  RemoveLightReq(const RemoveLightReq& from);
  RemoveLightReq(RemoveLightReq&& from) noexcept
    : RemoveLightReq() {
    *this = ::std::move(from);
  }

  inline RemoveLightReq& operator=(const RemoveLightReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveLightReq& operator=(RemoveLightReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RemoveLightReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveLightReq* internal_default_instance() {
    return reinterpret_cast<const RemoveLightReq*>(
               &_RemoveLightReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(RemoveLightReq& a, RemoveLightReq& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveLightReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveLightReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RemoveLightReq* New() const final {
    return CreateMaybeMessage<RemoveLightReq>(nullptr);
  }

  RemoveLightReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RemoveLightReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RemoveLightReq& from);
  void MergeFrom(const RemoveLightReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveLightReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.RemoveLightReq";
  }
  protected:
  explicit RemoveLightReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kLightIdFieldNumber = 2,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 light_id = 2;
  void clear_light_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 light_id() const;
  void set_light_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_light_id() const;
  void _internal_set_light_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.RemoveLightReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 light_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class EntityOrderReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.EntityOrderReq) */ {
 public:
  inline EntityOrderReq() : EntityOrderReq(nullptr) {};
  virtual ~EntityOrderReq();

  EntityOrderReq(const EntityOrderReq& from);
  EntityOrderReq(EntityOrderReq&& from) noexcept
    : EntityOrderReq() {
    *this = ::std::move(from);
  }

  inline EntityOrderReq& operator=(const EntityOrderReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline EntityOrderReq& operator=(EntityOrderReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EntityOrderReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EntityOrderReq* internal_default_instance() {
    return reinterpret_cast<const EntityOrderReq*>(
               &_EntityOrderReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(EntityOrderReq& a, EntityOrderReq& b) {
    a.Swap(&b);
  }
  inline void Swap(EntityOrderReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EntityOrderReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EntityOrderReq* New() const final {
    return CreateMaybeMessage<EntityOrderReq>(nullptr);
  }

  EntityOrderReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EntityOrderReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EntityOrderReq& from);
  void MergeFrom(const EntityOrderReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EntityOrderReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.EntityOrderReq";
  }
  protected:
  explicit EntityOrderReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBodyIdsFieldNumber = 2,
    kCameraIdsFieldNumber = 3,
    kSceneIdFieldNumber = 1,
  };
  // repeated uint64 body_ids = 2 [packed = true];
  int body_ids_size() const;
  private:
  int _internal_body_ids_size() const;
  public:
  void clear_body_ids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_body_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_body_ids() const;
  void _internal_add_body_ids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_body_ids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 body_ids(int index) const;
  void set_body_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_body_ids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      body_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_body_ids();

  // repeated uint64 camera_ids = 3 [packed = true];
  int camera_ids_size() const;
  private:
  int _internal_camera_ids_size() const;
  public:
  void clear_camera_ids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_camera_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_camera_ids() const;
  void _internal_add_camera_ids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_camera_ids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 camera_ids(int index) const;
  void set_camera_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_camera_ids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      camera_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_camera_ids();

  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.EntityOrderReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > body_ids_;
  mutable std::atomic<int> _body_ids_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > camera_ids_;
  mutable std::atomic<int> _camera_ids_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class UpdateRenderReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.UpdateRenderReq) */ {
 public:
  inline UpdateRenderReq() : UpdateRenderReq(nullptr) {};
  virtual ~UpdateRenderReq();

  UpdateRenderReq(const UpdateRenderReq& from);
  UpdateRenderReq(UpdateRenderReq&& from) noexcept
    : UpdateRenderReq() {
    *this = ::std::move(from);
  }

  inline UpdateRenderReq& operator=(const UpdateRenderReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateRenderReq& operator=(UpdateRenderReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateRenderReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateRenderReq* internal_default_instance() {
    return reinterpret_cast<const UpdateRenderReq*>(
               &_UpdateRenderReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(UpdateRenderReq& a, UpdateRenderReq& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateRenderReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateRenderReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateRenderReq* New() const final {
    return CreateMaybeMessage<UpdateRenderReq>(nullptr);
  }

  UpdateRenderReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateRenderReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateRenderReq& from);
  void MergeFrom(const UpdateRenderReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateRenderReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.UpdateRenderReq";
  }
  protected:
  explicit UpdateRenderReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBodyPosesFieldNumber = 2,
    kCameraPosesFieldNumber = 3,
    kSceneIdFieldNumber = 1,
  };
  // repeated .sapien.Renderer.server.proto.Pose body_poses = 2;
  int body_poses_size() const;
  private:
  int _internal_body_poses_size() const;
  public:
  void clear_body_poses();
  ::sapien::Renderer::server::proto::Pose* mutable_body_poses(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::Renderer::server::proto::Pose >*
      mutable_body_poses();
  private:
  const ::sapien::Renderer::server::proto::Pose& _internal_body_poses(int index) const;
  ::sapien::Renderer::server::proto::Pose* _internal_add_body_poses();
  public:
  const ::sapien::Renderer::server::proto::Pose& body_poses(int index) const;
  ::sapien::Renderer::server::proto::Pose* add_body_poses();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::Renderer::server::proto::Pose >&
      body_poses() const;

  // repeated .sapien.Renderer.server.proto.Pose camera_poses = 3;
  int camera_poses_size() const;
  private:
  int _internal_camera_poses_size() const;
  public:
  void clear_camera_poses();
  ::sapien::Renderer::server::proto::Pose* mutable_camera_poses(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::Renderer::server::proto::Pose >*
      mutable_camera_poses();
  private:
  const ::sapien::Renderer::server::proto::Pose& _internal_camera_poses(int index) const;
  ::sapien::Renderer::server::proto::Pose* _internal_add_camera_poses();
  public:
  const ::sapien::Renderer::server::proto::Pose& camera_poses(int index) const;
  ::sapien::Renderer::server::proto::Pose* add_camera_poses();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::Renderer::server::proto::Pose >&
      camera_poses() const;

  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.UpdateRenderReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::Renderer::server::proto::Pose > body_poses_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::Renderer::server::proto::Pose > camera_poses_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class BodyIdReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.BodyIdReq) */ {
 public:
  inline BodyIdReq() : BodyIdReq(nullptr) {};
  virtual ~BodyIdReq();

  BodyIdReq(const BodyIdReq& from);
  BodyIdReq(BodyIdReq&& from) noexcept
    : BodyIdReq() {
    *this = ::std::move(from);
  }

  inline BodyIdReq& operator=(const BodyIdReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline BodyIdReq& operator=(BodyIdReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BodyIdReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BodyIdReq* internal_default_instance() {
    return reinterpret_cast<const BodyIdReq*>(
               &_BodyIdReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(BodyIdReq& a, BodyIdReq& b) {
    a.Swap(&b);
  }
  inline void Swap(BodyIdReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BodyIdReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BodyIdReq* New() const final {
    return CreateMaybeMessage<BodyIdReq>(nullptr);
  }

  BodyIdReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BodyIdReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BodyIdReq& from);
  void MergeFrom(const BodyIdReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BodyIdReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.BodyIdReq";
  }
  protected:
  explicit BodyIdReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kBodyIdFieldNumber = 2,
    kIdFieldNumber = 3,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 body_id = 2;
  void clear_body_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 body_id() const;
  void set_body_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_body_id() const;
  void _internal_set_body_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 id = 3;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.BodyIdReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 body_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class TakePictureReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.TakePictureReq) */ {
 public:
  inline TakePictureReq() : TakePictureReq(nullptr) {};
  virtual ~TakePictureReq();

  TakePictureReq(const TakePictureReq& from);
  TakePictureReq(TakePictureReq&& from) noexcept
    : TakePictureReq() {
    *this = ::std::move(from);
  }

  inline TakePictureReq& operator=(const TakePictureReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline TakePictureReq& operator=(TakePictureReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TakePictureReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TakePictureReq* internal_default_instance() {
    return reinterpret_cast<const TakePictureReq*>(
               &_TakePictureReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(TakePictureReq& a, TakePictureReq& b) {
    a.Swap(&b);
  }
  inline void Swap(TakePictureReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TakePictureReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TakePictureReq* New() const final {
    return CreateMaybeMessage<TakePictureReq>(nullptr);
  }

  TakePictureReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TakePictureReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TakePictureReq& from);
  void MergeFrom(const TakePictureReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TakePictureReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.TakePictureReq";
  }
  protected:
  explicit TakePictureReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kCameraIdFieldNumber = 2,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 camera_id = 2;
  void clear_camera_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 camera_id() const;
  void set_camera_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_camera_id() const;
  void _internal_set_camera_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.TakePictureReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 camera_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class UpdateRenderAndTakePicturesReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.UpdateRenderAndTakePicturesReq) */ {
 public:
  inline UpdateRenderAndTakePicturesReq() : UpdateRenderAndTakePicturesReq(nullptr) {};
  virtual ~UpdateRenderAndTakePicturesReq();

  UpdateRenderAndTakePicturesReq(const UpdateRenderAndTakePicturesReq& from);
  UpdateRenderAndTakePicturesReq(UpdateRenderAndTakePicturesReq&& from) noexcept
    : UpdateRenderAndTakePicturesReq() {
    *this = ::std::move(from);
  }

  inline UpdateRenderAndTakePicturesReq& operator=(const UpdateRenderAndTakePicturesReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateRenderAndTakePicturesReq& operator=(UpdateRenderAndTakePicturesReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateRenderAndTakePicturesReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateRenderAndTakePicturesReq* internal_default_instance() {
    return reinterpret_cast<const UpdateRenderAndTakePicturesReq*>(
               &_UpdateRenderAndTakePicturesReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(UpdateRenderAndTakePicturesReq& a, UpdateRenderAndTakePicturesReq& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateRenderAndTakePicturesReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateRenderAndTakePicturesReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateRenderAndTakePicturesReq* New() const final {
    return CreateMaybeMessage<UpdateRenderAndTakePicturesReq>(nullptr);
  }

  UpdateRenderAndTakePicturesReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateRenderAndTakePicturesReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateRenderAndTakePicturesReq& from);
  void MergeFrom(const UpdateRenderAndTakePicturesReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateRenderAndTakePicturesReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.UpdateRenderAndTakePicturesReq";
  }
  protected:
  explicit UpdateRenderAndTakePicturesReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBodyPosesFieldNumber = 2,
    kCameraPosesFieldNumber = 3,
    kCameraIdsFieldNumber = 4,
    kSceneIdFieldNumber = 1,
  };
  // repeated .sapien.Renderer.server.proto.Pose body_poses = 2;
  int body_poses_size() const;
  private:
  int _internal_body_poses_size() const;
  public:
  void clear_body_poses();
  ::sapien::Renderer::server::proto::Pose* mutable_body_poses(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::Renderer::server::proto::Pose >*
      mutable_body_poses();
  private:
  const ::sapien::Renderer::server::proto::Pose& _internal_body_poses(int index) const;
  ::sapien::Renderer::server::proto::Pose* _internal_add_body_poses();
  public:
  const ::sapien::Renderer::server::proto::Pose& body_poses(int index) const;
  ::sapien::Renderer::server::proto::Pose* add_body_poses();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::Renderer::server::proto::Pose >&
      body_poses() const;

  // repeated .sapien.Renderer.server.proto.Pose camera_poses = 3;
  int camera_poses_size() const;
  private:
  int _internal_camera_poses_size() const;
  public:
  void clear_camera_poses();
  ::sapien::Renderer::server::proto::Pose* mutable_camera_poses(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::Renderer::server::proto::Pose >*
      mutable_camera_poses();
  private:
  const ::sapien::Renderer::server::proto::Pose& _internal_camera_poses(int index) const;
  ::sapien::Renderer::server::proto::Pose* _internal_add_camera_poses();
  public:
  const ::sapien::Renderer::server::proto::Pose& camera_poses(int index) const;
  ::sapien::Renderer::server::proto::Pose* add_camera_poses();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::Renderer::server::proto::Pose >&
      camera_poses() const;

  // repeated uint64 camera_ids = 4 [packed = true];
  int camera_ids_size() const;
  private:
  int _internal_camera_ids_size() const;
  public:
  void clear_camera_ids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_camera_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_camera_ids() const;
  void _internal_add_camera_ids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_camera_ids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 camera_ids(int index) const;
  void set_camera_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_camera_ids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      camera_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_camera_ids();

  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.UpdateRenderAndTakePicturesReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::Renderer::server::proto::Pose > body_poses_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::Renderer::server::proto::Pose > camera_poses_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > camera_ids_;
  mutable std::atomic<int> _camera_ids_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// -------------------------------------------------------------------

class CameraParamsReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:sapien.Renderer.server.proto.CameraParamsReq) */ {
 public:
  inline CameraParamsReq() : CameraParamsReq(nullptr) {};
  virtual ~CameraParamsReq();

  CameraParamsReq(const CameraParamsReq& from);
  CameraParamsReq(CameraParamsReq&& from) noexcept
    : CameraParamsReq() {
    *this = ::std::move(from);
  }

  inline CameraParamsReq& operator=(const CameraParamsReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraParamsReq& operator=(CameraParamsReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CameraParamsReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CameraParamsReq* internal_default_instance() {
    return reinterpret_cast<const CameraParamsReq*>(
               &_CameraParamsReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CameraParamsReq& a, CameraParamsReq& b) {
    a.Swap(&b);
  }
  inline void Swap(CameraParamsReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraParamsReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CameraParamsReq* New() const final {
    return CreateMaybeMessage<CameraParamsReq>(nullptr);
  }

  CameraParamsReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CameraParamsReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CameraParamsReq& from);
  void MergeFrom(const CameraParamsReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CameraParamsReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sapien.Renderer.server.proto.CameraParamsReq";
  }
  protected:
  explicit CameraParamsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_render_5fserver_2eproto);
    return ::descriptor_table_render_5fserver_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kCameraIdFieldNumber = 2,
    kNearFieldNumber = 3,
    kFarFieldNumber = 4,
    kFxFieldNumber = 5,
    kFyFieldNumber = 6,
    kCxFieldNumber = 7,
    kCyFieldNumber = 8,
    kSkewFieldNumber = 9,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 camera_id = 2;
  void clear_camera_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 camera_id() const;
  void set_camera_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_camera_id() const;
  void _internal_set_camera_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // float near = 3;
  void clear_near();
  float near() const;
  void set_near(float value);
  private:
  float _internal_near() const;
  void _internal_set_near(float value);
  public:

  // float far = 4;
  void clear_far();
  float far() const;
  void set_far(float value);
  private:
  float _internal_far() const;
  void _internal_set_far(float value);
  public:

  // float fx = 5;
  void clear_fx();
  float fx() const;
  void set_fx(float value);
  private:
  float _internal_fx() const;
  void _internal_set_fx(float value);
  public:

  // float fy = 6;
  void clear_fy();
  float fy() const;
  void set_fy(float value);
  private:
  float _internal_fy() const;
  void _internal_set_fy(float value);
  public:

  // float cx = 7;
  void clear_cx();
  float cx() const;
  void set_cx(float value);
  private:
  float _internal_cx() const;
  void _internal_set_cx(float value);
  public:

  // float cy = 8;
  void clear_cy();
  float cy() const;
  void set_cy(float value);
  private:
  float _internal_cy() const;
  void _internal_set_cy(float value);
  public:

  // float skew = 9;
  void clear_skew();
  float skew() const;
  void set_skew(float value);
  private:
  float _internal_skew() const;
  void _internal_set_skew(float value);
  public:

  // @@protoc_insertion_point(class_scope:sapien.Renderer.server.proto.CameraParamsReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 camera_id_;
  float near_;
  float far_;
  float fx_;
  float fy_;
  float cx_;
  float cy_;
  float skew_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_render_5fserver_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Empty

// -------------------------------------------------------------------

// Index

// uint64 index = 1;
inline void Index::clear_index() {
  index_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Index::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Index::index() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.Index.index)
  return _internal_index();
}
inline void Index::_internal_set_index(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  index_ = value;
}
inline void Index::set_index(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.Index.index)
}

// -------------------------------------------------------------------

// Id

// uint64 id = 1;
inline void Id::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Id::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Id::id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.Id.id)
  return _internal_id();
}
inline void Id::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void Id::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.Id.id)
}

// -------------------------------------------------------------------

// Vec3

// float x = 1;
inline void Vec3::clear_x() {
  x_ = 0;
}
inline float Vec3::_internal_x() const {
  return x_;
}
inline float Vec3::x() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.Vec3.x)
  return _internal_x();
}
inline void Vec3::_internal_set_x(float value) {
  
  x_ = value;
}
inline void Vec3::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.Vec3.x)
}

// float y = 2;
inline void Vec3::clear_y() {
  y_ = 0;
}
inline float Vec3::_internal_y() const {
  return y_;
}
inline float Vec3::y() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.Vec3.y)
  return _internal_y();
}
inline void Vec3::_internal_set_y(float value) {
  
  y_ = value;
}
inline void Vec3::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.Vec3.y)
}

// float z = 3;
inline void Vec3::clear_z() {
  z_ = 0;
}
inline float Vec3::_internal_z() const {
  return z_;
}
inline float Vec3::z() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.Vec3.z)
  return _internal_z();
}
inline void Vec3::_internal_set_z(float value) {
  
  z_ = value;
}
inline void Vec3::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.Vec3.z)
}

// -------------------------------------------------------------------

// Vec4

// float x = 1;
inline void Vec4::clear_x() {
  x_ = 0;
}
inline float Vec4::_internal_x() const {
  return x_;
}
inline float Vec4::x() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.Vec4.x)
  return _internal_x();
}
inline void Vec4::_internal_set_x(float value) {
  
  x_ = value;
}
inline void Vec4::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.Vec4.x)
}

// float y = 2;
inline void Vec4::clear_y() {
  y_ = 0;
}
inline float Vec4::_internal_y() const {
  return y_;
}
inline float Vec4::y() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.Vec4.y)
  return _internal_y();
}
inline void Vec4::_internal_set_y(float value) {
  
  y_ = value;
}
inline void Vec4::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.Vec4.y)
}

// float z = 3;
inline void Vec4::clear_z() {
  z_ = 0;
}
inline float Vec4::_internal_z() const {
  return z_;
}
inline float Vec4::z() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.Vec4.z)
  return _internal_z();
}
inline void Vec4::_internal_set_z(float value) {
  
  z_ = value;
}
inline void Vec4::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.Vec4.z)
}

// float w = 4;
inline void Vec4::clear_w() {
  w_ = 0;
}
inline float Vec4::_internal_w() const {
  return w_;
}
inline float Vec4::w() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.Vec4.w)
  return _internal_w();
}
inline void Vec4::_internal_set_w(float value) {
  
  w_ = value;
}
inline void Vec4::set_w(float value) {
  _internal_set_w(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.Vec4.w)
}

// -------------------------------------------------------------------

// Quat

// float w = 1;
inline void Quat::clear_w() {
  w_ = 0;
}
inline float Quat::_internal_w() const {
  return w_;
}
inline float Quat::w() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.Quat.w)
  return _internal_w();
}
inline void Quat::_internal_set_w(float value) {
  
  w_ = value;
}
inline void Quat::set_w(float value) {
  _internal_set_w(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.Quat.w)
}

// float x = 2;
inline void Quat::clear_x() {
  x_ = 0;
}
inline float Quat::_internal_x() const {
  return x_;
}
inline float Quat::x() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.Quat.x)
  return _internal_x();
}
inline void Quat::_internal_set_x(float value) {
  
  x_ = value;
}
inline void Quat::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.Quat.x)
}

// float y = 3;
inline void Quat::clear_y() {
  y_ = 0;
}
inline float Quat::_internal_y() const {
  return y_;
}
inline float Quat::y() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.Quat.y)
  return _internal_y();
}
inline void Quat::_internal_set_y(float value) {
  
  y_ = value;
}
inline void Quat::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.Quat.y)
}

// float z = 4;
inline void Quat::clear_z() {
  z_ = 0;
}
inline float Quat::_internal_z() const {
  return z_;
}
inline float Quat::z() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.Quat.z)
  return _internal_z();
}
inline void Quat::_internal_set_z(float value) {
  
  z_ = value;
}
inline void Quat::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.Quat.z)
}

// -------------------------------------------------------------------

// Pose

// .sapien.Renderer.server.proto.Vec3 p = 1;
inline bool Pose::_internal_has_p() const {
  return this != internal_default_instance() && p_ != nullptr;
}
inline bool Pose::has_p() const {
  return _internal_has_p();
}
inline void Pose::clear_p() {
  if (GetArena() == nullptr && p_ != nullptr) {
    delete p_;
  }
  p_ = nullptr;
}
inline const ::sapien::Renderer::server::proto::Vec3& Pose::_internal_p() const {
  const ::sapien::Renderer::server::proto::Vec3* p = p_;
  return p != nullptr ? *p : *reinterpret_cast<const ::sapien::Renderer::server::proto::Vec3*>(
      &::sapien::Renderer::server::proto::_Vec3_default_instance_);
}
inline const ::sapien::Renderer::server::proto::Vec3& Pose::p() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.Pose.p)
  return _internal_p();
}
inline void Pose::unsafe_arena_set_allocated_p(
    ::sapien::Renderer::server::proto::Vec3* p) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(p_);
  }
  p_ = p;
  if (p) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.Renderer.server.proto.Pose.p)
}
inline ::sapien::Renderer::server::proto::Vec3* Pose::release_p() {
  auto temp = unsafe_arena_release_p();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::sapien::Renderer::server::proto::Vec3* Pose::unsafe_arena_release_p() {
  // @@protoc_insertion_point(field_release:sapien.Renderer.server.proto.Pose.p)
  
  ::sapien::Renderer::server::proto::Vec3* temp = p_;
  p_ = nullptr;
  return temp;
}
inline ::sapien::Renderer::server::proto::Vec3* Pose::_internal_mutable_p() {
  
  if (p_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::Renderer::server::proto::Vec3>(GetArena());
    p_ = p;
  }
  return p_;
}
inline ::sapien::Renderer::server::proto::Vec3* Pose::mutable_p() {
  // @@protoc_insertion_point(field_mutable:sapien.Renderer.server.proto.Pose.p)
  return _internal_mutable_p();
}
inline void Pose::set_allocated_p(::sapien::Renderer::server::proto::Vec3* p) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete p_;
  }
  if (p) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(p);
    if (message_arena != submessage_arena) {
      p = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, p, submessage_arena);
    }
    
  } else {
    
  }
  p_ = p;
  // @@protoc_insertion_point(field_set_allocated:sapien.Renderer.server.proto.Pose.p)
}

// .sapien.Renderer.server.proto.Quat q = 2;
inline bool Pose::_internal_has_q() const {
  return this != internal_default_instance() && q_ != nullptr;
}
inline bool Pose::has_q() const {
  return _internal_has_q();
}
inline void Pose::clear_q() {
  if (GetArena() == nullptr && q_ != nullptr) {
    delete q_;
  }
  q_ = nullptr;
}
inline const ::sapien::Renderer::server::proto::Quat& Pose::_internal_q() const {
  const ::sapien::Renderer::server::proto::Quat* p = q_;
  return p != nullptr ? *p : *reinterpret_cast<const ::sapien::Renderer::server::proto::Quat*>(
      &::sapien::Renderer::server::proto::_Quat_default_instance_);
}
inline const ::sapien::Renderer::server::proto::Quat& Pose::q() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.Pose.q)
  return _internal_q();
}
inline void Pose::unsafe_arena_set_allocated_q(
    ::sapien::Renderer::server::proto::Quat* q) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(q_);
  }
  q_ = q;
  if (q) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.Renderer.server.proto.Pose.q)
}
inline ::sapien::Renderer::server::proto::Quat* Pose::release_q() {
  auto temp = unsafe_arena_release_q();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::sapien::Renderer::server::proto::Quat* Pose::unsafe_arena_release_q() {
  // @@protoc_insertion_point(field_release:sapien.Renderer.server.proto.Pose.q)
  
  ::sapien::Renderer::server::proto::Quat* temp = q_;
  q_ = nullptr;
  return temp;
}
inline ::sapien::Renderer::server::proto::Quat* Pose::_internal_mutable_q() {
  
  if (q_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::Renderer::server::proto::Quat>(GetArena());
    q_ = p;
  }
  return q_;
}
inline ::sapien::Renderer::server::proto::Quat* Pose::mutable_q() {
  // @@protoc_insertion_point(field_mutable:sapien.Renderer.server.proto.Pose.q)
  return _internal_mutable_q();
}
inline void Pose::set_allocated_q(::sapien::Renderer::server::proto::Quat* q) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete q_;
  }
  if (q) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(q);
    if (message_arena != submessage_arena) {
      q = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, q, submessage_arena);
    }
    
  } else {
    
  }
  q_ = q;
  // @@protoc_insertion_point(field_set_allocated:sapien.Renderer.server.proto.Pose.q)
}

// -------------------------------------------------------------------

// IdVec3

// uint64 id = 1;
inline void IdVec3::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 IdVec3::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 IdVec3::id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.IdVec3.id)
  return _internal_id();
}
inline void IdVec3::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void IdVec3::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.IdVec3.id)
}

// .sapien.Renderer.server.proto.Vec3 data = 2;
inline bool IdVec3::_internal_has_data() const {
  return this != internal_default_instance() && data_ != nullptr;
}
inline bool IdVec3::has_data() const {
  return _internal_has_data();
}
inline void IdVec3::clear_data() {
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
inline const ::sapien::Renderer::server::proto::Vec3& IdVec3::_internal_data() const {
  const ::sapien::Renderer::server::proto::Vec3* p = data_;
  return p != nullptr ? *p : *reinterpret_cast<const ::sapien::Renderer::server::proto::Vec3*>(
      &::sapien::Renderer::server::proto::_Vec3_default_instance_);
}
inline const ::sapien::Renderer::server::proto::Vec3& IdVec3::data() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.IdVec3.data)
  return _internal_data();
}
inline void IdVec3::unsafe_arena_set_allocated_data(
    ::sapien::Renderer::server::proto::Vec3* data) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(data_);
  }
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.Renderer.server.proto.IdVec3.data)
}
inline ::sapien::Renderer::server::proto::Vec3* IdVec3::release_data() {
  auto temp = unsafe_arena_release_data();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::sapien::Renderer::server::proto::Vec3* IdVec3::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_release:sapien.Renderer.server.proto.IdVec3.data)
  
  ::sapien::Renderer::server::proto::Vec3* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::sapien::Renderer::server::proto::Vec3* IdVec3::_internal_mutable_data() {
  
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::Renderer::server::proto::Vec3>(GetArena());
    data_ = p;
  }
  return data_;
}
inline ::sapien::Renderer::server::proto::Vec3* IdVec3::mutable_data() {
  // @@protoc_insertion_point(field_mutable:sapien.Renderer.server.proto.IdVec3.data)
  return _internal_mutable_data();
}
inline void IdVec3::set_allocated_data(::sapien::Renderer::server::proto::Vec3* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete data_;
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(data);
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:sapien.Renderer.server.proto.IdVec3.data)
}

// -------------------------------------------------------------------

// IdVec4

// uint64 id = 1;
inline void IdVec4::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 IdVec4::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 IdVec4::id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.IdVec4.id)
  return _internal_id();
}
inline void IdVec4::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void IdVec4::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.IdVec4.id)
}

// .sapien.Renderer.server.proto.Vec4 data = 2;
inline bool IdVec4::_internal_has_data() const {
  return this != internal_default_instance() && data_ != nullptr;
}
inline bool IdVec4::has_data() const {
  return _internal_has_data();
}
inline void IdVec4::clear_data() {
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
inline const ::sapien::Renderer::server::proto::Vec4& IdVec4::_internal_data() const {
  const ::sapien::Renderer::server::proto::Vec4* p = data_;
  return p != nullptr ? *p : *reinterpret_cast<const ::sapien::Renderer::server::proto::Vec4*>(
      &::sapien::Renderer::server::proto::_Vec4_default_instance_);
}
inline const ::sapien::Renderer::server::proto::Vec4& IdVec4::data() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.IdVec4.data)
  return _internal_data();
}
inline void IdVec4::unsafe_arena_set_allocated_data(
    ::sapien::Renderer::server::proto::Vec4* data) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(data_);
  }
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.Renderer.server.proto.IdVec4.data)
}
inline ::sapien::Renderer::server::proto::Vec4* IdVec4::release_data() {
  auto temp = unsafe_arena_release_data();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::sapien::Renderer::server::proto::Vec4* IdVec4::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_release:sapien.Renderer.server.proto.IdVec4.data)
  
  ::sapien::Renderer::server::proto::Vec4* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::sapien::Renderer::server::proto::Vec4* IdVec4::_internal_mutable_data() {
  
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::Renderer::server::proto::Vec4>(GetArena());
    data_ = p;
  }
  return data_;
}
inline ::sapien::Renderer::server::proto::Vec4* IdVec4::mutable_data() {
  // @@protoc_insertion_point(field_mutable:sapien.Renderer.server.proto.IdVec4.data)
  return _internal_mutable_data();
}
inline void IdVec4::set_allocated_data(::sapien::Renderer::server::proto::Vec4* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete data_;
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(data);
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:sapien.Renderer.server.proto.IdVec4.data)
}

// -------------------------------------------------------------------

// IdFloat

// uint64 id = 1;
inline void IdFloat::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 IdFloat::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 IdFloat::id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.IdFloat.id)
  return _internal_id();
}
inline void IdFloat::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void IdFloat::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.IdFloat.id)
}

// float data = 2;
inline void IdFloat::clear_data() {
  data_ = 0;
}
inline float IdFloat::_internal_data() const {
  return data_;
}
inline float IdFloat::data() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.IdFloat.data)
  return _internal_data();
}
inline void IdFloat::_internal_set_data(float value) {
  
  data_ = value;
}
inline void IdFloat::set_data(float value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.IdFloat.data)
}

// -------------------------------------------------------------------

// AddBodyMeshReq

// uint64 scene_id = 1;
inline void AddBodyMeshReq::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AddBodyMeshReq::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AddBodyMeshReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddBodyMeshReq.scene_id)
  return _internal_scene_id();
}
inline void AddBodyMeshReq::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void AddBodyMeshReq::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddBodyMeshReq.scene_id)
}

// string filename = 2;
inline void AddBodyMeshReq::clear_filename() {
  filename_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& AddBodyMeshReq::filename() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddBodyMeshReq.filename)
  return _internal_filename();
}
inline void AddBodyMeshReq::set_filename(const std::string& value) {
  _internal_set_filename(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddBodyMeshReq.filename)
}
inline std::string* AddBodyMeshReq::mutable_filename() {
  // @@protoc_insertion_point(field_mutable:sapien.Renderer.server.proto.AddBodyMeshReq.filename)
  return _internal_mutable_filename();
}
inline const std::string& AddBodyMeshReq::_internal_filename() const {
  return filename_.Get();
}
inline void AddBodyMeshReq::_internal_set_filename(const std::string& value) {
  
  filename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void AddBodyMeshReq::set_filename(std::string&& value) {
  
  filename_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:sapien.Renderer.server.proto.AddBodyMeshReq.filename)
}
inline void AddBodyMeshReq::set_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  filename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:sapien.Renderer.server.proto.AddBodyMeshReq.filename)
}
inline void AddBodyMeshReq::set_filename(const char* value,
    size_t size) {
  
  filename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:sapien.Renderer.server.proto.AddBodyMeshReq.filename)
}
inline std::string* AddBodyMeshReq::_internal_mutable_filename() {
  
  return filename_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* AddBodyMeshReq::release_filename() {
  // @@protoc_insertion_point(field_release:sapien.Renderer.server.proto.AddBodyMeshReq.filename)
  return filename_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AddBodyMeshReq::set_allocated_filename(std::string* filename) {
  if (filename != nullptr) {
    
  } else {
    
  }
  filename_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), filename,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:sapien.Renderer.server.proto.AddBodyMeshReq.filename)
}
inline std::string* AddBodyMeshReq::unsafe_arena_release_filename() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sapien.Renderer.server.proto.AddBodyMeshReq.filename)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return filename_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void AddBodyMeshReq::unsafe_arena_set_allocated_filename(
    std::string* filename) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (filename != nullptr) {
    
  } else {
    
  }
  filename_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      filename, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.Renderer.server.proto.AddBodyMeshReq.filename)
}

// .sapien.Renderer.server.proto.Vec3 scale = 3;
inline bool AddBodyMeshReq::_internal_has_scale() const {
  return this != internal_default_instance() && scale_ != nullptr;
}
inline bool AddBodyMeshReq::has_scale() const {
  return _internal_has_scale();
}
inline void AddBodyMeshReq::clear_scale() {
  if (GetArena() == nullptr && scale_ != nullptr) {
    delete scale_;
  }
  scale_ = nullptr;
}
inline const ::sapien::Renderer::server::proto::Vec3& AddBodyMeshReq::_internal_scale() const {
  const ::sapien::Renderer::server::proto::Vec3* p = scale_;
  return p != nullptr ? *p : *reinterpret_cast<const ::sapien::Renderer::server::proto::Vec3*>(
      &::sapien::Renderer::server::proto::_Vec3_default_instance_);
}
inline const ::sapien::Renderer::server::proto::Vec3& AddBodyMeshReq::scale() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddBodyMeshReq.scale)
  return _internal_scale();
}
inline void AddBodyMeshReq::unsafe_arena_set_allocated_scale(
    ::sapien::Renderer::server::proto::Vec3* scale) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(scale_);
  }
  scale_ = scale;
  if (scale) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.Renderer.server.proto.AddBodyMeshReq.scale)
}
inline ::sapien::Renderer::server::proto::Vec3* AddBodyMeshReq::release_scale() {
  auto temp = unsafe_arena_release_scale();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::sapien::Renderer::server::proto::Vec3* AddBodyMeshReq::unsafe_arena_release_scale() {
  // @@protoc_insertion_point(field_release:sapien.Renderer.server.proto.AddBodyMeshReq.scale)
  
  ::sapien::Renderer::server::proto::Vec3* temp = scale_;
  scale_ = nullptr;
  return temp;
}
inline ::sapien::Renderer::server::proto::Vec3* AddBodyMeshReq::_internal_mutable_scale() {
  
  if (scale_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::Renderer::server::proto::Vec3>(GetArena());
    scale_ = p;
  }
  return scale_;
}
inline ::sapien::Renderer::server::proto::Vec3* AddBodyMeshReq::mutable_scale() {
  // @@protoc_insertion_point(field_mutable:sapien.Renderer.server.proto.AddBodyMeshReq.scale)
  return _internal_mutable_scale();
}
inline void AddBodyMeshReq::set_allocated_scale(::sapien::Renderer::server::proto::Vec3* scale) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete scale_;
  }
  if (scale) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(scale);
    if (message_arena != submessage_arena) {
      scale = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, scale, submessage_arena);
    }
    
  } else {
    
  }
  scale_ = scale;
  // @@protoc_insertion_point(field_set_allocated:sapien.Renderer.server.proto.AddBodyMeshReq.scale)
}

// -------------------------------------------------------------------

// AddBodyPrimitiveReq

// uint64 scene_id = 1;
inline void AddBodyPrimitiveReq::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AddBodyPrimitiveReq::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AddBodyPrimitiveReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddBodyPrimitiveReq.scene_id)
  return _internal_scene_id();
}
inline void AddBodyPrimitiveReq::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void AddBodyPrimitiveReq::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddBodyPrimitiveReq.scene_id)
}

// .sapien.Renderer.server.proto.PrimitiveType type = 2;
inline void AddBodyPrimitiveReq::clear_type() {
  type_ = 0;
}
inline ::sapien::Renderer::server::proto::PrimitiveType AddBodyPrimitiveReq::_internal_type() const {
  return static_cast< ::sapien::Renderer::server::proto::PrimitiveType >(type_);
}
inline ::sapien::Renderer::server::proto::PrimitiveType AddBodyPrimitiveReq::type() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddBodyPrimitiveReq.type)
  return _internal_type();
}
inline void AddBodyPrimitiveReq::_internal_set_type(::sapien::Renderer::server::proto::PrimitiveType value) {
  
  type_ = value;
}
inline void AddBodyPrimitiveReq::set_type(::sapien::Renderer::server::proto::PrimitiveType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddBodyPrimitiveReq.type)
}

// .sapien.Renderer.server.proto.Vec3 scale = 3;
inline bool AddBodyPrimitiveReq::_internal_has_scale() const {
  return this != internal_default_instance() && scale_ != nullptr;
}
inline bool AddBodyPrimitiveReq::has_scale() const {
  return _internal_has_scale();
}
inline void AddBodyPrimitiveReq::clear_scale() {
  if (GetArena() == nullptr && scale_ != nullptr) {
    delete scale_;
  }
  scale_ = nullptr;
}
inline const ::sapien::Renderer::server::proto::Vec3& AddBodyPrimitiveReq::_internal_scale() const {
  const ::sapien::Renderer::server::proto::Vec3* p = scale_;
  return p != nullptr ? *p : *reinterpret_cast<const ::sapien::Renderer::server::proto::Vec3*>(
      &::sapien::Renderer::server::proto::_Vec3_default_instance_);
}
inline const ::sapien::Renderer::server::proto::Vec3& AddBodyPrimitiveReq::scale() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddBodyPrimitiveReq.scale)
  return _internal_scale();
}
inline void AddBodyPrimitiveReq::unsafe_arena_set_allocated_scale(
    ::sapien::Renderer::server::proto::Vec3* scale) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(scale_);
  }
  scale_ = scale;
  if (scale) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.Renderer.server.proto.AddBodyPrimitiveReq.scale)
}
inline ::sapien::Renderer::server::proto::Vec3* AddBodyPrimitiveReq::release_scale() {
  auto temp = unsafe_arena_release_scale();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::sapien::Renderer::server::proto::Vec3* AddBodyPrimitiveReq::unsafe_arena_release_scale() {
  // @@protoc_insertion_point(field_release:sapien.Renderer.server.proto.AddBodyPrimitiveReq.scale)
  
  ::sapien::Renderer::server::proto::Vec3* temp = scale_;
  scale_ = nullptr;
  return temp;
}
inline ::sapien::Renderer::server::proto::Vec3* AddBodyPrimitiveReq::_internal_mutable_scale() {
  
  if (scale_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::Renderer::server::proto::Vec3>(GetArena());
    scale_ = p;
  }
  return scale_;
}
inline ::sapien::Renderer::server::proto::Vec3* AddBodyPrimitiveReq::mutable_scale() {
  // @@protoc_insertion_point(field_mutable:sapien.Renderer.server.proto.AddBodyPrimitiveReq.scale)
  return _internal_mutable_scale();
}
inline void AddBodyPrimitiveReq::set_allocated_scale(::sapien::Renderer::server::proto::Vec3* scale) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete scale_;
  }
  if (scale) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(scale);
    if (message_arena != submessage_arena) {
      scale = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, scale, submessage_arena);
    }
    
  } else {
    
  }
  scale_ = scale;
  // @@protoc_insertion_point(field_set_allocated:sapien.Renderer.server.proto.AddBodyPrimitiveReq.scale)
}

// uint64 material = 4;
inline void AddBodyPrimitiveReq::clear_material() {
  material_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AddBodyPrimitiveReq::_internal_material() const {
  return material_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AddBodyPrimitiveReq::material() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddBodyPrimitiveReq.material)
  return _internal_material();
}
inline void AddBodyPrimitiveReq::_internal_set_material(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  material_ = value;
}
inline void AddBodyPrimitiveReq::set_material(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_material(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddBodyPrimitiveReq.material)
}

// -------------------------------------------------------------------

// RemoveBodyReq

// uint64 scene_id = 1;
inline void RemoveBodyReq::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RemoveBodyReq::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RemoveBodyReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.RemoveBodyReq.scene_id)
  return _internal_scene_id();
}
inline void RemoveBodyReq::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void RemoveBodyReq::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.RemoveBodyReq.scene_id)
}

// uint64 body_id = 2;
inline void RemoveBodyReq::clear_body_id() {
  body_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RemoveBodyReq::_internal_body_id() const {
  return body_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RemoveBodyReq::body_id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.RemoveBodyReq.body_id)
  return _internal_body_id();
}
inline void RemoveBodyReq::_internal_set_body_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  body_id_ = value;
}
inline void RemoveBodyReq::set_body_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_body_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.RemoveBodyReq.body_id)
}

// -------------------------------------------------------------------

// AddCameraReq

// uint64 scene_id = 1;
inline void AddCameraReq::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AddCameraReq::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AddCameraReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddCameraReq.scene_id)
  return _internal_scene_id();
}
inline void AddCameraReq::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void AddCameraReq::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddCameraReq.scene_id)
}

// uint32 width = 2;
inline void AddCameraReq::clear_width() {
  width_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AddCameraReq::_internal_width() const {
  return width_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AddCameraReq::width() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddCameraReq.width)
  return _internal_width();
}
inline void AddCameraReq::_internal_set_width(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  width_ = value;
}
inline void AddCameraReq::set_width(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddCameraReq.width)
}

// uint32 height = 3;
inline void AddCameraReq::clear_height() {
  height_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AddCameraReq::_internal_height() const {
  return height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AddCameraReq::height() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddCameraReq.height)
  return _internal_height();
}
inline void AddCameraReq::_internal_set_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  height_ = value;
}
inline void AddCameraReq::set_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddCameraReq.height)
}

// float fovy = 4;
inline void AddCameraReq::clear_fovy() {
  fovy_ = 0;
}
inline float AddCameraReq::_internal_fovy() const {
  return fovy_;
}
inline float AddCameraReq::fovy() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddCameraReq.fovy)
  return _internal_fovy();
}
inline void AddCameraReq::_internal_set_fovy(float value) {
  
  fovy_ = value;
}
inline void AddCameraReq::set_fovy(float value) {
  _internal_set_fovy(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddCameraReq.fovy)
}

// float near = 5;
inline void AddCameraReq::clear_near() {
  near_ = 0;
}
inline float AddCameraReq::_internal_near() const {
  return near_;
}
inline float AddCameraReq::near() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddCameraReq.near)
  return _internal_near();
}
inline void AddCameraReq::_internal_set_near(float value) {
  
  near_ = value;
}
inline void AddCameraReq::set_near(float value) {
  _internal_set_near(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddCameraReq.near)
}

// float far = 6;
inline void AddCameraReq::clear_far() {
  far_ = 0;
}
inline float AddCameraReq::_internal_far() const {
  return far_;
}
inline float AddCameraReq::far() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddCameraReq.far)
  return _internal_far();
}
inline void AddCameraReq::_internal_set_far(float value) {
  
  far_ = value;
}
inline void AddCameraReq::set_far(float value) {
  _internal_set_far(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddCameraReq.far)
}

// string shader = 7;
inline void AddCameraReq::clear_shader() {
  shader_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& AddCameraReq::shader() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddCameraReq.shader)
  return _internal_shader();
}
inline void AddCameraReq::set_shader(const std::string& value) {
  _internal_set_shader(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddCameraReq.shader)
}
inline std::string* AddCameraReq::mutable_shader() {
  // @@protoc_insertion_point(field_mutable:sapien.Renderer.server.proto.AddCameraReq.shader)
  return _internal_mutable_shader();
}
inline const std::string& AddCameraReq::_internal_shader() const {
  return shader_.Get();
}
inline void AddCameraReq::_internal_set_shader(const std::string& value) {
  
  shader_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void AddCameraReq::set_shader(std::string&& value) {
  
  shader_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:sapien.Renderer.server.proto.AddCameraReq.shader)
}
inline void AddCameraReq::set_shader(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  shader_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:sapien.Renderer.server.proto.AddCameraReq.shader)
}
inline void AddCameraReq::set_shader(const char* value,
    size_t size) {
  
  shader_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:sapien.Renderer.server.proto.AddCameraReq.shader)
}
inline std::string* AddCameraReq::_internal_mutable_shader() {
  
  return shader_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* AddCameraReq::release_shader() {
  // @@protoc_insertion_point(field_release:sapien.Renderer.server.proto.AddCameraReq.shader)
  return shader_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AddCameraReq::set_allocated_shader(std::string* shader) {
  if (shader != nullptr) {
    
  } else {
    
  }
  shader_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), shader,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:sapien.Renderer.server.proto.AddCameraReq.shader)
}
inline std::string* AddCameraReq::unsafe_arena_release_shader() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sapien.Renderer.server.proto.AddCameraReq.shader)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return shader_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void AddCameraReq::unsafe_arena_set_allocated_shader(
    std::string* shader) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (shader != nullptr) {
    
  } else {
    
  }
  shader_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      shader, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.Renderer.server.proto.AddCameraReq.shader)
}

// -------------------------------------------------------------------

// RemoveCameraReq

// uint64 scene_id = 1;
inline void RemoveCameraReq::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RemoveCameraReq::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RemoveCameraReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.RemoveCameraReq.scene_id)
  return _internal_scene_id();
}
inline void RemoveCameraReq::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void RemoveCameraReq::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.RemoveCameraReq.scene_id)
}

// uint64 camera_id = 2;
inline void RemoveCameraReq::clear_camera_id() {
  camera_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RemoveCameraReq::_internal_camera_id() const {
  return camera_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RemoveCameraReq::camera_id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.RemoveCameraReq.camera_id)
  return _internal_camera_id();
}
inline void RemoveCameraReq::_internal_set_camera_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  camera_id_ = value;
}
inline void RemoveCameraReq::set_camera_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_camera_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.RemoveCameraReq.camera_id)
}

// -------------------------------------------------------------------

// AddPointLightReq

// uint64 scene_id = 1;
inline void AddPointLightReq::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AddPointLightReq::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AddPointLightReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddPointLightReq.scene_id)
  return _internal_scene_id();
}
inline void AddPointLightReq::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void AddPointLightReq::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddPointLightReq.scene_id)
}

// .sapien.Renderer.server.proto.Vec3 position = 2;
inline bool AddPointLightReq::_internal_has_position() const {
  return this != internal_default_instance() && position_ != nullptr;
}
inline bool AddPointLightReq::has_position() const {
  return _internal_has_position();
}
inline void AddPointLightReq::clear_position() {
  if (GetArena() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
inline const ::sapien::Renderer::server::proto::Vec3& AddPointLightReq::_internal_position() const {
  const ::sapien::Renderer::server::proto::Vec3* p = position_;
  return p != nullptr ? *p : *reinterpret_cast<const ::sapien::Renderer::server::proto::Vec3*>(
      &::sapien::Renderer::server::proto::_Vec3_default_instance_);
}
inline const ::sapien::Renderer::server::proto::Vec3& AddPointLightReq::position() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddPointLightReq.position)
  return _internal_position();
}
inline void AddPointLightReq::unsafe_arena_set_allocated_position(
    ::sapien::Renderer::server::proto::Vec3* position) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_);
  }
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.Renderer.server.proto.AddPointLightReq.position)
}
inline ::sapien::Renderer::server::proto::Vec3* AddPointLightReq::release_position() {
  auto temp = unsafe_arena_release_position();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::sapien::Renderer::server::proto::Vec3* AddPointLightReq::unsafe_arena_release_position() {
  // @@protoc_insertion_point(field_release:sapien.Renderer.server.proto.AddPointLightReq.position)
  
  ::sapien::Renderer::server::proto::Vec3* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::sapien::Renderer::server::proto::Vec3* AddPointLightReq::_internal_mutable_position() {
  
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::Renderer::server::proto::Vec3>(GetArena());
    position_ = p;
  }
  return position_;
}
inline ::sapien::Renderer::server::proto::Vec3* AddPointLightReq::mutable_position() {
  // @@protoc_insertion_point(field_mutable:sapien.Renderer.server.proto.AddPointLightReq.position)
  return _internal_mutable_position();
}
inline void AddPointLightReq::set_allocated_position(::sapien::Renderer::server::proto::Vec3* position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete position_;
  }
  if (position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(position);
    if (message_arena != submessage_arena) {
      position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:sapien.Renderer.server.proto.AddPointLightReq.position)
}

// .sapien.Renderer.server.proto.Vec3 color = 3;
inline bool AddPointLightReq::_internal_has_color() const {
  return this != internal_default_instance() && color_ != nullptr;
}
inline bool AddPointLightReq::has_color() const {
  return _internal_has_color();
}
inline void AddPointLightReq::clear_color() {
  if (GetArena() == nullptr && color_ != nullptr) {
    delete color_;
  }
  color_ = nullptr;
}
inline const ::sapien::Renderer::server::proto::Vec3& AddPointLightReq::_internal_color() const {
  const ::sapien::Renderer::server::proto::Vec3* p = color_;
  return p != nullptr ? *p : *reinterpret_cast<const ::sapien::Renderer::server::proto::Vec3*>(
      &::sapien::Renderer::server::proto::_Vec3_default_instance_);
}
inline const ::sapien::Renderer::server::proto::Vec3& AddPointLightReq::color() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddPointLightReq.color)
  return _internal_color();
}
inline void AddPointLightReq::unsafe_arena_set_allocated_color(
    ::sapien::Renderer::server::proto::Vec3* color) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(color_);
  }
  color_ = color;
  if (color) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.Renderer.server.proto.AddPointLightReq.color)
}
inline ::sapien::Renderer::server::proto::Vec3* AddPointLightReq::release_color() {
  auto temp = unsafe_arena_release_color();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::sapien::Renderer::server::proto::Vec3* AddPointLightReq::unsafe_arena_release_color() {
  // @@protoc_insertion_point(field_release:sapien.Renderer.server.proto.AddPointLightReq.color)
  
  ::sapien::Renderer::server::proto::Vec3* temp = color_;
  color_ = nullptr;
  return temp;
}
inline ::sapien::Renderer::server::proto::Vec3* AddPointLightReq::_internal_mutable_color() {
  
  if (color_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::Renderer::server::proto::Vec3>(GetArena());
    color_ = p;
  }
  return color_;
}
inline ::sapien::Renderer::server::proto::Vec3* AddPointLightReq::mutable_color() {
  // @@protoc_insertion_point(field_mutable:sapien.Renderer.server.proto.AddPointLightReq.color)
  return _internal_mutable_color();
}
inline void AddPointLightReq::set_allocated_color(::sapien::Renderer::server::proto::Vec3* color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete color_;
  }
  if (color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(color);
    if (message_arena != submessage_arena) {
      color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, color, submessage_arena);
    }
    
  } else {
    
  }
  color_ = color;
  // @@protoc_insertion_point(field_set_allocated:sapien.Renderer.server.proto.AddPointLightReq.color)
}

// bool shadow = 4;
inline void AddPointLightReq::clear_shadow() {
  shadow_ = false;
}
inline bool AddPointLightReq::_internal_shadow() const {
  return shadow_;
}
inline bool AddPointLightReq::shadow() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddPointLightReq.shadow)
  return _internal_shadow();
}
inline void AddPointLightReq::_internal_set_shadow(bool value) {
  
  shadow_ = value;
}
inline void AddPointLightReq::set_shadow(bool value) {
  _internal_set_shadow(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddPointLightReq.shadow)
}

// float shadow_near = 5;
inline void AddPointLightReq::clear_shadow_near() {
  shadow_near_ = 0;
}
inline float AddPointLightReq::_internal_shadow_near() const {
  return shadow_near_;
}
inline float AddPointLightReq::shadow_near() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddPointLightReq.shadow_near)
  return _internal_shadow_near();
}
inline void AddPointLightReq::_internal_set_shadow_near(float value) {
  
  shadow_near_ = value;
}
inline void AddPointLightReq::set_shadow_near(float value) {
  _internal_set_shadow_near(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddPointLightReq.shadow_near)
}

// float shadow_far = 6;
inline void AddPointLightReq::clear_shadow_far() {
  shadow_far_ = 0;
}
inline float AddPointLightReq::_internal_shadow_far() const {
  return shadow_far_;
}
inline float AddPointLightReq::shadow_far() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddPointLightReq.shadow_far)
  return _internal_shadow_far();
}
inline void AddPointLightReq::_internal_set_shadow_far(float value) {
  
  shadow_far_ = value;
}
inline void AddPointLightReq::set_shadow_far(float value) {
  _internal_set_shadow_far(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddPointLightReq.shadow_far)
}

// int32 shadow_map_size = 7;
inline void AddPointLightReq::clear_shadow_map_size() {
  shadow_map_size_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AddPointLightReq::_internal_shadow_map_size() const {
  return shadow_map_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AddPointLightReq::shadow_map_size() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddPointLightReq.shadow_map_size)
  return _internal_shadow_map_size();
}
inline void AddPointLightReq::_internal_set_shadow_map_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  shadow_map_size_ = value;
}
inline void AddPointLightReq::set_shadow_map_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_shadow_map_size(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddPointLightReq.shadow_map_size)
}

// -------------------------------------------------------------------

// AddDirectionalLightReq

// uint64 scene_id = 1;
inline void AddDirectionalLightReq::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AddDirectionalLightReq::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AddDirectionalLightReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddDirectionalLightReq.scene_id)
  return _internal_scene_id();
}
inline void AddDirectionalLightReq::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void AddDirectionalLightReq::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddDirectionalLightReq.scene_id)
}

// .sapien.Renderer.server.proto.Vec3 direction = 2;
inline bool AddDirectionalLightReq::_internal_has_direction() const {
  return this != internal_default_instance() && direction_ != nullptr;
}
inline bool AddDirectionalLightReq::has_direction() const {
  return _internal_has_direction();
}
inline void AddDirectionalLightReq::clear_direction() {
  if (GetArena() == nullptr && direction_ != nullptr) {
    delete direction_;
  }
  direction_ = nullptr;
}
inline const ::sapien::Renderer::server::proto::Vec3& AddDirectionalLightReq::_internal_direction() const {
  const ::sapien::Renderer::server::proto::Vec3* p = direction_;
  return p != nullptr ? *p : *reinterpret_cast<const ::sapien::Renderer::server::proto::Vec3*>(
      &::sapien::Renderer::server::proto::_Vec3_default_instance_);
}
inline const ::sapien::Renderer::server::proto::Vec3& AddDirectionalLightReq::direction() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddDirectionalLightReq.direction)
  return _internal_direction();
}
inline void AddDirectionalLightReq::unsafe_arena_set_allocated_direction(
    ::sapien::Renderer::server::proto::Vec3* direction) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(direction_);
  }
  direction_ = direction;
  if (direction) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.Renderer.server.proto.AddDirectionalLightReq.direction)
}
inline ::sapien::Renderer::server::proto::Vec3* AddDirectionalLightReq::release_direction() {
  auto temp = unsafe_arena_release_direction();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::sapien::Renderer::server::proto::Vec3* AddDirectionalLightReq::unsafe_arena_release_direction() {
  // @@protoc_insertion_point(field_release:sapien.Renderer.server.proto.AddDirectionalLightReq.direction)
  
  ::sapien::Renderer::server::proto::Vec3* temp = direction_;
  direction_ = nullptr;
  return temp;
}
inline ::sapien::Renderer::server::proto::Vec3* AddDirectionalLightReq::_internal_mutable_direction() {
  
  if (direction_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::Renderer::server::proto::Vec3>(GetArena());
    direction_ = p;
  }
  return direction_;
}
inline ::sapien::Renderer::server::proto::Vec3* AddDirectionalLightReq::mutable_direction() {
  // @@protoc_insertion_point(field_mutable:sapien.Renderer.server.proto.AddDirectionalLightReq.direction)
  return _internal_mutable_direction();
}
inline void AddDirectionalLightReq::set_allocated_direction(::sapien::Renderer::server::proto::Vec3* direction) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete direction_;
  }
  if (direction) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(direction);
    if (message_arena != submessage_arena) {
      direction = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, direction, submessage_arena);
    }
    
  } else {
    
  }
  direction_ = direction;
  // @@protoc_insertion_point(field_set_allocated:sapien.Renderer.server.proto.AddDirectionalLightReq.direction)
}

// .sapien.Renderer.server.proto.Vec3 color = 3;
inline bool AddDirectionalLightReq::_internal_has_color() const {
  return this != internal_default_instance() && color_ != nullptr;
}
inline bool AddDirectionalLightReq::has_color() const {
  return _internal_has_color();
}
inline void AddDirectionalLightReq::clear_color() {
  if (GetArena() == nullptr && color_ != nullptr) {
    delete color_;
  }
  color_ = nullptr;
}
inline const ::sapien::Renderer::server::proto::Vec3& AddDirectionalLightReq::_internal_color() const {
  const ::sapien::Renderer::server::proto::Vec3* p = color_;
  return p != nullptr ? *p : *reinterpret_cast<const ::sapien::Renderer::server::proto::Vec3*>(
      &::sapien::Renderer::server::proto::_Vec3_default_instance_);
}
inline const ::sapien::Renderer::server::proto::Vec3& AddDirectionalLightReq::color() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddDirectionalLightReq.color)
  return _internal_color();
}
inline void AddDirectionalLightReq::unsafe_arena_set_allocated_color(
    ::sapien::Renderer::server::proto::Vec3* color) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(color_);
  }
  color_ = color;
  if (color) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.Renderer.server.proto.AddDirectionalLightReq.color)
}
inline ::sapien::Renderer::server::proto::Vec3* AddDirectionalLightReq::release_color() {
  auto temp = unsafe_arena_release_color();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::sapien::Renderer::server::proto::Vec3* AddDirectionalLightReq::unsafe_arena_release_color() {
  // @@protoc_insertion_point(field_release:sapien.Renderer.server.proto.AddDirectionalLightReq.color)
  
  ::sapien::Renderer::server::proto::Vec3* temp = color_;
  color_ = nullptr;
  return temp;
}
inline ::sapien::Renderer::server::proto::Vec3* AddDirectionalLightReq::_internal_mutable_color() {
  
  if (color_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::Renderer::server::proto::Vec3>(GetArena());
    color_ = p;
  }
  return color_;
}
inline ::sapien::Renderer::server::proto::Vec3* AddDirectionalLightReq::mutable_color() {
  // @@protoc_insertion_point(field_mutable:sapien.Renderer.server.proto.AddDirectionalLightReq.color)
  return _internal_mutable_color();
}
inline void AddDirectionalLightReq::set_allocated_color(::sapien::Renderer::server::proto::Vec3* color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete color_;
  }
  if (color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(color);
    if (message_arena != submessage_arena) {
      color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, color, submessage_arena);
    }
    
  } else {
    
  }
  color_ = color;
  // @@protoc_insertion_point(field_set_allocated:sapien.Renderer.server.proto.AddDirectionalLightReq.color)
}

// bool shadow = 4;
inline void AddDirectionalLightReq::clear_shadow() {
  shadow_ = false;
}
inline bool AddDirectionalLightReq::_internal_shadow() const {
  return shadow_;
}
inline bool AddDirectionalLightReq::shadow() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddDirectionalLightReq.shadow)
  return _internal_shadow();
}
inline void AddDirectionalLightReq::_internal_set_shadow(bool value) {
  
  shadow_ = value;
}
inline void AddDirectionalLightReq::set_shadow(bool value) {
  _internal_set_shadow(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddDirectionalLightReq.shadow)
}

// .sapien.Renderer.server.proto.Vec3 position = 5;
inline bool AddDirectionalLightReq::_internal_has_position() const {
  return this != internal_default_instance() && position_ != nullptr;
}
inline bool AddDirectionalLightReq::has_position() const {
  return _internal_has_position();
}
inline void AddDirectionalLightReq::clear_position() {
  if (GetArena() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
inline const ::sapien::Renderer::server::proto::Vec3& AddDirectionalLightReq::_internal_position() const {
  const ::sapien::Renderer::server::proto::Vec3* p = position_;
  return p != nullptr ? *p : *reinterpret_cast<const ::sapien::Renderer::server::proto::Vec3*>(
      &::sapien::Renderer::server::proto::_Vec3_default_instance_);
}
inline const ::sapien::Renderer::server::proto::Vec3& AddDirectionalLightReq::position() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddDirectionalLightReq.position)
  return _internal_position();
}
inline void AddDirectionalLightReq::unsafe_arena_set_allocated_position(
    ::sapien::Renderer::server::proto::Vec3* position) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_);
  }
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sapien.Renderer.server.proto.AddDirectionalLightReq.position)
}
inline ::sapien::Renderer::server::proto::Vec3* AddDirectionalLightReq::release_position() {
  auto temp = unsafe_arena_release_position();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::sapien::Renderer::server::proto::Vec3* AddDirectionalLightReq::unsafe_arena_release_position() {
  // @@protoc_insertion_point(field_release:sapien.Renderer.server.proto.AddDirectionalLightReq.position)
  
  ::sapien::Renderer::server::proto::Vec3* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::sapien::Renderer::server::proto::Vec3* AddDirectionalLightReq::_internal_mutable_position() {
  
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::sapien::Renderer::server::proto::Vec3>(GetArena());
    position_ = p;
  }
  return position_;
}
inline ::sapien::Renderer::server::proto::Vec3* AddDirectionalLightReq::mutable_position() {
  // @@protoc_insertion_point(field_mutable:sapien.Renderer.server.proto.AddDirectionalLightReq.position)
  return _internal_mutable_position();
}
inline void AddDirectionalLightReq::set_allocated_position(::sapien::Renderer::server::proto::Vec3* position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete position_;
  }
  if (position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(position);
    if (message_arena != submessage_arena) {
      position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:sapien.Renderer.server.proto.AddDirectionalLightReq.position)
}

// float shadow_scale = 6;
inline void AddDirectionalLightReq::clear_shadow_scale() {
  shadow_scale_ = 0;
}
inline float AddDirectionalLightReq::_internal_shadow_scale() const {
  return shadow_scale_;
}
inline float AddDirectionalLightReq::shadow_scale() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddDirectionalLightReq.shadow_scale)
  return _internal_shadow_scale();
}
inline void AddDirectionalLightReq::_internal_set_shadow_scale(float value) {
  
  shadow_scale_ = value;
}
inline void AddDirectionalLightReq::set_shadow_scale(float value) {
  _internal_set_shadow_scale(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddDirectionalLightReq.shadow_scale)
}

// float shadow_near = 7;
inline void AddDirectionalLightReq::clear_shadow_near() {
  shadow_near_ = 0;
}
inline float AddDirectionalLightReq::_internal_shadow_near() const {
  return shadow_near_;
}
inline float AddDirectionalLightReq::shadow_near() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddDirectionalLightReq.shadow_near)
  return _internal_shadow_near();
}
inline void AddDirectionalLightReq::_internal_set_shadow_near(float value) {
  
  shadow_near_ = value;
}
inline void AddDirectionalLightReq::set_shadow_near(float value) {
  _internal_set_shadow_near(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddDirectionalLightReq.shadow_near)
}

// float shadow_far = 8;
inline void AddDirectionalLightReq::clear_shadow_far() {
  shadow_far_ = 0;
}
inline float AddDirectionalLightReq::_internal_shadow_far() const {
  return shadow_far_;
}
inline float AddDirectionalLightReq::shadow_far() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddDirectionalLightReq.shadow_far)
  return _internal_shadow_far();
}
inline void AddDirectionalLightReq::_internal_set_shadow_far(float value) {
  
  shadow_far_ = value;
}
inline void AddDirectionalLightReq::set_shadow_far(float value) {
  _internal_set_shadow_far(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddDirectionalLightReq.shadow_far)
}

// int32 shadow_map_size = 9;
inline void AddDirectionalLightReq::clear_shadow_map_size() {
  shadow_map_size_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AddDirectionalLightReq::_internal_shadow_map_size() const {
  return shadow_map_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AddDirectionalLightReq::shadow_map_size() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.AddDirectionalLightReq.shadow_map_size)
  return _internal_shadow_map_size();
}
inline void AddDirectionalLightReq::_internal_set_shadow_map_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  shadow_map_size_ = value;
}
inline void AddDirectionalLightReq::set_shadow_map_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_shadow_map_size(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.AddDirectionalLightReq.shadow_map_size)
}

// -------------------------------------------------------------------

// RemoveLightReq

// uint64 scene_id = 1;
inline void RemoveLightReq::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RemoveLightReq::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RemoveLightReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.RemoveLightReq.scene_id)
  return _internal_scene_id();
}
inline void RemoveLightReq::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void RemoveLightReq::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.RemoveLightReq.scene_id)
}

// uint64 light_id = 2;
inline void RemoveLightReq::clear_light_id() {
  light_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RemoveLightReq::_internal_light_id() const {
  return light_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RemoveLightReq::light_id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.RemoveLightReq.light_id)
  return _internal_light_id();
}
inline void RemoveLightReq::_internal_set_light_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  light_id_ = value;
}
inline void RemoveLightReq::set_light_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_light_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.RemoveLightReq.light_id)
}

// -------------------------------------------------------------------

// EntityOrderReq

// uint64 scene_id = 1;
inline void EntityOrderReq::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 EntityOrderReq::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 EntityOrderReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.EntityOrderReq.scene_id)
  return _internal_scene_id();
}
inline void EntityOrderReq::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void EntityOrderReq::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.EntityOrderReq.scene_id)
}

// repeated uint64 body_ids = 2 [packed = true];
inline int EntityOrderReq::_internal_body_ids_size() const {
  return body_ids_.size();
}
inline int EntityOrderReq::body_ids_size() const {
  return _internal_body_ids_size();
}
inline void EntityOrderReq::clear_body_ids() {
  body_ids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 EntityOrderReq::_internal_body_ids(int index) const {
  return body_ids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 EntityOrderReq::body_ids(int index) const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.EntityOrderReq.body_ids)
  return _internal_body_ids(index);
}
inline void EntityOrderReq::set_body_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  body_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.EntityOrderReq.body_ids)
}
inline void EntityOrderReq::_internal_add_body_ids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  body_ids_.Add(value);
}
inline void EntityOrderReq::add_body_ids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_body_ids(value);
  // @@protoc_insertion_point(field_add:sapien.Renderer.server.proto.EntityOrderReq.body_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
EntityOrderReq::_internal_body_ids() const {
  return body_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
EntityOrderReq::body_ids() const {
  // @@protoc_insertion_point(field_list:sapien.Renderer.server.proto.EntityOrderReq.body_ids)
  return _internal_body_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
EntityOrderReq::_internal_mutable_body_ids() {
  return &body_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
EntityOrderReq::mutable_body_ids() {
  // @@protoc_insertion_point(field_mutable_list:sapien.Renderer.server.proto.EntityOrderReq.body_ids)
  return _internal_mutable_body_ids();
}

// repeated uint64 camera_ids = 3 [packed = true];
inline int EntityOrderReq::_internal_camera_ids_size() const {
  return camera_ids_.size();
}
inline int EntityOrderReq::camera_ids_size() const {
  return _internal_camera_ids_size();
}
inline void EntityOrderReq::clear_camera_ids() {
  camera_ids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 EntityOrderReq::_internal_camera_ids(int index) const {
  return camera_ids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 EntityOrderReq::camera_ids(int index) const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.EntityOrderReq.camera_ids)
  return _internal_camera_ids(index);
}
inline void EntityOrderReq::set_camera_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  camera_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.EntityOrderReq.camera_ids)
}
inline void EntityOrderReq::_internal_add_camera_ids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  camera_ids_.Add(value);
}
inline void EntityOrderReq::add_camera_ids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_camera_ids(value);
  // @@protoc_insertion_point(field_add:sapien.Renderer.server.proto.EntityOrderReq.camera_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
EntityOrderReq::_internal_camera_ids() const {
  return camera_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
EntityOrderReq::camera_ids() const {
  // @@protoc_insertion_point(field_list:sapien.Renderer.server.proto.EntityOrderReq.camera_ids)
  return _internal_camera_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
EntityOrderReq::_internal_mutable_camera_ids() {
  return &camera_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
EntityOrderReq::mutable_camera_ids() {
  // @@protoc_insertion_point(field_mutable_list:sapien.Renderer.server.proto.EntityOrderReq.camera_ids)
  return _internal_mutable_camera_ids();
}

// -------------------------------------------------------------------

// UpdateRenderReq

// uint64 scene_id = 1;
inline void UpdateRenderReq::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UpdateRenderReq::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UpdateRenderReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.UpdateRenderReq.scene_id)
  return _internal_scene_id();
}
inline void UpdateRenderReq::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void UpdateRenderReq::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.UpdateRenderReq.scene_id)
}

// repeated .sapien.Renderer.server.proto.Pose body_poses = 2;
inline int UpdateRenderReq::_internal_body_poses_size() const {
  return body_poses_.size();
}
inline int UpdateRenderReq::body_poses_size() const {
  return _internal_body_poses_size();
}
inline void UpdateRenderReq::clear_body_poses() {
  body_poses_.Clear();
}
inline ::sapien::Renderer::server::proto::Pose* UpdateRenderReq::mutable_body_poses(int index) {
  // @@protoc_insertion_point(field_mutable:sapien.Renderer.server.proto.UpdateRenderReq.body_poses)
  return body_poses_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::Renderer::server::proto::Pose >*
UpdateRenderReq::mutable_body_poses() {
  // @@protoc_insertion_point(field_mutable_list:sapien.Renderer.server.proto.UpdateRenderReq.body_poses)
  return &body_poses_;
}
inline const ::sapien::Renderer::server::proto::Pose& UpdateRenderReq::_internal_body_poses(int index) const {
  return body_poses_.Get(index);
}
inline const ::sapien::Renderer::server::proto::Pose& UpdateRenderReq::body_poses(int index) const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.UpdateRenderReq.body_poses)
  return _internal_body_poses(index);
}
inline ::sapien::Renderer::server::proto::Pose* UpdateRenderReq::_internal_add_body_poses() {
  return body_poses_.Add();
}
inline ::sapien::Renderer::server::proto::Pose* UpdateRenderReq::add_body_poses() {
  // @@protoc_insertion_point(field_add:sapien.Renderer.server.proto.UpdateRenderReq.body_poses)
  return _internal_add_body_poses();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::Renderer::server::proto::Pose >&
UpdateRenderReq::body_poses() const {
  // @@protoc_insertion_point(field_list:sapien.Renderer.server.proto.UpdateRenderReq.body_poses)
  return body_poses_;
}

// repeated .sapien.Renderer.server.proto.Pose camera_poses = 3;
inline int UpdateRenderReq::_internal_camera_poses_size() const {
  return camera_poses_.size();
}
inline int UpdateRenderReq::camera_poses_size() const {
  return _internal_camera_poses_size();
}
inline void UpdateRenderReq::clear_camera_poses() {
  camera_poses_.Clear();
}
inline ::sapien::Renderer::server::proto::Pose* UpdateRenderReq::mutable_camera_poses(int index) {
  // @@protoc_insertion_point(field_mutable:sapien.Renderer.server.proto.UpdateRenderReq.camera_poses)
  return camera_poses_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::Renderer::server::proto::Pose >*
UpdateRenderReq::mutable_camera_poses() {
  // @@protoc_insertion_point(field_mutable_list:sapien.Renderer.server.proto.UpdateRenderReq.camera_poses)
  return &camera_poses_;
}
inline const ::sapien::Renderer::server::proto::Pose& UpdateRenderReq::_internal_camera_poses(int index) const {
  return camera_poses_.Get(index);
}
inline const ::sapien::Renderer::server::proto::Pose& UpdateRenderReq::camera_poses(int index) const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.UpdateRenderReq.camera_poses)
  return _internal_camera_poses(index);
}
inline ::sapien::Renderer::server::proto::Pose* UpdateRenderReq::_internal_add_camera_poses() {
  return camera_poses_.Add();
}
inline ::sapien::Renderer::server::proto::Pose* UpdateRenderReq::add_camera_poses() {
  // @@protoc_insertion_point(field_add:sapien.Renderer.server.proto.UpdateRenderReq.camera_poses)
  return _internal_add_camera_poses();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::Renderer::server::proto::Pose >&
UpdateRenderReq::camera_poses() const {
  // @@protoc_insertion_point(field_list:sapien.Renderer.server.proto.UpdateRenderReq.camera_poses)
  return camera_poses_;
}

// -------------------------------------------------------------------

// BodyIdReq

// uint64 scene_id = 1;
inline void BodyIdReq::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BodyIdReq::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BodyIdReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.BodyIdReq.scene_id)
  return _internal_scene_id();
}
inline void BodyIdReq::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void BodyIdReq::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.BodyIdReq.scene_id)
}

// uint64 body_id = 2;
inline void BodyIdReq::clear_body_id() {
  body_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BodyIdReq::_internal_body_id() const {
  return body_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BodyIdReq::body_id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.BodyIdReq.body_id)
  return _internal_body_id();
}
inline void BodyIdReq::_internal_set_body_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  body_id_ = value;
}
inline void BodyIdReq::set_body_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_body_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.BodyIdReq.body_id)
}

// uint32 id = 3;
inline void BodyIdReq::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BodyIdReq::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BodyIdReq::id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.BodyIdReq.id)
  return _internal_id();
}
inline void BodyIdReq::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void BodyIdReq::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.BodyIdReq.id)
}

// -------------------------------------------------------------------

// TakePictureReq

// uint64 scene_id = 1;
inline void TakePictureReq::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TakePictureReq::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TakePictureReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.TakePictureReq.scene_id)
  return _internal_scene_id();
}
inline void TakePictureReq::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void TakePictureReq::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.TakePictureReq.scene_id)
}

// uint64 camera_id = 2;
inline void TakePictureReq::clear_camera_id() {
  camera_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TakePictureReq::_internal_camera_id() const {
  return camera_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TakePictureReq::camera_id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.TakePictureReq.camera_id)
  return _internal_camera_id();
}
inline void TakePictureReq::_internal_set_camera_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  camera_id_ = value;
}
inline void TakePictureReq::set_camera_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_camera_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.TakePictureReq.camera_id)
}

// -------------------------------------------------------------------

// UpdateRenderAndTakePicturesReq

// uint64 scene_id = 1;
inline void UpdateRenderAndTakePicturesReq::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UpdateRenderAndTakePicturesReq::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UpdateRenderAndTakePicturesReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.UpdateRenderAndTakePicturesReq.scene_id)
  return _internal_scene_id();
}
inline void UpdateRenderAndTakePicturesReq::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void UpdateRenderAndTakePicturesReq::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.UpdateRenderAndTakePicturesReq.scene_id)
}

// repeated .sapien.Renderer.server.proto.Pose body_poses = 2;
inline int UpdateRenderAndTakePicturesReq::_internal_body_poses_size() const {
  return body_poses_.size();
}
inline int UpdateRenderAndTakePicturesReq::body_poses_size() const {
  return _internal_body_poses_size();
}
inline void UpdateRenderAndTakePicturesReq::clear_body_poses() {
  body_poses_.Clear();
}
inline ::sapien::Renderer::server::proto::Pose* UpdateRenderAndTakePicturesReq::mutable_body_poses(int index) {
  // @@protoc_insertion_point(field_mutable:sapien.Renderer.server.proto.UpdateRenderAndTakePicturesReq.body_poses)
  return body_poses_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::Renderer::server::proto::Pose >*
UpdateRenderAndTakePicturesReq::mutable_body_poses() {
  // @@protoc_insertion_point(field_mutable_list:sapien.Renderer.server.proto.UpdateRenderAndTakePicturesReq.body_poses)
  return &body_poses_;
}
inline const ::sapien::Renderer::server::proto::Pose& UpdateRenderAndTakePicturesReq::_internal_body_poses(int index) const {
  return body_poses_.Get(index);
}
inline const ::sapien::Renderer::server::proto::Pose& UpdateRenderAndTakePicturesReq::body_poses(int index) const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.UpdateRenderAndTakePicturesReq.body_poses)
  return _internal_body_poses(index);
}
inline ::sapien::Renderer::server::proto::Pose* UpdateRenderAndTakePicturesReq::_internal_add_body_poses() {
  return body_poses_.Add();
}
inline ::sapien::Renderer::server::proto::Pose* UpdateRenderAndTakePicturesReq::add_body_poses() {
  // @@protoc_insertion_point(field_add:sapien.Renderer.server.proto.UpdateRenderAndTakePicturesReq.body_poses)
  return _internal_add_body_poses();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::Renderer::server::proto::Pose >&
UpdateRenderAndTakePicturesReq::body_poses() const {
  // @@protoc_insertion_point(field_list:sapien.Renderer.server.proto.UpdateRenderAndTakePicturesReq.body_poses)
  return body_poses_;
}

// repeated .sapien.Renderer.server.proto.Pose camera_poses = 3;
inline int UpdateRenderAndTakePicturesReq::_internal_camera_poses_size() const {
  return camera_poses_.size();
}
inline int UpdateRenderAndTakePicturesReq::camera_poses_size() const {
  return _internal_camera_poses_size();
}
inline void UpdateRenderAndTakePicturesReq::clear_camera_poses() {
  camera_poses_.Clear();
}
inline ::sapien::Renderer::server::proto::Pose* UpdateRenderAndTakePicturesReq::mutable_camera_poses(int index) {
  // @@protoc_insertion_point(field_mutable:sapien.Renderer.server.proto.UpdateRenderAndTakePicturesReq.camera_poses)
  return camera_poses_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::Renderer::server::proto::Pose >*
UpdateRenderAndTakePicturesReq::mutable_camera_poses() {
  // @@protoc_insertion_point(field_mutable_list:sapien.Renderer.server.proto.UpdateRenderAndTakePicturesReq.camera_poses)
  return &camera_poses_;
}
inline const ::sapien::Renderer::server::proto::Pose& UpdateRenderAndTakePicturesReq::_internal_camera_poses(int index) const {
  return camera_poses_.Get(index);
}
inline const ::sapien::Renderer::server::proto::Pose& UpdateRenderAndTakePicturesReq::camera_poses(int index) const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.UpdateRenderAndTakePicturesReq.camera_poses)
  return _internal_camera_poses(index);
}
inline ::sapien::Renderer::server::proto::Pose* UpdateRenderAndTakePicturesReq::_internal_add_camera_poses() {
  return camera_poses_.Add();
}
inline ::sapien::Renderer::server::proto::Pose* UpdateRenderAndTakePicturesReq::add_camera_poses() {
  // @@protoc_insertion_point(field_add:sapien.Renderer.server.proto.UpdateRenderAndTakePicturesReq.camera_poses)
  return _internal_add_camera_poses();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sapien::Renderer::server::proto::Pose >&
UpdateRenderAndTakePicturesReq::camera_poses() const {
  // @@protoc_insertion_point(field_list:sapien.Renderer.server.proto.UpdateRenderAndTakePicturesReq.camera_poses)
  return camera_poses_;
}

// repeated uint64 camera_ids = 4 [packed = true];
inline int UpdateRenderAndTakePicturesReq::_internal_camera_ids_size() const {
  return camera_ids_.size();
}
inline int UpdateRenderAndTakePicturesReq::camera_ids_size() const {
  return _internal_camera_ids_size();
}
inline void UpdateRenderAndTakePicturesReq::clear_camera_ids() {
  camera_ids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UpdateRenderAndTakePicturesReq::_internal_camera_ids(int index) const {
  return camera_ids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UpdateRenderAndTakePicturesReq::camera_ids(int index) const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.UpdateRenderAndTakePicturesReq.camera_ids)
  return _internal_camera_ids(index);
}
inline void UpdateRenderAndTakePicturesReq::set_camera_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  camera_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.UpdateRenderAndTakePicturesReq.camera_ids)
}
inline void UpdateRenderAndTakePicturesReq::_internal_add_camera_ids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  camera_ids_.Add(value);
}
inline void UpdateRenderAndTakePicturesReq::add_camera_ids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_camera_ids(value);
  // @@protoc_insertion_point(field_add:sapien.Renderer.server.proto.UpdateRenderAndTakePicturesReq.camera_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
UpdateRenderAndTakePicturesReq::_internal_camera_ids() const {
  return camera_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
UpdateRenderAndTakePicturesReq::camera_ids() const {
  // @@protoc_insertion_point(field_list:sapien.Renderer.server.proto.UpdateRenderAndTakePicturesReq.camera_ids)
  return _internal_camera_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
UpdateRenderAndTakePicturesReq::_internal_mutable_camera_ids() {
  return &camera_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
UpdateRenderAndTakePicturesReq::mutable_camera_ids() {
  // @@protoc_insertion_point(field_mutable_list:sapien.Renderer.server.proto.UpdateRenderAndTakePicturesReq.camera_ids)
  return _internal_mutable_camera_ids();
}

// -------------------------------------------------------------------

// CameraParamsReq

// uint64 scene_id = 1;
inline void CameraParamsReq::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CameraParamsReq::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CameraParamsReq::scene_id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.CameraParamsReq.scene_id)
  return _internal_scene_id();
}
inline void CameraParamsReq::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void CameraParamsReq::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.CameraParamsReq.scene_id)
}

// uint64 camera_id = 2;
inline void CameraParamsReq::clear_camera_id() {
  camera_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CameraParamsReq::_internal_camera_id() const {
  return camera_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CameraParamsReq::camera_id() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.CameraParamsReq.camera_id)
  return _internal_camera_id();
}
inline void CameraParamsReq::_internal_set_camera_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  camera_id_ = value;
}
inline void CameraParamsReq::set_camera_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_camera_id(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.CameraParamsReq.camera_id)
}

// float near = 3;
inline void CameraParamsReq::clear_near() {
  near_ = 0;
}
inline float CameraParamsReq::_internal_near() const {
  return near_;
}
inline float CameraParamsReq::near() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.CameraParamsReq.near)
  return _internal_near();
}
inline void CameraParamsReq::_internal_set_near(float value) {
  
  near_ = value;
}
inline void CameraParamsReq::set_near(float value) {
  _internal_set_near(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.CameraParamsReq.near)
}

// float far = 4;
inline void CameraParamsReq::clear_far() {
  far_ = 0;
}
inline float CameraParamsReq::_internal_far() const {
  return far_;
}
inline float CameraParamsReq::far() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.CameraParamsReq.far)
  return _internal_far();
}
inline void CameraParamsReq::_internal_set_far(float value) {
  
  far_ = value;
}
inline void CameraParamsReq::set_far(float value) {
  _internal_set_far(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.CameraParamsReq.far)
}

// float fx = 5;
inline void CameraParamsReq::clear_fx() {
  fx_ = 0;
}
inline float CameraParamsReq::_internal_fx() const {
  return fx_;
}
inline float CameraParamsReq::fx() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.CameraParamsReq.fx)
  return _internal_fx();
}
inline void CameraParamsReq::_internal_set_fx(float value) {
  
  fx_ = value;
}
inline void CameraParamsReq::set_fx(float value) {
  _internal_set_fx(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.CameraParamsReq.fx)
}

// float fy = 6;
inline void CameraParamsReq::clear_fy() {
  fy_ = 0;
}
inline float CameraParamsReq::_internal_fy() const {
  return fy_;
}
inline float CameraParamsReq::fy() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.CameraParamsReq.fy)
  return _internal_fy();
}
inline void CameraParamsReq::_internal_set_fy(float value) {
  
  fy_ = value;
}
inline void CameraParamsReq::set_fy(float value) {
  _internal_set_fy(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.CameraParamsReq.fy)
}

// float cx = 7;
inline void CameraParamsReq::clear_cx() {
  cx_ = 0;
}
inline float CameraParamsReq::_internal_cx() const {
  return cx_;
}
inline float CameraParamsReq::cx() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.CameraParamsReq.cx)
  return _internal_cx();
}
inline void CameraParamsReq::_internal_set_cx(float value) {
  
  cx_ = value;
}
inline void CameraParamsReq::set_cx(float value) {
  _internal_set_cx(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.CameraParamsReq.cx)
}

// float cy = 8;
inline void CameraParamsReq::clear_cy() {
  cy_ = 0;
}
inline float CameraParamsReq::_internal_cy() const {
  return cy_;
}
inline float CameraParamsReq::cy() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.CameraParamsReq.cy)
  return _internal_cy();
}
inline void CameraParamsReq::_internal_set_cy(float value) {
  
  cy_ = value;
}
inline void CameraParamsReq::set_cy(float value) {
  _internal_set_cy(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.CameraParamsReq.cy)
}

// float skew = 9;
inline void CameraParamsReq::clear_skew() {
  skew_ = 0;
}
inline float CameraParamsReq::_internal_skew() const {
  return skew_;
}
inline float CameraParamsReq::skew() const {
  // @@protoc_insertion_point(field_get:sapien.Renderer.server.proto.CameraParamsReq.skew)
  return _internal_skew();
}
inline void CameraParamsReq::_internal_set_skew(float value) {
  
  skew_ = value;
}
inline void CameraParamsReq::set_skew(float value) {
  _internal_set_skew(value);
  // @@protoc_insertion_point(field_set:sapien.Renderer.server.proto.CameraParamsReq.skew)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace server
}  // namespace Renderer
}  // namespace sapien

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::sapien::Renderer::server::proto::PrimitiveType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sapien::Renderer::server::proto::PrimitiveType>() {
  return ::sapien::Renderer::server::proto::PrimitiveType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_render_5fserver_2eproto
